[
    {
        "body": "ClassIsland 主要用于什么目的？",
        "correct_choices": [
            "在班级多媒体屏幕上显示课表信息",
            "作为一款灵动课表信息显示工具",
            "在Windows屏幕上显示课程和时间信息"
        ],
        "incorrect_choices": [
            "管理学生成绩",
            "在线授课平台",
            "制作教学课件",
            "学校的官方网站系统",
            "家校沟通软件"
        ]
    },
    {
        "body": "ClassIsland 的名称灵感来源于什么？",
        "correct_choices": [
            "iOS 灵动岛（Dynamic Island）功能",
            "苹果公司的灵动岛设计"
        ],
        "incorrect_choices": [
            "安卓小窗模式",
            "Windows 桌面小组件",
            "一种热带岛屿",
            "某款游戏的地名",
            "一本名为《课程之岛》的书"
        ]
    },
    {
        "body": "运行 ClassIsland 推荐的 .NET 版本是什么？",
        "correct_choices": [
            ".NET 8.0 桌面运行时",
            ".NET 8"
        ],
        "incorrect_choices": [
            ".NET Framework 4.7.2",
            ".NET 6.0",
            "Java 11",
            "Python 3.9",
            ".NET Core 3.1"
        ]
    },
    {
        "body": "ClassIsland 在 Windows 7 上运行时可能出现什么主要问题？",
        "correct_choices": [
            "严重的内存泄漏问题",
            "内存占用极高"
        ],
        "incorrect_choices": [
            "无法联网",
            "界面显示错乱",
            "无法播放声音",
            "CPU占用过高",
            "无法保存配置文件"
        ]
    },
    {
        "body": "ClassIsland 的官方文档网站域名是什么？",
        "correct_choices": [
            "docs.classisland.tech",
            "classisland.tech (文档在其子域名下)"
        ],
        "incorrect_choices": [
            "classisland.com/docs",
            "docs.class-island.com",
            "classisland.org/documentation",
            "help.classisland.net",
            "classisland.github.io/docs"
        ]
    },
    {
        "body": "ClassIsland 的主菜单通常通过什么方式访问？",
        "correct_choices": [
            "点击任务栏托盘图标",
            "右键点击任务栏托盘图标"
        ],
        "incorrect_choices": [
            "双击桌面快捷方式",
            "在开始菜单中找到并点击",
            "使用特定的快捷键组合",
            "通过命令行启动",
            "在浏览器中输入特定网址"
        ]
    },
    {
        "body": "ClassIsland 主界面默认停靠在屏幕的哪个位置？",
        "correct_choices": [
            "中上方",
            "屏幕顶部中央"
        ],
        "incorrect_choices": [
            "左上角",
            "右下角",
            "屏幕底部中央",
            "随鼠标位置动态变化",
            "用户上次关闭时的位置"
        ]
    },
    {
        "body": "在 ClassIsland 中，“组件”的主要作用是什么？",
        "correct_choices": [
            "自定义主界面上显示的信息",
            "扩展主界面显示内容单元",
            "显示如日期、时间、天气等信息"
        ],
        "incorrect_choices": [
            "管理插件的安装与卸载",
            "设置应用的主题颜色",
            "处理应用的更新逻辑",
            "备份和恢复用户数据",
            "播放提醒音效"
        ]
    },
    {
        "body": "ClassIsland 的“档案”主要存储什么信息？",
        "correct_choices": [
            "课表、时间表和科目等信息",
            "用户的课程安排数据",
            "教学相关的配置数据"
        ],
        "incorrect_choices": [
            "应用的日志文件",
            "插件的配置文件",
            "窗口的停靠位置设置",
            "主题颜色设置",
            "用户的登录凭据"
        ]
    },
    {
        "body": "ClassIsland 中的“时间表”定义了什么？",
        "correct_choices": [
            "一天中各个时间点，如上课、课间休息等",
            "学校的作息安排",
            "课程的开始和结束时间"
        ],
        "incorrect_choices": [
            "每周的课程顺序",
            "考试的具体日期",
            "节假日的放假安排",
            "教师的排班信息",
            "不同学期的课程计划"
        ]
    },
    {
        "body": "在 ClassIsland 的时间点类型中，哪种类型仅在主界面上显示一条分割线？",
        "correct_choices": [
            "分割线",
            "类型2 (TimeType 2)"
        ],
        "incorrect_choices": [
            "上课",
            "课间休息",
            "行动",
            "午休",
            "自习"
        ]
    },
    {
        "body": "ClassIsland 的“临时课表”设置会在什么时候清除？",
        "correct_choices": [
            "应用退出时",
            "第二天到来时",
            "手动清除时"
        ],
        "incorrect_choices": [
            "每周一自动清除",
            "系统重启时",
            "用户注销时",
            "月底自动清除",
            "学期结束后"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能主要目的是什么？",
        "correct_choices": [
            "在特定事件发生时/特定时间自动执行某些操作",
            "提高教学效率",
            "根据自定义规则触发行动"
        ],
        "incorrect_choices": [
            "自动生成课表",
            "自动更新软件版本",
            "自动备份用户数据",
            "自动调整屏幕亮度",
            "自动清理系统垃圾文件"
        ]
    },
    {
        "body": "ClassIsland 使用什么 UI 框架开发？",
        "correct_choices": [
            "WPF (Windows Presentation Foundation)",
            "WPF"
        ],
        "incorrect_choices": [
            "Windows Forms",
            "UWP (Universal Windows Platform)",
            "MAUI (.NET Multi-platform App UI)",
            "Electron",
            "Qt"
        ]
    },
    {
        "body": "ClassIsland 使用的 UI 主题库是什么？",
        "correct_choices": [
            "MaterialDesignInXamlToolkit",
            "Material Design In XAML Toolkit"
        ],
        "incorrect_choices": [
            "Fluent Design System",
            "Bootstrap for WPF",
            "MahApps.Metro",
            "Telerik UI for WPF",
            "DevExpress WPF Controls"
        ]
    },
    {
        "body": "ClassIsland 的应用设置文件通常命名为什么？",
        "correct_choices": [
            "Settings.json"
        ],
        "incorrect_choices": [
            "Config.xml",
            "AppSettings.ini",
            "ClassIsland.cfg",
            "UserPreferences.dat",
            "GlobalSettings.yaml"
        ]
    },
    {
        "body": "ClassIsland 的档案文件默认存储在哪个子目录下？",
        "correct_choices": [
            "Profiles/",
            "./Profiles"
        ],
        "incorrect_choices": [
            "Data/",
            "Configs/",
            "UserData/",
            "Schedules/",
            "Backups/"
        ]
    },
    {
        "body": "ClassIsland 应用图标的 SVG 文件名是什么？",
        "correct_choices": [
            "AppLogo_AppLogo.svg"
        ],
        "incorrect_choices": [
            "ClassIsland.svg",
            "Logo.svg",
            "Icon.svg",
            "AppIcon.svg",
            "MainLogo.svg"
        ]
    },
    {
        "body": "ClassIsland 的“回声洞”内容存储在哪个文本文件中？",
        "correct_choices": [
            "Tellings.txt"
        ],
        "incorrect_choices": [
            "Echoes.txt",
            "Messages.dat",
            "UserSayings.json",
            "Feedback.log",
            "Quotes.xml"
        ]
    },
    {
        "body": "ClassIsland 中，`TimeLayoutItem` 的 `TimeType` 为 0 代表什么？",
        "correct_choices": [
            "上课时间",
            "课程进行中"
        ],
        "incorrect_choices": [
            "课间休息",
            "分割线",
            "行动时间点",
            "午休时间",
            "自习课"
        ]
    },
    {
        "body": "ClassIsland 应用的开源许可证是什么？",
        "correct_choices": [
            "GNU General Public License v3.0 (GPLv3)",
            "GPLv3"
        ],
        "incorrect_choices": [
            "MIT License",
            "Apache License 2.0",
            "BSD 3-Clause License",
            "Mozilla Public License 2.0",
            "LGPLv3 (Lesser General Public License)"
        ]
    },
    {
        "body": "ClassIsland 核心库 (ClassIsland.Core) 的开源许可证是什么？",
        "correct_choices": [
            "GNU Lesser General Public License v3.0 (LGPLv3)",
            "LGPLv3"
        ],
        "incorrect_choices": [
            "MIT License",
            "Apache License 2.0",
            "BSD 3-Clause License",
            "Mozilla Public License 2.0",
            "GPLv3 (General Public License)"
        ]
    },
    {
        "body": "ClassIsland 使用哪个库来进行 YAML 解析？",
        "correct_choices": [
            "YamlDotNet"
        ],
        "incorrect_choices": [
            "Newtonsoft.Json (用于 JSON)",
            "System.Text.Json (用于 JSON)",
            "SharpYaml",
            "LibYAMLSharp",
            "AngleSharp (用于 HTML/XML)"
        ]
    },
    {
        "body": "ClassIsland 中用于显示 Markdown 内容的库是？",
        "correct_choices": [
            "MdXaml"
        ],
        "incorrect_choices": [
            "Markdig",
            "MarkdownSharp",
            "CommonMark.NET",
            "Markdown.XAML",
            "FlexMark.NET"
        ]
    },
    {
        "body": "在 ClassIsland 中，哪个服务负责管理当前课表状态与信息？",
        "correct_choices": [
            "LessonsService (ILessonsService)",
            "课程服务"
        ],
        "incorrect_choices": [
            "SettingsService",
            "UpdateService",
            "NotificationHostService",
            "ThemeService",
            "PluginService"
        ]
    },
    {
        "body": "ClassIsland 的插件清单文件通常命名为什么？",
        "correct_choices": [
            "manifest.yml"
        ],
        "incorrect_choices": [
            "plugin.json",
            "config.xml",
            "PluginManifest.xml",
            "extension.yaml",
            "plugin.ini"
        ]
    },
    {
        "body": "ClassIsland 的插件包文件扩展名是什么？",
        "correct_choices": [
            ".cipx"
        ],
        "incorrect_choices": [
            ".zip",
            ".dll",
            ".plugin",
            ".jar",
            ".csx"
        ]
    },
    {
        "body": "ClassIsland 的 IPC (跨进程通信) 服务基于什么技术？",
        "correct_choices": [
            "命名管道 (Named Pipes)",
            "dotnetCampus.Ipc"
        ],
        "incorrect_choices": [
            "共享内存 (Shared Memory)",
            "TCP/IP Sockets",
            "gRPC (本身不是基础，但 ClassIsland 也用 gRPC)",
            "WCF (Windows Communication Foundation)",
            "Message Queues"
        ]
    },
    {
        "body": "在 ClassIsland 的自动化功能中，“规则集” (Ruleset) 的作用是什么？",
        "correct_choices": [
            "定义行为的触发条件",
            "判断自动化是否应该执行"
        ],
        "incorrect_choices": [
            "定义要执行的具体操作",
            "存储自动化流程的配置",
            "管理插件的加载顺序",
            "设置应用的视觉主题",
            "记录自动化执行的日志"
        ]
    },
    {
        "body": "ClassIsland 的 `AttachedSettings` (附加设置) 主要用于什么目的？",
        "correct_choices": [
            "允许在特定对象（如科目、时间点）上覆盖全局设置",
            "为不同层级的配置提供定制化选项"
        ],
        "incorrect_choices": [
            "存储插件的独立配置文件",
            "管理应用的更新源信息",
            "定义窗口的停靠位置",
            "控制应用是否开机自启",
            "设置主界面的字体和颜色"
        ]
    },
    {
        "body": "ClassIsland 的设置页面基类是什么？",
        "correct_choices": [
            "SettingsPageBase",
            "ClassIsland.Core.Abstractions.Controls.SettingsPageBase"
        ],
        "incorrect_choices": [
            "Page",
            "UserControl",
            "Window",
            "PluginSettingsPage",
            "ConfigPageBase"
        ]
    },
    {
        "body": "ClassIsland 使用哪个库处理应用的更新下载？",
        "correct_choices": [
            "Downloader (Downloader NuGet package)",
            "Downloader"
        ],
        "incorrect_choices": [
            "System.Net.Http.HttpClient (直接使用)",
            "Octokit (用于 GitHub API)",
            "SharpCompress (用于解压缩)",
            "WebClient",
            "NuGet.Client"
        ]
    },
    {
        "body": "ClassIsland 使用哪个库与 GitHub API 交互（例如，检查更新）？",
        "correct_choices": [
            "Octokit"
        ],
        "incorrect_choices": [
            "System.Net.Http.HttpClient (直接使用)",
            "RestSharp",
            "Flurl.Http",
            "GitHubSharp",
            "GraphQL.Client"
        ]
    },
    {
        "body": "ClassIsland 中，用于显示任务栏托盘图标的库是什么？",
        "correct_choices": [
            "H.NotifyIcon.Wpf",
            "H.NotifyIcon"
        ],
        "incorrect_choices": [
            "Windows Forms NotifyIcon (直接使用)",
            "Hardcodet.NotifyIcon.Wpf",
            "ToastNotifications.Wpf",
            "MahApps.Metro.Controls",
            "WPF Extended Toolkit"
        ]
    },
    {
        "body": "ClassIsland 的文档使用什么工具构建？",
        "correct_choices": [
            "VuePress",
            "VuePress v2"
        ],
        "incorrect_choices": [
            "Docusaurus",
            "MkDocs",
            "Sphinx",
            "Jekyll",
            "Hugo"
        ]
    },
    {
        "body": "ClassIsland 文档使用了哪个 VuePress 主题？",
        "correct_choices": [
            "vuepress-theme-hope"
        ],
        "incorrect_choices": [
            "VuePress Default Theme",
            "VitePress Default Theme",
            "Docute",
            "Material for MkDocs (非 VuePress)",
            "Just the Docs (Jekyll theme)"
        ]
    },
    {
        "body": "在 ClassIsland 的设置中，`WindowDockingLocation` 属性控制什么？",
        "correct_choices": [
            "主界面的停靠位置",
            "课表信息窗口在屏幕上的位置"
        ],
        "incorrect_choices": [
            "设置窗口的默认位置",
            "插件窗口的停靠位置",
            "提醒通知的弹出位置",
            "任务栏图标的位置",
            "窗口的层级（置顶或置底）"
        ]
    },
    {
        "body": "ClassIsland 中的 `ILessonsService.CurrentSubject` 属性在课间休息时，其 `Name` 属性通常是什么？",
        "correct_choices": [
            "课间休息的自定义名称",
            "默认为“课间休息”"
        ],
        "incorrect_choices": [
            "null",
            "\"\"",
            "下一节课的科目名称",
            "上一节课的科目名称",
            "\"BreakTime\""
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileService` 主要负责什么？",
        "correct_choices": [
            "加载和保存用户档案 (Profile)",
            "管理课表、时间表和科目数据"
        ],
        "incorrect_choices": [
            "处理应用更新逻辑",
            "管理主界面组件的显示",
            "控制应用的主题和外观",
            "提供天气信息",
            "注册和管理插件"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 使用哪个 NuGet 包进行版本信息索引的发布？",
        "correct_choices": [
            "AppCenter (Microsoft App Center Distribute)",
            "GitHub Releases (通过 Octokit)"
        ],
        "incorrect_choices": [
            "NuGet.Server",
            "Squirrel.Windows",
            "ClickOnce",
            "Nexus Repository Manager",
            "Artifactory"
        ]
    },
    {
        "body": "ClassIsland 插件的入口类需要继承哪个基类？",
        "correct_choices": [
            "ClassIsland.Core.Abstractions.PluginBase",
            "PluginBase"
        ],
        "incorrect_choices": [
            "System.AddIn.AddInBase",
            "Microsoft.Extensions.Hosting.IHostedService",
            "UserControl",
            "DependencyObject",
            "IPlugin"
        ]
    },
    {
        "body": "ClassIsland 插件的入口类需要使用哪个特性 (Attribute) 标记？",
        "correct_choices": [
            "ClassIsland.Core.Attributes.PluginEntrance",
            "PluginEntranceAttribute",
            "PluginEntrance"
        ],
        "incorrect_choices": [
            "System.ComponentModel.Composition.ExportAttribute",
            "AddInAttribute",
            "ServiceContractAttribute",
            "PluginManifestAttribute",
            "ExtensionAttribute"
        ]
    },
    {
        "body": "ClassIsland 的主窗口 (`MainWindow.xaml.cs`) 使用哪个服务来处理主题变化？",
        "correct_choices": [
            "ThemeService (IThemeService)",
            "主题服务"
        ],
        "incorrect_choices": [
            "SettingsService",
            "WallpaperPickingService (用于颜色提取)",
            "PaletteHelper (MaterialDesignThemes)",
            "AppearanceService",
            "StyleManager"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ComponentSettings` 模型中，`HideOnRule` 属性的作用是什么？",
        "correct_choices": [
            "指示组件是否应根据特定规则自动隐藏",
            "控制组件在满足规则集条件时的可见性"
        ],
        "incorrect_choices": [
            "设置组件的默认隐藏状态",
            "定义组件在全屏模式下是否隐藏",
            "指定组件在鼠标移入时是否淡化",
            "控制组件是否可以被用户手动隐藏",
            "标记组件是否为容器组件"
        ]
    },
    {
        "body": "ClassIsland 中的 `FileFolderService` 主要用于什么？",
        "correct_choices": [
            "创建应用所需的文件夹结构",
            "处理文件的复制和备份操作",
            "管理自动备份逻辑"
        ],
        "incorrect_choices": [
            "下载应用更新文件",
            "加载插件包",
            "解析 Excel 文件以导入课表",
            "存储和读取用户设置",
            "提供天气数据缓存"
        ]
    },
    {
        "body": "ClassIsland 的哪个服务负责从NTP服务器同步精确时间？",
        "correct_choices": [
            "ExactTimeService (IExactTimeService)",
            "精确时间服务"
        ],
        "incorrect_choices": [
            "LessonsService (用于计时)",
            "ClockComponent (用于显示)",
            "SystemTimeService (虚构)",
            "NtpSyncService (虚构)",
            "Windows Time Service (系统服务，但非 CI 内部服务)"
        ]
    },
    {
        "body": "ClassIsland 的 `WallpaperPickingService` 的主要功能是什么？",
        "correct_choices": [
            "从系统壁纸或屏幕截图中提取主题色",
            "提供壁纸颜色供应用主题使用"
        ],
        "incorrect_choices": [
            "自动更换系统壁纸",
            "下载和管理壁纸图片",
            "提供动态壁纸效果",
            "设置主窗口的背景图片",
            "调整屏幕的显示参数"
        ]
    },
    {
        "body": "ClassIsland 的 `App.xaml.cs` 文件中，`App_OnDispatcherUnhandledException` 方法的作用是什么？",
        "correct_choices": [
            "处理应用程序中未捕获的UI线程异常",
            "在发生严重错误时显示崩溃窗口或采取安全措施"
        ],
        "incorrect_choices": [
            "启动应用程序的主窗口",
            "加载应用程序的初始设置",
            "注册应用内导航的URI协议",
            "处理应用的更新逻辑",
            "初始化插件服务"
        ]
    },
    {
        "body": "在 ClassIsland 中，`AutomationService` 存储自动化配置的默认文件夹路径是什么？",
        "correct_choices": [
            "Config/Automations/",
            "应用配置目录下的 Automations 文件夹"
        ],
        "incorrect_choices": [
            "Profiles/Automations/",
            "Plugins/Automations/",
            "Data/Automations/",
            "Cache/Automations/",
            "AutomationRules/"
        ]
    },
    {
        "body": "ClassIsland 中，`IpcRoutedNotifyIds` 类包含什么内容？",
        "correct_choices": [
            "跨进程通信的路由通知标识符",
            "IPC 事件的 ID 常量"
        ],
        "incorrect_choices": [
            "已连接的 IPC 对等端列表",
            "IPC 服务接口的定义",
            "用于序列化 IPC 消息的 Protobuf 定义",
            "IPC 连接的管道名称",
            "IPC 错误代码列表"
        ]
    },
    {
        "body": "ClassIsland 的 `ComponentPresenter.xaml.cs` 中，`IsOnMainWindow` 依赖属性的作用是什么？",
        "correct_choices": [
            "指示组件是否在主窗口上呈现，从而影响其样式和行为",
            "控制组件是否应用主窗口特定的字体大小等资源"
        ],
        "incorrect_choices": [
            "设置组件是否为主窗口的子控件",
            "决定组件是否响应主窗口的鼠标事件",
            "标记组件是否应该随主窗口一起移动",
            "控制组件是否在主窗口启动时自动加载",
            "指定组件在主窗口中的停靠位置"
        ]
    },
    {
        "body": "ClassIsland 的文档使用什么工具生成 PDF 版本？",
        "correct_choices": [
            "@condorhero/vuepress-plugin-export-pdf-v2",
            "一个基于 Puppeteer 的 VuePress 插件"
        ],
        "incorrect_choices": [
            "Pandoc",
            "LaTeX",
            "Adobe Acrobat Pro",
            "wkhtmltopdf",
            "Chrome 浏览器的打印到 PDF 功能 (直接)"
        ]
    },
    {
        "body": "在 ClassIsland 的 GitHub Actions 工作流程中，`deploy-docs.yml` 的主要目的是什么？",
        "correct_choices": [
            "构建并部署文档到 GitHub Pages",
            "自动化文档的发布流程"
        ],
        "incorrect_choices": [
            "构建和发布 ClassIsland 应用程序的二进制文件",
            "运行单元测试和集成测试",
            "自动生成插件包 (.cipx 文件)",
            "检查代码格式和静态分析",
            "更新项目的依赖项"
        ]
    },
    {
        "body": "ClassIsland 项目的 `.gitattributes` 文件中，`* text=auto` 的作用是什么？",
        "correct_choices": [
            "自动处理代码文件的行尾换行符 (LF/CRLF)",
            "确保跨平台的行尾一致性"
        ],
        "incorrect_choices": [
            "设置所有文本文件的默认编码为 UTF-8",
            "标记所有文件为文本文件以便于 Git diff",
            "配置特定文件类型的合并策略",
            "忽略所有二进制文件的行尾转换",
            "指定文本文件的默认编辑器"
        ]
    },
    {
        "body": "ClassIsland 项目的 `cliff.toml` 文件主要用于什么？",
        "correct_choices": [
            "自动生成应用的更新日志 (Changelog)",
            "配置 git-cliff 工具的行为"
        ],
        "incorrect_choices": [
            "定义项目的依赖项和构建脚本",
            "存储应用的全局配置文件模板",
            "配置持续集成 (CI) 服务器的行为",
            "管理项目的版本控制标签",
            "设置代码编辑器的格式化规则"
        ]
    },
    {
        "body": "ClassIsland 的 `App.xaml.cs` 中的 `Mutex` 对象主要用于什么目的？",
        "correct_choices": [
            "防止应用程序的多个实例同时运行",
            "确保同一时间只有一个 ClassIsland 进程在运行"
        ],
        "incorrect_choices": [
            "管理多线程同步问题",
            "保护配置文件不被并发修改",
            "控制对共享资源的访问",
            "实现跨进程通信的锁定机制",
            "确保应用更新过程的原子性"
        ]
    },
    {
        "body": "在 ClassIsland 中，`TimeRule` 类定义了什么？",
        "correct_choices": [
            "课表的触发规则，如星期几、单双周等",
            "决定一个 `ClassPlan` 何时生效的条件"
        ],
        "incorrect_choices": [
            "单个时间点的开始和结束时间",
            "整个学校的作息时间表",
            "自动化任务的定时执行规则",
            "课程提醒的提前通知时间",
            "主界面组件的显示/隐藏规则"
        ]
    },
    {
        "body": "ClassIsland 的 `WeatherService` 使用哪个 API 获取天气信息？",
        "correct_choices": [
            "小米天气 API (weatherapi.market.xiaomi.com)",
            "小米天气"
        ],
        "incorrect_choices": [
            "和风天气 API",
            "OpenWeatherMap API",
            "AccuWeather API",
            "中国天气网 API",
            "彩云天气 API"
        ]
    },
    {
        "body": "ClassIsland 的 `AttachedSettingsControlInfo` 特性用于什么？",
        "correct_choices": [
            "为附加设置控件提供元数据，如 GUID、名称、图标",
            "注册附加设置控件到系统中"
        ],
        "incorrect_choices": [
            "定义附加设置本身的数据结构",
            "控制附加设置控件的显示/隐藏逻辑",
            "指定附加设置可以附加到的目标类型 (如科目、时间点)",
            "存储附加设置的当前值",
            "处理附加设置的依赖关系"
        ]
    },
    {
        "body": "ClassIsland 中，`ComponentInfo` 特性的 `Guid` 属性的作用是什么？",
        "correct_choices": [
            "作为组件的唯一标识符",
            "用于在配置文件和系统中识别特定的组件类型"
        ],
        "incorrect_choices": [
            "定义组件的显示名称",
            "指定组件的图标资源",
            "描述组件的功能",
            "链接到组件的设置界面类型",
            "标记组件是否为容器组件"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileAnalyzeService` 主要解决什么问题？",
        "correct_choices": [
            "分析档案中附加设置的依赖和覆盖关系",
            "构建档案内可附加设置对象的依赖关系图"
        ],
        "incorrect_choices": [
            "检查档案配置文件的完整性和正确性",
            "优化档案文件的加载速度",
            "提供档案文件的导入导出功能",
            "自动修复档案中的错误配置",
            "分析用户对档案的使用频率"
        ]
    },
    {
        "body": "在 ClassIsland 的 `PluginService.cs` 中，`PluginsRootPath` 常量指向哪个目录？",
        "correct_choices": [
            "应用根目录下的 Plugins 文件夹",
            "./Plugins/"
        ],
        "incorrect_choices": [
            "应用配置目录下的 Plugins 文件夹",
            "应用缓存目录下的 Plugins 文件夹",
            "系统 Program Files 下的 ClassIsland Plugins 目录",
            "用户文档目录下的 ClassIsland Plugins 文件夹",
            "插件包所在的临时解压目录"
        ]
    },
    {
        "body": "ClassIsland 的 `SpeechService` 支持哪些语音合成源（TTS）？",
        "correct_choices": [
            "系统TTS (SystemSpeechService)",
            "EdgeTTS (EdgeTtsService)",
            "GPT-SoVITS (GptSoVitsService)"
        ],
        "incorrect_choices": [
            "百度语音合成",
            "讯飞语音合成",
            "谷歌云TTS",
            "亚马逊Polly",
            "Azure认知服务TTS"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在检查更新时，元数据索引文件的主要来源是？",
        "correct_choices": [
            "get.classisland.tech 上的 index.json",
            "一个包含版本和下载信息的 JSON 文件"
        ],
        "incorrect_choices": [
            "GitHub Releases API",
            "Microsoft App Center API",
            "本地配置文件",
            "内置的更新服务器地址列表",
            "通过 P2P 网络分发的更新信息"
        ]
    },
    {
        "body": "在 ClassIsland 的 `MainWindow.xaml.cs` 中，`SetBottom()` 方法的主要作用是什么？",
        "correct_choices": [
            "当窗口层级设置为置底时，确保窗口在其他窗口下方",
            "根据设置将主窗口置于桌面底层"
        ],
        "incorrect_choices": [
            "将主窗口停靠在屏幕底部",
            "最小化主窗口到任务栏",
            "设置主窗口的背景为透明",
            "在主窗口底部显示通知栏",
            "调整主窗口内容使其底部对齐"
        ]
    },
    {
        "body": "ClassIsland 的 `ConsoleService.cs` 中的 `AsciiLogo` 是从哪个文件加载的？",
        "correct_choices": [
            "Assets/AsciiLogo.txt"
        ],
        "incorrect_choices": [
            "Assets/Logo.txt",
            "Resources/AsciiArt.txt",
            "Config/Branding.txt",
            "Branding/AppLogo.ascii",
            "Data/StartupLogo.txt"
        ]
    },
    {
        "body": "ClassIsland 中的 `NumbericTextBox` 控件与普通 `TextBox` 相比，主要增加了什么功能？",
        "correct_choices": [
            "限制输入为数值类型",
            "可以设置最大值、最小值和精度"
        ],
        "incorrect_choices": [
            "支持富文本编辑",
            "自动进行拼写检查",
            "可以绑定到数据库字段",
            "提供密码输入模式",
            "内置多行文本编辑功能"
        ]
    },
    {
        "body": "ClassIsland 的 `ExcelImportWindow.xaml.cs` 中，`LoadExcelWorkbook` 方法使用了哪个库来加载 Excel 文件？",
        "correct_choices": [
            "unvell.ReoGrid (通过 ReoGridControl)",
            "ReoGrid"
        ],
        "incorrect_choices": [
            "EPPlus",
            "NPOI",
            "ClosedXML",
            "Microsoft.Office.Interop.Excel (COM)",
            "OpenXML SDK"
        ]
    },
    {
        "body": "ClassIsland 的 `ColorOctTreeNode.cs` 文件实现了一种什么算法或数据结构？",
        "correct_choices": [
            "八叉树颜色量化算法",
            "用于从图像中提取主色调的八叉树"
        ],
        "incorrect_choices": [
            "K-均值聚类颜色提取",
            "中位切分颜色量化",
            "图像的快速傅里叶变换",
            "基于直方图的颜色分析",
            "图像超分辨率算法"
        ]
    },
    {
        "body": "在 ClassIsland 的主题定义中，`MaterialDesignPaper` 通常代表什么颜色？",
        "correct_choices": [
            "控件的背景色，通常比主背景色浅或深一点以区分层次",
            "卡片、对话框等元素的背景色"
        ],
        "incorrect_choices": [
            "应用的主品牌色",
            "高亮或强调元素的颜色",
            "文本和图标的颜色",
            "窗口边框的颜色",
            "禁用状态下控件的颜色"
        ]
    },
    {
        "body": "ClassIsland 的 `IUriNavigationService.UriScheme` 常量定义的值是什么？",
        "correct_choices": [
            "classisland"
        ],
        "incorrect_choices": [
            "http",
            "class-island",
            "cisland",
            "app",
            "plugin"
        ]
    },
    {
        "body": "在 ClassIsland 的组件模型中，如果一个组件被标记为容器组件 (ContainerComponent)，它通常具有什么能力？",
        "correct_choices": [
            "可以承载和显示其他组件",
            "其设置中会包含一个子组件集合"
        ],
        "incorrect_choices": [
            "只能显示文本或图片",
            "总是固定在主窗口的特定位置",
            "具有独立的更新机制",
            "不能被用户自定义设置",
            "负责处理应用的全局事件"
        ]
    },
    {
        "body": "ClassIsland 使用什么技术实现后台 UI 线程的异步操作，例如在 `AsyncBox.cs` 中？",
        "correct_choices": [
            "HostVisual 和 VisualTargetPresentationSource",
            "创建一个新的 Dispatcher 线程来承载 UI 元素"
        ],
        "incorrect_choices": [
            "Task Parallel Library (TPL) 直接操作 UI",
            "BackgroundWorker 组件",
            "Control.Invoke/BeginInvoke (Windows Forms 概念)",
            "Web Workers (浏览器技术)",
            "Actor Model"
        ]
    },
    {
        "body": "ClassIsland 的 `ViewModel` 通常基于哪个 MVVM 框架或库？",
        "correct_choices": [
            "CommunityToolkit.Mvvm (MVVM Toolkit)",
            "MVVM Toolkit"
        ],
        "incorrect_choices": [
            "Prism Library",
            "MVVM Light Toolkit",
            "Caliburn.Micro",
            "ReactiveUI",
            "手写 INotifyPropertyChanged 实现"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsPageInfo` 特性中，`Category` 属性的作用是什么？",
        "correct_choices": [
            "定义设置页面在导航栏中的分组类别",
            "影响设置页面的显示顺序和可见性（如调试页面）"
        ],
        "incorrect_choices": [
            "设置页面的唯一ID",
            "设置页面的显示名称",
            "指定设置页面关联的图标",
            "控制设置页面是否可以被集控策略禁用",
            "标记设置页面是否为插件提供"
        ]
    },
    {
        "body": "在 ClassIsland 的文档 (`classisland-docs-next`) 中，导航栏和侧边栏的配置通常在哪个目录下？",
        "correct_choices": [
            "src/.vuepress/navbar 和 src/.vuepress/sidebar",
            "VuePress 配置目录下的 navbar 和 sidebar 子目录"
        ],
        "incorrect_choices": [
            "src/config/",
            "docs/navigation/",
            "theme/layout/",
            "content/menus/",
            "src/.vuepress/components/"
        ]
    },
    {
        "body": "ClassIsland 文档部署到 GitHub Pages 时，`.github/workflows/deploy-docs.yml` 工作流程中使用了哪个包管理器来安装依赖？",
        "correct_choices": [
            "pnpm"
        ],
        "incorrect_choices": [
            "npm",
            "yarn",
            "bower",
            "nuget (用于 .NET)",
            "pip (用于 Python)"
        ]
    },
    {
        "body": "ClassIsland 的自动备份功能默认的备份间隔是多少天？",
        "correct_choices": [
            "7 天",
            "一周"
        ],
        "incorrect_choices": [
            "1 天",
            "3 天",
            "14 天",
            "30 天",
            "每次启动时"
        ]
    },
    {
        "body": "ClassIsland 的自动化功能中，“行动 (Action)”和“触发器 (Trigger)”的关系是什么？",
        "correct_choices": [
            "触发器定义了何时执行，行动定义了执行什么操作",
            "一个或多个触发器可以触发一个包含多个行动的行动组"
        ],
        "incorrect_choices": [
            "行动是触发器的子集",
            "触发器是行动的别名",
            "行动和触发器是相互独立的，没有直接关系",
            "一个行动只能被一个特定的触发器激活",
            "触发器是行动执行后的结果反馈"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个组件的 `IsResourceOverridingEnabled` 设置为 true，会发生什么？",
        "correct_choices": [
            "该组件将使用其自身定义的字体大小、颜色等资源，而不是全局设置",
            "组件的外观设置将覆盖应用级别的外观设置"
        ],
        "incorrect_choices": [
            "该组件将被强制加载，即使规则集要求隐藏它",
            "该组件的设置将不能被附加设置覆盖",
            "该组件将以管理员权限运行",
            "该组件会独占一个 UI 线程进行渲染",
            "该组件将忽略鼠标穿透设置"
        ]
    },
    {
        "body": "ClassIsland 的主程序集名称是什么？",
        "correct_choices": [
            "ClassIsland",
            "ClassIsland.exe (可执行文件名)"
        ],
        "incorrect_choices": [
            "ClassIsland.Core",
            "ClassIsland.App",
            "MainApp",
            "ClassIsland.UI",
            "IslandCore"
        ]
    },
    {
        "body": "在 ClassIsland 中，`TimeLayout` 的 `Layouts` 集合发生变化时，会如何影响关联的 `ClassPlan`？",
        "correct_choices": [
            "`ClassPlan` 中的 `Classes` 集合会尝试调整其大小以匹配 `TimeLayout` 中上课类型时间点的数量",
            "课程列表的长度会与时间表中“上课”类型的时间点数量保持一致"
        ],
        "incorrect_choices": [
            "`ClassPlan` 会自动切换到另一个 `TimeLayout`",
            "`ClassPlan` 的触发规则会被重置",
            "`TimeLayout` 的更改不会影响已关联的 `ClassPlan`",
            "所有关联的 `ClassPlan` 会被标记为禁用",
            "会弹出一个警告提示用户手动更新 `ClassPlan`"
        ]
    },
    {
        "body": "ClassIsland 的 `Default.json` 档案文件如果不存在，应用启动时会发生什么？",
        "correct_choices": [
            "应用会创建一个新的 `Default.json` 档案，可能包含预设的科目信息",
            "会生成一个包含默认科目的新档案文件"
        ],
        "incorrect_choices": [
            "应用无法启动，并提示错误",
            "应用会尝试加载 `Backup.json`",
            "应用会进入恢复模式",
            "应用会提示用户选择一个已存在的档案或创建新档案",
            "应用会加载一个完全空白的档案，不包含任何科目或时间表"
        ]
    },
    {
        "body": "ClassIsland 的 `MemoryWatchDogService` 的主要作用是什么？",
        "correct_choices": [
            "监控应用的内存使用情况，在超过阈值时尝试安全重启",
            "防止应用因内存泄漏导致系统不稳定"
        ],
        "incorrect_choices": [
            "优化应用的内存分配以提高性能",
            "定期清理应用缓存以释放内存",
            "记录应用的内存使用历史供分析",
            "提供内存调试工具给开发者",
            "限制插件的内存使用上限"
        ]
    },
    {
        "body": "ClassIsland 的 `SentryLoggerProvider` 的用途是什么？",
        "correct_choices": [
            "将应用的错误和崩溃信息上报到 Sentry 服务",
            "作为 .NET 日志系统的一个提供程序，用于集成 Sentry"
        ],
        "incorrect_choices": [
            "将日志信息记录到本地文件",
            "在应用内显示实时日志信息",
            "过滤和格式化日志消息",
            "提供日志的远程查看功能",
            "管理日志的保留策略"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果用户在设置中启用了“兼容透明模式”，会对窗口产生什么影响？",
        "correct_choices": [
            "应用将使用 `AllowsTransparency=true` 实现窗口透明，可能性能较低",
            "可能会解决一些窗口叠加异常或黑底问题，但不支持全屏提醒特效"
        ],
        "incorrect_choices": [
            "窗口将变得完全不透明以提高兼容性",
            "窗口将使用更高级的 DWM 特效实现透明，性能更好",
            "窗口的透明度设置将被忽略",
            "只有提醒窗口会应用此模式",
            "窗口将能够更好地穿透其他置顶窗口"
        ]
    },
    {
        "body": "ClassIsland 的 `App.xaml.cs` 中，`App_OnStartup` 方法在应用启动时执行了哪些关键操作？",
        "correct_choices": [
            "初始化依赖注入容器 (Host)",
            "处理命令行参数",
            "检查是否存在其他实例 (Mutex)",
            "加载设置和档案"
        ],
        "incorrect_choices": [
            "立即显示主窗口",
            "创建所有插件的实例",
            "直接连接到更新服务器检查更新",
            "清空所有缓存文件",
            "注册所有系统全局快捷键"
        ]
    },
    {
        "body": "在 ClassIsland 中，`TimeLayoutItem` 的 `IsHideDefault` 属性如果为 true，会有什么效果？",
        "correct_choices": [
            "该时间点在主界面上默认是折叠或隐藏的，除非当前正处于该时间点",
            "该上课类型的时间点默认不显示课程名称，只显示简称"
        ],
        "incorrect_choices": [
            "该时间点将从时间表中彻底移除",
            "该时间点对应的课程将不参与多周轮换",
            "该时间点将不会触发任何提醒",
            "该时间点在课表编辑界面中不可见",
            "该时间点会被标记为“自习”"
        ]
    },
    {
        "body": "ClassIsland 的 `NotificationHostService` 如何决定提醒的显示顺序？",
        "correct_choices": [
            "根据提醒提供方在设置中的优先级列表",
            "使用一个优先队列 (PriorityQueue) 管理提醒请求"
        ],
        "incorrect_choices": [
            "按照提醒请求到达的时间顺序 (FIFO)",
            "随机显示",
            "根据提醒内容的紧急程度（由提供方定义）",
            "按照提醒提供方 GUID 的字母顺序",
            "用户手动选择下一个要显示的提醒"
        ]
    },
    {
        "body": "ClassIsland 的 `ActionService` 中，`Invoke` 和 `Revert` 方法的主要区别是什么？",
        "correct_choices": [
            "`Invoke` 执行一个行动组，`Revert` 在条件不满足或手动调用时恢复行动组造成的影响",
            "`Revert` 通常用于撤销 `Invoke` 执行的修改，如果行动组设置了 `IsRevertEnabled`"
        ],
        "incorrect_choices": [
            "`Invoke` 用于测试行动，`Revert` 用于实际执行",
            "`Revert` 是 `Invoke` 的别名，功能相同",
            "`Invoke` 只能执行单个行动，`Revert` 可以执行多个",
            "`Revert` 会记录行动的执行历史，`Invoke` 不会",
            "`Invoke` 是同步执行，`Revert` 是异步执行"
        ]
    },
    {
        "body": "在 ClassIsland 的 `MainWindow.xaml.cs` 中，如果 `ViewModel.Settings.WindowLayer` 设置为 0，主窗口通常会处于什么状态？",
        "correct_choices": [
            "置底状态，显示在其他大多数窗口的后方",
            "窗口层级较低，除非被提醒临时置顶"
        ],
        "incorrect_choices": [
            "置顶状态，显示在所有其他窗口的前方",
            "普通窗口层级，行为与其他应用窗口类似",
            "窗口将被隐藏",
            "窗口会变为全屏模式",
            "窗口会固定在任务栏上方"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileService` 在加载管理档案时，版本信息存储在哪个对象中？",
        "correct_choices": [
            "ManagementVersions (IManagementService.Versions)",
            "集控版本信息对象 (ManagementService.Versions)"
        ],
        "incorrect_choices": [
            "Profile 本身",
            "ManagementManifest",
            "ManagementSettings",
            "本地的 manifest.json 文件",
            "Settings.json 文件"
        ]
    },
    {
        "body": "ClassIsland 中，`TopmostEffectWindow` 的主要用途是什么？",
        "correct_choices": [
            "显示全屏的提醒强调特效，如水波纹效果",
            "创建一个独立的、始终置顶的窗口来承载视觉特效"
        ],
        "incorrect_choices": [
            "作为应用的主窗口，显示课表信息",
            "显示应用的设置对话框",
            "播放背景音乐或音效",
            "处理应用的更新进度显示",
            "管理窗口的停靠和布局"
        ]
    },
    {
        "body": "在 ClassIsland 的项目结构中，`Walterlv` 文件夹下的代码主要提供了什么功能？",
        "correct_choices": [
            "一些通用的 WPF 辅助类，如异步 UI 加载 (AsyncBox) 和线程调度",
            "由 Walterlv 贡献或其开源项目引入的辅助代码"
        ],
        "incorrect_choices": [
            "应用的核心业务逻辑，如课程处理",
            "网络通信和 API 调用",
            "应用的国际化和本地化支持",
            "插件系统的基础架构",
            "数据存储和数据库交互"
        ]
    },
    {
        "body": "ClassIsland 中，如果一个 `AttachedSettingsControlInfo` 的 `HasEnabledState` 属性为 false，通常意味着什么？",
        "correct_choices": [
            "该附加设置没有独立的启用/禁用开关，总是根据其是否存在来决定是否应用",
            "该附加设置控件在 UI 上不会显示启用/禁用切换按钮"
        ],
        "incorrect_choices": [
            "该附加设置总是禁用的",
            "该附加设置只能通过代码启用或禁用",
            "该附加设置是全局唯一的，不能在多个对象上附加",
            "该附加设置不需要用户配置，会自动应用默认值",
            "该附加设置仅用于显示信息，不包含可配置项"
        ]
    },
    {
        "body": "ClassIsland 的 `ClassPlanGroup` 模型中，`DefaultGroupGuid` 代表什么？",
        "correct_choices": [
            "默认课表群的唯一标识符 (GUID)",
            "一个预定义的 GUID，用于标识非特定分组的课表"
        ],
        "incorrect_choices": [
            "全局课表群的 GUID",
            "当前选中的课表群的 GUID",
            "临时课表群的 GUID",
            "一个用于生成新课表群 GUID 的模板",
            "与课表群相关的错误代码"
        ]
    },
    {
        "body": "ClassIsland 使用哪个 NuGet 包来处理Excel文件的读写（如在 ExcelImportWindow 中）？",
        "correct_choices": [
            "EPPlus",
            "OfficeOpenXml.Core.ExcelPackage (EPPlus 的一部分)"
        ],
        "incorrect_choices": [
            "NPOI",
            "ClosedXML",
            "ExcelDataReader",
            "Microsoft.Office.Interop.Excel (COM)",
            "ReoGrid (用于界面显示和编辑)"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AttachedSettingsControlPresenter` 控件中，`IsDependencyMode` 属性为 true 时，控件通常用于什么场景？",
        "correct_choices": [
            "在附加设置的继承关系或依赖关系视图中显示，通常仅展示信息",
            "显示一个附加设置节点在依赖链中的状态，而不是作为主要的编辑界面"
        ],
        "incorrect_choices": [
            "表示该附加设置依赖于另一个插件才能工作",
            "启用控件的调试模式，显示额外信息",
            "使控件以只读模式运行，禁止用户修改",
            "强制控件使用全局设置，忽略局部覆盖",
            "允许控件动态加载其依赖的资源"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsWindowNew.xaml.cs` 中，`LaunchSettingsPage` 属性的作用是什么？",
        "correct_choices": [
            "指定设置窗口启动时默认打开的设置页面 ID",
            "控制设置窗口初次导航的目标页面"
        ],
        "incorrect_choices": [
            "存储用户上次访问的设置页面 ID",
            "设置当前正在显示的页面的标题",
            "定义设置页面导航栏的布局",
            "缓存所有已加载的设置页面实例",
            "设置一个备用页面，在导航失败时显示"
        ]
    },
    {
        "body": "在 ClassIsland 项目的 `.github/workflows` 目录下，`close_stale_issues.yml` 文件定义的工作流程的主要目的是什么？",
        "correct_choices": [
            "自动关闭长时间未活动的 Issues 和 Pull Requests",
            "管理 GitHub Issues，标记并关闭陈旧的问题"
        ],
        "incorrect_choices": [
            "构建和发布 ClassIsland 的新版本",
            "自动部署项目文档到 GitHub Pages",
            "在每次代码提交时运行单元测试",
            "分析 Issues 的相似度以避免重复提交",
            "自动为新的 Issues 添加标签和分配处理人"
        ]
    },
    {
        "body": "ClassIsland 的 `ClassPlan` 模型中，`OverlaySourceId` 属性通常在什么情况下被设置？",
        "correct_choices": [
            "当一个课表是作为另一个课表的临时层 (overlay) 创建时，它指向源课表的 ID",
            "用于标识临时层课表的原始来源"
        ],
        "incorrect_choices": [
            "指向该课表使用的时间表的 ID",
            "存储与该课表关联的组件配置 ID",
            "记录创建该课表的用户的 ID",
            "链接到外部课表数据源的 ID",
            "当课表被集控覆盖时，存储原始本地课表的 ID"
        ]
    },
    {
        "body": "ClassIsland 的 `DetachedSignatureProcessor.cs` 文件提供了什么功能？",
        "correct_choices": [
            "处理和验证 PGP (Pretty Good Privacy) 分离签名",
            "用于校验数据的完整性和来源真实性，例如更新元数据"
        ],
        "incorrect_choices": [
            "生成和验证文件的 MD5 或 SHA256 校验和",
            "对应用的配置文件进行数字签名",
            "处理 HTTPS 连接的 SSL/TLS 证书验证",
            "加密和解密敏感数据",
            "管理应用的数字版权 (DRM)"
        ]
    },
    {
        "body": "在 ClassIsland 中，`TimeLayoutItem` 的 `ActionSet` 属性用于什么？",
        "correct_choices": [
            "当时间点类型为“行动”时，定义在该时间点触发时要执行的一组动作",
            "存储与“行动”类型时间点关联的自动化操作"
        ],
        "incorrect_choices": [
            "记录用户对该时间点的编辑历史",
            "定义该时间点的显示样式和颜色",
            "存储与该时间点相关的提醒设置",
            "链接到该时间点对应的课程的详细信息",
            "控制该时间点在多周轮换中的行为"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginLoadContext.cs` 文件实现了一个自定义的 `AssemblyLoadContext`，其主要目的是什么？",
        "correct_choices": [
            "为每个插件提供独立的程序集加载环境，以隔离依赖项冲突",
            "实现插件的动态加载和卸载（理论上）"
        ],
        "incorrect_choices": [
            "优化插件程序集的加载速度",
            "在加载插件前验证其数字签名",
            "允许插件访问 ClassIsland 的内部 API",
            "管理插件的配置文件和数据存储",
            "提供一个安全的沙箱环境来运行插件代码"
        ]
    },
    {
        "body": "ClassIsland 的 `App.ApplicationCommand` 属性存储了什么类型的信息？",
        "correct_choices": [
            "应用程序启动时的命令行参数",
            "控制应用启动行为的选项，如静默启动、更新处理等"
        ],
        "incorrect_choices": [
            "用户在应用内执行的命令历史",
            "应用内定义的快捷键绑定",
            "IPC 通信中使用的命令列表",
            "自动化流程中定义的命令序列",
            "集控服务器下发的命令"
        ]
    },
    {
        "body": "在 ClassIsland 的 WPF 控件样式中，`DynamicResource MaterialDesignPaper` 通常用于什么元素的背景？",
        "correct_choices": [
            "卡片 (Card)、对话框 (Dialog)、抽屉 (Drawer) 等需要与主背景区分的平面元素",
            "表示“纸张”质感的背景区域"
        ],
        "incorrect_choices": [
            "窗口的主背景色",
            "按钮和输入框等交互元素的背景",
            "应用的主题强调色",
            "文本和图标的前景色",
            "滚动条和分隔线等辅助元素的颜色"
        ]
    },
    {
        "body": "ClassIsland 的文档仓库中，`src/.vuepress/config.ts` 文件主要定义了什么？",
        "correct_choices": [
            "VuePress 站点的全局配置，如基础路径、多语言设置、主题选项",
            "文档站点的构建和行为设置"
        ],
        "incorrect_choices": [
            "文档的具体 Markdown 内容",
            "导航栏和侧边栏的结构",
            "自定义 Vue 组件",
            "站点的 CSS 样式",
            "部署到 GitHub Pages 的工作流程"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SettingsService.AddSettingsOverlay` 方法中，“叠层 (Overlay)”的目的是什么？",
        "correct_choices": [
            "允许自动化或其他功能临时修改应用设置，并在之后恢复原值",
            "实现设置的非持久化、可恢复的临时更改"
        ],
        "incorrect_choices": [
            "在主界面上显示一个覆盖层，用于提醒或通知",
            "为设置界面添加一层额外的安全验证",
            "将多组设置合并为一个统一的配置视图",
            "在不修改主配置文件的情况下，加载额外的设置项",
            "为不同用户提供个性化的设置档案"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileService` 中，`ManagementClassPlanPath` 常量指向哪个文件的路径？",
        "correct_choices": [
            "集控模式下，课表配置文件的本地缓存路径 (Management/ClassPlans.json)",
            "由集控服务器分发的课表信息的本地存储位置"
        ],
        "incorrect_choices": [
            "用户自定义的默认课表文件路径",
            "插件提供的课表模板文件路径",
            "应用内置的示例课表文件路径",
            "课表导入功能使用的临时文件路径",
            "当前活动课表的快捷方式路径"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AppLogsWindow.xaml.cs` 中，日志条目的筛选逻辑主要依据哪些条件？",
        "correct_choices": [
            "日志级别 (Critical, Error, Warning, Info, Debug, Trace)",
            "日志内容或类别名称是否包含用户输入的文本"
        ],
        "incorrect_choices": [
            "日志的时间戳范围",
            "产生日志的线程 ID",
            "日志是否包含异常信息",
            "日志的来源模块或插件名称",
            "用户为日志条目设置的标签"
        ]
    },
    {
        "body": "ClassIsland 的 `CrashWindow.xaml.cs` 中，`IsCritical` 属性为 true 时，对用户界面有什么影响？",
        "correct_choices": [
            "用户将不能忽略此崩溃，必须选择重启或退出应用",
            "崩溃窗口会强调错误的严重性"
        ],
        "incorrect_choices": [
            "应用会自动尝试修复错误并恢复运行",
            "崩溃信息会立即发送给开发者",
            "窗口将以全屏模式显示，阻止其他操作",
            "会播放警告音效",
            "将禁用“反馈问题”按钮"
        ]
    },
    {
        "body": "ClassIsland 的 `HangService` 是如何检测应用主 UI 线程是否挂起的？",
        "correct_choices": [
            "定期尝试在主 UI 线程的 Dispatcher 上异步调用一个空操作，如果该操作在预设时间内未完成，则认为挂起",
            "通过向 Dispatcher 队列一个任务并设置超时来判断响应性"
        ],
        "incorrect_choices": [
            "监控主 UI 线程的 CPU 使用率",
            "检查主 UI 线程的消息队列长度",
            "使用 Windows API 查询窗口的响应状态 (IsHungAppWindow)",
            "定期向主窗口发送一个自定义消息并等待回复",
            "分析应用的内存转储 (Memory Dump)"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ExcelImportWindow.xaml.cs` 中，`ParseTimeLayoutItem` 方法的主要功能是什么？",
        "correct_choices": [
            "从输入的文本中解析出时间点的开始和结束时间",
            "将如 “08:00-08:45” 格式的字符串转换为 `TimeLayoutItem` 对象"
        ],
        "incorrect_choices": [
            "将 `TimeLayoutItem` 对象格式化为字符串以显示在 Excel 中",
            "从 Excel 单元格中读取课程名称",
            "根据 Excel 中的数据自动生成完整的时间表",
            "验证导入的时间表是否与现有时间表冲突",
            "将导入的时间点数据保存到用户档案"
        ]
    },
    {
        "body": "ClassIsland 的 `ConsoleService.InitializeConsole()` 方法在 Debug 构建下通常会做什么？",
        "correct_choices": [
            "分配一个新的控制台窗口或附加到现有控制台",
            "在控制台输出应用信息和 ASCII Logo"
        ],
        "incorrect_choices": [
            "关闭所有已打开的控制台窗口",
            "将应用的日志输出重定向到文件",
            "启动一个远程调试控制台",
            "配置控制台窗口的颜色和字体",
            "仅在发生错误时才显示控制台"
        ]
    },
    {
        "body": "在 ClassIsland 的 `WindowRuleService` 中，`IsForegroundWindowClassIsland()` 方法的目的是什么？",
        "correct_choices": [
            "判断当前拥有焦点的窗口是否属于 ClassIsland 应用本身",
            "检查活动窗口是否是 ClassIsland 自身的一个窗口"
        ],
        "incorrect_choices": [
            "获取所有 ClassIsland 创建的窗口列表",
            "判断 ClassIsland 主窗口是否在前台显示",
            "检查是否有其他 ClassIsland 实例正在运行",
            "设置 ClassIsland 窗口为焦点窗口",
            "查询特定 ClassIsland 窗口的类名"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在下载更新包后，会使用哪个文件进行更新？",
        "correct_choices": [
            "UpdateTemp/update.zip",
            "临时目录下的 update.zip 文件"
        ],
        "incorrect_choices": [
            "Cache/update.pkg",
            "Downloads/ClassIsland_latest.exe",
            "AppRoot/update_package.msi",
            "Temp/patch.diff",
            "Config/update_info.json"
        ]
    },
    {
        "body": "在 ClassIsland 的 `RegistryNotifier.cs` 中，`RegNotifyChangeKeyValue` Win32 API 函数用于什么目的？",
        "correct_choices": [
            "监视指定注册表项及其子项的值变化",
            "当注册表键值发生改变时发出通知"
        ],
        "incorrect_choices": [
            "读取指定注册表项的值",
            "写入或修改指定注册表项的值",
            "创建新的注册表项或删除现有项",
            "枚举指定注册表项下的所有子项和值",
            "检查用户是否有权限访问特定的注册表项"
        ]
    },
    {
        "body": "ClassIsland 的 `ThemeService` 在设置主题时，如果主题模式设置为“跟随系统”，它会如何确定实际应用的明暗主题？",
        "correct_choices": [
            "读取注册表中 `Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize` 下的 `AppsUseLightTheme` 值",
            "查询 Windows 系统当前的应用程序主题设置（亮色或暗色）"
        ],
        "incorrect_choices": [
            "根据当前壁纸的平均亮度自动切换",
            "使用系统强调色作为主题色，并自动选择搭配的明暗模式",
            "总是默认为亮色主题，除非用户在 ClassIsland 设置中覆盖",
            "检测当前时间，白天使用亮色主题，夜晚使用暗色主题",
            "依赖于 `WallpaperPickingService` 提供的颜色信息"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AutomationService` 中，如果一个 `Workflow` 的 `IsConditionEnabled` 属性为 false，会发生什么？",
        "correct_choices": [
            "该工作流在被触发时，其关联的规则集将不会被评估，行动会直接执行",
            "工作流的条件判断将被跳过"
        ],
        "incorrect_choices": [
            "该工作流将完全禁用，不会被任何触发器激活",
            "该工作流的行动将不会执行，即使触发器被激活",
            "该工作流的规则集将被视为总是满足",
            "该工作流的规则集将被视为总是不满足",
            "该工作流会等待用户手动确认条件是否满足"
        ]
    },
    {
        "body": "ClassIsland 的 `TopmostEffectWindow` 在非兼容透明模式下，如何实现窗口的鼠标穿透效果？",
        "correct_choices": [
            "通过设置窗口扩展样式 `WS_EX_TRANSPARENT`",
            "使用 Win32 API 修改窗口属性以允许鼠标事件穿透"
        ],
        "incorrect_choices": [
            "将窗口的 `AllowsTransparency` 属性设置为 true，并设置背景为 `Transparent`",
            "将窗口的 `Opacity` 属性设置为一个非常小的值 (例如 0.01)",
            "捕获鼠标事件并在事件处理器中将其转发到底层窗口",
            "使用一个透明的覆盖层来接收鼠标事件",
            "将窗口的 `IsHitTestVisible` 属性设置为 false"
        ]
    },
    {
        "body": "ClassIsland 的 `DiagnosticService` 提供的 `GetDeviceInfo` 方法尝试从哪里获取设备名称和供应商信息？",
        "correct_choices": [
            "WMI (Windows Management Instrumentation) 的 `Win32_ComputerSystemProduct` 类",
            "Windows 系统管理接口"
        ],
        "incorrect_choices": [
            "系统注册表 `HKEY_LOCAL_MACHINE\\HARDWARE`",
            "环境变量 `COMPUTERNAME` 和 `PROCESSOR_IDENTIFIER`",
            "调用 `GetComputerNameEx` Win32 API",
            "读取系统信息文件 (如 msinfo32.exe 生成的报告)",
            "通过网络查询设备制造商的数据库"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ProfileService` 中，`MergeManagementProfileAsync` 方法的主要职责是什么？",
        "correct_choices": [
            "从集控服务器拉取课表、时间表、科目等配置，并与本地的集控缓存数据进行合并更新",
            "更新本地缓存的集控档案信息"
        ],
        "incorrect_choices": [
            "将本地用户档案上传到集控服务器",
            "合并多个本地用户档案为一个集控档案",
            "将集控档案转换为普通用户档案格式",
            "比较集控档案和本地用户档案的差异，并生成报告",
            "仅下载集控清单文件，不处理具体的档案内容"
        ]
    },
    {
        "body": "ClassIsland 的 `ComponentSettings` 类中，`AssociatedComponentInfo` 属性是如何获取其值的？",
        "correct_choices": [
            "通过查询 `ComponentRegistryService.Registered` 集合，根据组件的 `Id` (GUID) 查找匹配的 `ComponentInfo`",
            "在组件加载时，通过组件 ID 从注册表中动态获取"
        ],
        "incorrect_choices": [
            "在组件实例化时由构造函数直接传入",
            "从组件的 XAML 定义中读取特性值",
            "通过反射读取组件类上的 `ComponentInfoAttribute` (间接相关，但属性本身是查找结果)",
            "由父容器组件在添加子组件时设置",
            "从组件的配置文件（如 `MyComponent.settings.json`）中加载"
        ]
    },
    {
        "body": "ClassIsland 使用的 `Walterlv.Windows.AsyncBox` 控件，其 `LoadingViewType` 属性有什么作用？",
        "correct_choices": [
            "指定在异步加载子内容完成前显示的占位符/加载中 UI 元素的类型",
            "定义了异步加载子元素期间的临时显示内容"
        ],
        "incorrect_choices": [
            "设置异步加载子内容的动画效果类型",
            "控制异步加载任务的优先级",
            "指定子内容加载完成后要导航到的视图类型",
            "定义加载失败时显示的错误提示信息类型",
            "配置异步操作的超时时间"
        ]
    },
    {
        "body": "在 ClassIsland 的 `StringMatchingSettings` 模型中，如果 `UseRegex` 为 true，`IsMatching` 方法会如何判断匹配？",
        "correct_choices": [
            "使用 `Text` 属性作为正则表达式模式，对输入字符串进行正则匹配",
            "调用 `Regex.Match` 来检查输入字符串是否符合正则表达式"
        ],
        "incorrect_choices": [
            "将 `Text` 属性作为通配符模式进行匹配 (如 `*` 和 `?`)",
            "进行精确的大小写不敏感的字符串比较",
            "检查输入字符串是否以 `Text` 属性开头或结尾",
            "使用模糊匹配算法（如 Levenshtein 距离）进行相似度比较",
            "将 `Text` 属性分割为多个关键词，检查输入字符串是否包含所有关键词"
        ]
    },
    {
        "body": "ClassIsland 的 `AttachedSettingsControlPresenter` 控件是如何决定要显示哪个具体的附加设置控件的？",
        "correct_choices": [
            "根据 `ContentId` (通常是附加设置的 GUID) 和 `ControlInfo` 查找并实例化对应的附加设置控件",
            "通过 `IAttachedSettingsHostService` 解析 `ControlInfo` 并动态创建控件实例"
        ],
        "incorrect_choices": [
            "在 XAML 中静态定义所有可能的附加设置控件，并根据条件切换可见性",
            "使用一个通用的附加设置控件，通过数据绑定来显示不同的设置项",
            "依赖于父控件传递一个预先创建好的附加设置控件实例",
            "通过反射扫描当前程序集，查找名称与 `ContentId` 匹配的控件类型",
            "从配置文件中读取控件的 XAML 定义并动态加载"
        ]
    },
    {
        "body": "ClassIsland 的 `SpeechService` 在初始化时，如果系统不支持 System.Speech (例如在某些 Windows Server 版本或 N SKU 上)，会默认使用哪个 TTS 引擎？",
        "correct_choices": [
            "EdgeTtsService (Edge TTS)",
            "基于网络的 Edge 语音合成服务"
        ],
        "incorrect_choices": [
            "GptSoVitsService (GPT-SoVITS)",
            "抛出异常并禁用语音功能",
            "尝试下载并安装 System.Speech 依赖",
            "回退到一个内置的简单语音提示音",
            "提示用户手动选择一个可用的 TTS 引擎"
        ]
    },
    {
        "body": "在 ClassIsland 的 `TimeRuleEditControl.xaml.cs` 中，`UpdateWeekCountDivs` 方法的作用是什么？",
        "correct_choices": [
            "根据 `TimeRule.WeekCountDivTotal` 的值，动态生成用于选择“当本周是第几周”的选项列表 (如“单周”、“双周”或“第X周”)",
            "更新多周轮换中当前周选项的显示文本"
        ],
        "incorrect_choices": [
            "计算当前日期属于多周轮换中的第几周",
            "验证用户输入的周数是否在合法范围内",
            "将星期的数字索引（0-6）转换为中文名称（周日-周六）",
            "保存用户对多周轮换设置的修改",
            "从课表数据中提取所有用到的多周轮换配置"
        ]
    },
    {
        "body": "ClassIsland 的 `FileFolderService.CreateBackupAsync` 方法在创建备份时，会包含哪些主要内容？",
        "correct_choices": [
            "`Settings.json` 文件",
            "`Config/` 文件夹内的配置文件",
            "`Profiles/` 文件夹内的档案文件"
        ],
        "incorrect_choices": [
            "应用的日志文件 (`Logs/`)",
            "应用的缓存文件 (`Cache/`)",
            "已安装的插件文件 (`Plugins/`)",
            "应用的临时文件 (`Temp/`)",
            "ClassIsland.exe 可执行文件本身"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ExcelImportWindow` 中，如果导入的 Excel 文件包含不兼容的格式或字体，应用会如何处理？",
        "correct_choices": [
            "提示用户兼容性警告，并询问是否尝试以兼容模式打开",
            "如果用户同意，会创建一个临时副本，并移除副本中不兼容的格式和字体再尝试打开"
        ],
        "incorrect_choices": [
            "直接拒绝打开文件，并提示错误",
            "自动修复文件中的不兼容内容，并直接打开",
            "忽略不兼容的内容，只加载可识别的部分",
            "要求用户手动将文件转换为标准 XLSX 格式",
            "将文件发送到云端服务进行转换和修复"
        ]
    },
    {
        "body": "ClassIsland 的 `ManagementService` 中，`AuthorizeByLevel` 方法的主要作用是什么？",
        "correct_choices": [
            "根据传入的授权等级 (AuthorizeLevel)，执行相应的用户认证流程",
            "验证用户是否有权限执行特定操作，如退出集控或编辑设置"
        ],
        "incorrect_choices": [
            "设置当前用户的授权等级",
            "从集控服务器获取当前用户的权限列表",
            "记录用户的授权操作日志",
            "管理不同授权等级对应的密码或凭据",
            "检查本地集控策略是否允许该授权等级的操作"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService.RestartAppToUpdateAsync()` 方法在准备重启应用以进行更新前，会执行哪些关键步骤？",
        "correct_choices": [
            "验证已下载更新包的哈希值 (ValidateUpdateAsync)",
            "解压缩更新包到临时目录 (ExtractUpdateAsync)",
            "启动新版本的 ClassIsland.exe 并传入更新参数"
        ],
        "incorrect_choices": [
            "直接覆盖当前运行的应用文件",
            "创建当前应用配置的完整备份",
            "提示用户手动关闭正在运行的 ClassIsland 实例",
            "下载最新的更新元数据以确认更新包的正确性",
            "修改系统注册表以在下次启动时执行更新程序"
        ]
    },
    {
        "body": "在 ClassIsland 中，`ActionControl.xaml` 控件主要用于什么？",
        "correct_choices": [
            "让用户配置一个“行动组 (ActionSet)”，包含一系列按顺序执行的“行动 (Action)”",
            "在自动化设置或行动时间点设置中定义要执行的操作序列"
        ],
        "incorrect_choices": [
            "定义单个行动的触发条件",
            "显示应用主菜单中的可操作项",
            "管理插件提供的自定义操作按钮",
            "配置应用快捷键和全局热键",
            "作为主界面组件，显示可交互的按钮或控件"
        ]
    },
    {
        "body": "ClassIsland 的 `TopmostEffectWindow` 是如何实现不影响主窗口的 BitmapCache 缩放的？",
        "correct_choices": [
            "它是一个独立的窗口，有自己的渲染目标和缩放设置",
            "特效窗口的 CacheMode 是独立于主窗口设置的"
        ],
        "incorrect_choices": [
            "它共享主窗口的 BitmapCache，但通过 Transform 调整了特效的显示",
            "它在主窗口的 AdornerLayer 上渲染，因此不受主窗口 CacheMode 影响",
            "它不使用 BitmapCache，直接在屏幕上绘制特效",
            "它会临时修改主窗口的 CacheMode，在特效播放完毕后恢复",
            "特效渲染精度设置会自动调整 BitmapCache 的 RenderAtScale"
        ]
    },
    {
        "body": "ClassIsland 的 `RawInputEventArgs` 类中，`Data` 属性的类型是什么？",
        "correct_choices": [
            "Linearstar.Windows.RawInput.RawInputData",
            "RawInputData"
        ],
        "incorrect_choices": [
            "System.Windows.Input.MouseEventArgs",
            "System.Windows.Input.TouchEventArgs",
            "Windows.UI.Input.PointerPoint",
            "ClassIsland.Models.RawInput.CustomRawInputData",
            "byte[] (原始字节数据)"
        ]
    },
    {
        "body": "在 ClassIsland 中，`ObservableDictionary` 类与标准的 `Dictionary` 相比，主要增加了什么特性？",
        "correct_choices": [
            "实现了 `INotifyCollectionChanged` 和 `INotifyPropertyChanged` 接口",
            "当字典内容或属性发生变化时，能够通知 WPF 绑定系统进行界面更新"
        ],
        "incorrect_choices": [
            "提供了更快的键值查找速度",
            "支持多线程安全访问",
            "可以存储重复的键",
            "内置了序列化到 JSON 或 XML 的功能",
            "允许通过索引访问元素 (除了通过键)"
        ]
    },
    {
        "body": "ClassIsland 的 `GptSoVitsService` 在生成语音前，如果设置了 `IsInternal` 为 true 且 `GptSovitsSecrets.IsSecretsFilled` 为 true，会执行什么额外操作？",
        "correct_choices": [
            "使用 PGP 私钥对请求内容（文本的 SHA256 和时间戳）进行签名，并将签名附加到请求头",
            "为内部的 GPT-SoVITS 服务器生成 API 请求签名"
        ],
        "incorrect_choices": [
            "对要合成的文本进行加密",
            "向 ClassIsland 的中心服务器验证许可证",
            "记录语音合成请求到审计日志",
            "使用一个预共享密钥对请求进行 HMAC 校验",
            "从 ClassIsland 的服务器获取临时的 API 访问令牌"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginMarketService` 在刷新插件源时，默认的官方插件源索引文件从哪里下载？",
        "correct_choices": [
            "get.classisland.tech 上的 plugin/index.zip",
            "ClassIsland 官方的插件索引服务器"
        ],
        "incorrect_choices": [
            "GitHub Releases API 直接获取插件列表",
            "Nuget.org 上的 ClassIsland.Plugins 包",
            "ClassIsland 安装目录下的本地索引文件",
            "Microsoft App Center 的分发组",
            "一个内置的 P2P 网络"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileSettingsWindow.xaml.cs` 中，`OpenTimeLayoutEdit` 方法的作用是什么？",
        "correct_choices": [
            "切换到时间表编辑选项卡，并可选择性地定位到指定的时间表进行编辑",
            "在档案编辑窗口中导航到时间表编辑界面"
        ],
        "incorrect_choices": [
            "打开一个新的窗口专门用于编辑时间表",
            "从 Excel 文件导入时间表数据",
            "将当前选中的时间表导出为 JSON 文件",
            "验证当前所有时间表的格式是否正确",
            "为所有课表应用选定的时间表"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SettingsWindowNew.xaml.cs` 中，`CoreNavigate` 方法在导航到新的设置页面前，会执行什么动画（如果未禁用过渡动画）？",
        "correct_choices": [
            "一个名为 \"NavigationLeaving\" 的 Storyboard，使当前页面淡出",
            "页面切换的淡出动画"
        ],
        "incorrect_choices": [
            "一个名为 \"NavigationEntering\" 的 Storyboard，使新页面滑入",
            "一个名为 \"PageLoadComplete\" 的 Storyboard，在新页面加载完成后播放",
            "没有预定义的导航动画，依赖于页面的自定义过渡效果",
            "一个全局的窗口淡入淡出效果",
            "一个基于 MaterialDesignThemes.Wpf.Transitioner 的切换效果"
        ]
    },
    {
        "body": "ClassIsland 的 `WeatherService` 在获取天气信息时，如果无法连接到 API 或解析数据失败，它会如何处理？",
        "correct_choices": [
            "记录错误日志，并在下次定时更新时重试",
            "保持上次成功获取的天气数据不变，并可能在 UI 上提示错误信息"
        ],
        "incorrect_choices": [
            "清空所有天气数据，显示“无法获取天气”",
            "自动切换到备用的天气 API 源",
            "向用户显示一个模态错误对话框，并暂停天气更新",
            "尝试从本地缓存的天气文件中加载数据",
            "无限次重试直到成功获取数据"
        ]
    },
    {
        "body": "ClassIsland 的 `WindowRuleService` 使用了哪个 Win32 API 函数来设置窗口事件钩子？",
        "correct_choices": [
            "SetWinEventHook"
        ],
        "incorrect_choices": [
            "SetWindowsHookEx",
            "RegisterHotKey",
            "CreateWindowEx",
            "GetMessage",
            "AttachThreadInput"
        ]
    },
    {
        "body": "在 ClassIsland 的 `UpdateService.RestartAppToUpdateAsync` 方法中，新版本的 ClassIsland.exe 是如何被启动的？",
        "correct_choices": [
            "通过 `Process.Start` 启动位于临时解压目录中的新版 `ClassIsland.exe`，并传入 `-urt` (update replace target) 和 `-m` (wait mutex) 等参数",
            "执行解压后的新版程序，并告知其当前运行的旧版程序路径以进行替换"
        ],
        "incorrect_choices": [
            "直接覆盖当前正在运行的 `ClassIsland.exe` 文件，然后通过发送消息令其重启",
            "创建一个计划任务，在系统下次启动时运行新版本的 `ClassIsland.exe`",
            "使用 MSIX 包的更新机制自动替换应用文件",
            "将新版本文件复制到应用目录，然后调用 `Application.Restart()`",
            "下载一个独立的更新程序来执行文件替换和重启操作"
        ]
    },
    {
        "body": "ClassIsland 的 `MiniInfoProviderHostService` 的主要职责是什么？",
        "correct_choices": [
            "注册和管理实现了 `IMiniInfoProvider` 接口的快速信息提供方",
            "加载和存储各个快速信息提供方的设置"
        ],
        "incorrect_choices": [
            "在主界面上显示快速信息提供方的内容",
            "处理快速信息提供方之间的通信",
            "提供一个统一的 API 供快速信息提供方获取系统信息",
            "自动更新快速信息提供方插件",
            "管理快速信息提供方的显示顺序和布局"
        ]
    },
    {
        "body": "ClassIsland 的 `AccentColorPicker.cs` 文件（虽然内容为空）从其命名推断，最初可能打算实现什么功能？",
        "correct_choices": [
            "从系统或用户选择中获取强调色，供应用主题使用",
            "提供一个颜色选择器，让用户自定义应用的强调色"
        ],
        "incorrect_choices": [
            "根据当前壁纸自动调整强调色",
            "管理 Material Design 主题中的颜色调色板",
            "为不同的课程或时间点设置不同的强调色",
            "提供一个 API 供插件查询或修改应用的强调色",
            "生成与当前主题色互补的颜色方案"
        ]
    },
    {
        "body": "ClassIsland 的 `AutomationService` 在加载配置文件时，如果当前配置名的文件不存在，它会怎么做？",
        "correct_choices": [
            "创建一个新的空自动化配置 (包含一个空的 Workflow 集合)，并保存到对应的路径",
            "初始化一个新的自动化配置文件并保存"
        ],
        "incorrect_choices": [
            "尝试加载名为 `Default.json` 的自动化配置文件作为回退",
            "抛出一个 `FileNotFoundException` 并停止加载自动化功能",
            "提示用户选择一个已存在的自动化配置文件或创建一个新的",
            "禁用自动化功能，直到用户手动创建一个有效的配置文件",
            "从应用的内置资源中加载一个预设的自动化配置"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SettingsWindowNew.xaml.cs` 中，`OpenUri` 方法是如何处理传入的 `classisland://app/settings/general` 这样的 URI的？",
        "correct_choices": [
            "它会解析 URI，提取出设置页面的 ID (如 \"general\")，然后调用 `Open` 方法导航到对应的设置页面",
            "将 URI 路由到相应的设置页面显示逻辑"
        ],
        "incorrect_choices": [
            "它会尝试在系统默认浏览器中打开这个 URI",
            "它会将 URI 转发给 `IUriNavigationService`，由该服务统一处理所有 `classisland://` 协议的导航",
            "它会检查该 URI 是否在已注册的插件导航处理器中，如果是则交给插件处理",
            "它会将 URI 的路径部分作为参数传递给当前显示的设置页面",
            "它会忽略协议和主机部分，只使用路径来查找本地文件或资源"
        ]
    },
    {
        "body": "ClassIsland 的 `AttachedSettingsControlHelper<T>` 类在 `AttachedTarget` 属性发生变化时会做什么？",
        "correct_choices": [
            "会尝试从新的 `AttachedTarget` 对象中获取指定 GUID 的附加设置，如果不存在则使用默认设置",
            "更新其内部的 `AttachedSettings` 属性以反映新的目标对象的设置"
        ],
        "incorrect_choices": [
            "自动将当前的附加设置保存到旧的 `AttachedTarget` 对象中",
            "清空当前的附加设置，等待用户重新配置",
            "如果新的 `AttachedTarget` 类型不兼容，则抛出异常",
            "触发一个事件，通知其他组件 `AttachedTarget` 已更改",
            "将新的 `AttachedTarget` 序列化并保存到配置文件"
        ]
    },
    {
        "body": "ClassIsland 的 `FileLoggerProvider` 在初始化时，会如何处理应用日志目录 (`AppLogFolderPath`) 中已存在的旧日志文件？",
        "correct_choices": [
            "将扩展名为 `.log` 的旧日志文件压缩为 `.log.gz`，并删除原始 `.log` 文件",
            "删除超过指定保留天数（默认为 30 天）的旧日志文件（包括 `.log` 和 `.log.gz`）"
        ],
        "incorrect_choices": [
            "将所有旧日志文件移动到一个名为 `Archive` 的子目录中",
            "清空所有旧日志文件的内容，但保留文件本身",
            "如果旧日志文件总大小超过一定阈值，则删除最早的日志文件",
            "不做任何处理，直接开始写入新的日志文件",
            "将所有旧日志文件合并到一个大的历史日志文件中"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ExcelImportWindow.xaml.cs` 中，`ViewModel.IsVerticalLayout` 属性为 true 时，表示 Excel 表格中的课表数据是如何组织的？",
        "correct_choices": [
            "每竖列代表一个独立的课表，课程信息在列内按行排列",
            "课表数据是按列优先组织的"
        ],
        "incorrect_choices": [
            "每横行代表一个独立的课表，课程信息在行内按列排列",
            "时间点信息在第一列，课程名称在后续列中",
            "课程名称在第一行，时间点信息在后续行中",
            "整个工作表只包含一个课表，没有特定的行列组织",
            "使用合并单元格来表示多天的课表"
        ]
    },
    {
        "body": "ClassIsland 的 `SplashService` 中，`SplashStatus` 属性的默认文本是什么（如果用户未自定义）？",
        "correct_choices": [
            "正在启动…",
            "DefaultText 静态属性的值"
        ],
        "incorrect_choices": [
            "ClassIsland 正在加载",
            "请稍候…",
            "欢迎使用 ClassIsland",
            "版本号 + Codename",
            "一个随机的“回声洞”文本"
        ]
    },
    {
        "body": "在 ClassIsland 中，`Core.Controls.CommonDialog.CommonDialogBuilder` 类提供了一种什么方式来创建对话框？",
        "correct_choices": [
            "链式调用 (Fluent Interface) 的方式来配置和显示通用对话框",
            "使用构建者模式 (Builder Pattern) 逐步构建对话框的各个部分"
        ],
        "incorrect_choices": [
            "通过 XAML 模板来定义对话框的布局和内容",
            "继承 `CommonDialogBase` 类并重写其方法来实现自定义对话框",
            "使用一个包含所有可能选项的大型构造函数来创建对话框",
            "通过 XML 配置文件来定义对话框的行为和外观",
            "依赖于操作系统的标准对话框 API (如 MessageBox)"
        ]
    },
    {
        "body": "ClassIsland 的 `ManagementServerConnection` 类中，`CommandConnectionAliveTimer` 定时器的主要目的是什么？",
        "correct_choices": [
            "定期向命令流发送心跳包以保持连接活跃",
            "检测与集控服务器命令流的连接状态，并在断开时尝试重连"
        ],
        "incorrect_choices": [
            "定期从服务器拉取新的命令",
            "控制客户端向服务器发送命令的频率",
            "设置命令执行的超时时间",
            "在空闲一段时间后自动断开与服务器的连接以节省资源",
            "管理命令队列的轮询间隔"
        ]
    },
    {
        "body": "ClassIsland 的 `WindowRuleService` 在初始化时，会使用 `SetWinEventHook` 注册哪些主要的窗口事件？",
        "correct_choices": [
            "EVENT_SYSTEM_FOREGROUND (前台窗口改变)",
            "EVENT_SYSTEM_MOVESIZEEND (窗口移动或大小调整结束)",
            "EVENT_SYSTEM_MINIMIZEEND (窗口最小化结束)"
        ],
        "incorrect_choices": [
            "EVENT_OBJECT_CREATE (窗口创建)",
            "EVENT_OBJECT_DESTROY (窗口销毁)",
            "EVENT_SYSTEM_SCROLLINGEND (滚动结束)",
            "EVENT_SYSTEM_ALERT (系统警告)",
            "WM_MOUSEMOVE (鼠标移动，这是消息而非事件钩子)"
        ]
    },
    {
        "body": "在 ClassIsland 的文档仓库 (`classisland-docs-next`) 的 GitHub Actions 工作流程 `generate-pdf.yml` 中，使用了哪个工具间接生成 PDF？",
        "correct_choices": [
            "Puppeteer (通过 @condorhero/vuepress-plugin-export-pdf-v2)",
            "Google Chrome (通过 Puppeteer)"
        ],
        "incorrect_choices": [
            "Pandoc",
            "LaTeX (pdflatex)",
            "wkhtmltopdf",
            "Microsoft Print to PDF",
            "Adobe Acrobat SDK"
        ]
    },
    {
        "body": "ClassIsland 的 `ViewModel` 基类 `ObservableRecipient` 来自哪个 NuGet 包？",
        "correct_choices": [
            "CommunityToolkit.Mvvm",
            "MVVM Toolkit (Microsoft)"
        ],
        "incorrect_choices": [
            "Prism.Wpf",
            "MvvmLightLibs",
            "ReactiveUI",
            "Caliburn.Micro",
            "System.ComponentModel.Annotations"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginService.InitializePlugins` 方法在加载插件时，如果插件目录中存在名为 `.disabled` 的文件，会如何处理该插件？",
        "correct_choices": [
            "插件将被标记为已禁用 (PluginLoadStatus.Disabled) 并且不会加载其入口程序集",
            "跳过该插件的加载过程"
        ],
        "incorrect_choices": [
            "尝试加载插件，但会记录一个警告信息",
            "删除该插件的目录",
            "提示用户是否要启用该插件",
            "将该插件移动到隔离区域",
            "忽略 `.disabled` 文件，正常加载插件"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileSettingsWindow` 中，如果用户在编辑时间表时，选择了“时间轴视图”，并拖动一个时间点的结束把柄，其时间变化通常会如何对齐？",
        "correct_choices": [
            "如果启用了吸附 (IsTimeLineSticky)，时间会按5分钟的间隔对齐",
            "根据鼠标拖动的垂直距离和缩放比例计算时间变化，并可能进行舍入"
        ],
        "incorrect_choices": [
            "时间会精确到秒，不进行任何对齐",
            "时间会按1分钟的间隔对齐",
            "时间会自动调整以避免与其他时间点重叠，但不保证对齐到特定间隔",
            "时间变化量会与拖动的像素数严格对应",
            "时间只能通过在右侧属性面板中输入精确值来修改"
        ]
    },
    {
        "body": "ClassIsland 的 `SplashScreen` (启动动画窗口) 在何时会关闭？",
        "correct_choices": [
            "当 `SplashService.SplashEnded` 事件被触发时",
            "在主应用逻辑调用 `SplashService.EndSplash()` 方法后"
        ],
        "incorrect_choices": [
            "在主窗口 (`MainWindow`) 完全加载并显示后自动关闭",
            "在固定的几秒钟延迟后自动关闭",
            "当用户点击启动画面时关闭",
            "在所有插件都加载完成后关闭",
            "当应用检测到网络连接成功时关闭"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsService.SaveSettings` 方法通常在什么时候被调用？",
        "correct_choices": [
            "当 `Settings` 对象的任何非 `JsonIgnore` 属性发生变化时 (通过 `PropertyChanged` 事件)",
            "在应用设置窗口关闭时",
            "在应用正常退出前"
        ],
        "incorrect_choices": [
            "仅在用户手动点击“保存设置”按钮时",
            "每隔固定的时间间隔自动调用",
            "在主窗口的布局或大小发生变化时",
            "当检测到配置文件被外部修改时",
            "在应用更新完成后"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AutomationService` 中，如果一个 `ActionSet` 的 `IsRevertEnabled` 属性为 true，但其关联的 `Workflow` 的 `IsConditionEnabled` 为 false，当触发器触发恢复时会发生什么？",
        "correct_choices": [
            "行动组的 `Revert` 方法仍然会被调用，因为条件判断被禁用了",
            "恢复操作会执行，不受规则集状态影响"
        ],
        "incorrect_choices": [
            "恢复操作不会执行，因为条件判断被禁用，等同于条件不满足",
            "恢复操作会执行，但会记录一个警告，提示条件判断被禁用",
            "应用会提示用户是否要强制执行恢复操作",
            "只有部分标记为“关键”的行动会被恢复",
            "该行动组的 `IsOn` 状态会被重置，但不执行实际恢复操作"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在检查更新并发现新版本后，会如何通知用户？",
        "correct_choices": [
            "通过 `ITaskBarIconService` 显示一个任务栏气泡通知",
            "更新 `Settings.LastUpdateStatus` 为 `UpdateStatus.UpdateAvailable`"
        ],
        "incorrect_choices": [
            "立即开始下载更新包",
            "在主窗口上显示一个模态对话框提示更新",
            "发送一封电子邮件通知用户",
            "在应用日志中记录更新信息，但不主动通知用户",
            "自动将更新信息写入应用的更新日志文件"
        ]
    },
    {
        "body": "ClassIsland 的 `FileLoggerProvider` 在创建新的日志文件时，文件名是如何生成的？",
        "correct_choices": [
            "包含当前日期、时间和序号，如 `log-YYYY-M-D-HH-mm-ss-N.log`",
            "确保文件名在日志目录下是唯一的"
        ],
        "incorrect_choices": [
            "使用固定的文件名 `app.log`，每次启动时覆盖或追加",
            "使用当前进程 ID 作为文件名的一部分",
            "文件名包含应用的完整版本号",
            "用户可以在设置中自定义日志文件名格式",
            "使用 GUID 生成随机文件名"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ExcelImportWindow` 中，如果用户选择从 Excel 文件导入时间表，并且选定的时间安排区域包含无效的时间格式，应用会如何处理？",
        "correct_choices": [
            "尝试解析每个单元格，如果格式不符合 HH:MM:SS - HH:MM:SS 或 HH:MM - HH:MM，则跳过该单元格",
            "只导入能够成功解析的时间点"
        ],
        "incorrect_choices": [
            "中断导入过程并显示错误消息",
            "尝试使用默认时间格式（如 00:00:00）替换无效条目",
            "提示用户手动修正每个无效条目",
            "使用猜测算法尝试修复无效的时间格式",
            "将无效条目标记为“待定”，并允许用户后续编辑"
        ]
    },
    {
        "body": "ClassIsland 的 `SpeechService` 体系结构中，`EdgeTtsService` 和 `SystemSpeechService` 的主要区别是什么？",
        "correct_choices": [
            "`EdgeTtsService` 使用微软 Edge 浏览器的在线 TTS 服务，通常音质较好但需要联网；`SystemSpeechService` 使用操作系统内置的 SAPI TTS 引擎。",
            "一个依赖网络云端合成，一个依赖本地系统组件。"
        ],
        "incorrect_choices": [
            "`EdgeTtsService` 仅支持英文，`SystemSpeechService` 支持多语言。",
            "`SystemSpeechService` 的响应速度远快于 `EdgeTtsService`。",
            "`EdgeTtsService` 是付费服务，`SystemSpeechService` 是免费的。",
            "`SystemSpeechService` 可以自定义音色，`EdgeTtsService` 不支持。",
            "两者功能完全相同，只是实现方式不同。"
        ]
    },
    {
        "body": "ClassIsland 的 `ComponentPresenter` 控件，其 `Settings` 依赖属性发生变化时会触发什么操作？",
        "correct_choices": [
            "调用 `UpdateContent` 方法，根据新的 `ComponentSettings` 重新获取并显示组件或其设置控件",
            "重新加载并显示对应的组件实例"
        ],
        "incorrect_choices": [
            "仅更新组件的视觉样式，不重新加载组件",
            "将旧的设置保存到配置文件",
            "触发一个全局事件通知其他组件配置已更改",
            "如果新旧设置类型不匹配，则显示一个错误占位符",
            "清空当前显示的组件，等待用户手动选择新组件"
        ]
    },
    {
        "body": "在 ClassIsland 中，`AttachedSettingsTargets` 枚举定义了哪些目标可以附加设置？",
        "correct_choices": [
            "Lesson (课程)",
            "Subject (科目)",
            "TimePoint (时间点)",
            "ClassPlan (课表)",
            "TimeLayout (时间表)"
        ],
        "incorrect_choices": [
            "Application (应用全局)",
            "Plugin (插件)",
            "Component (组件)",
            "User (用户)",
            "Window (窗口)"
        ]
    },
    {
        "body": "ClassIsland 的 `MainWindow.xaml.cs` 中，`ReCheckTopmostState()` 方法的主要目的是什么？",
        "correct_choices": [
            "根据当前设置（`ViewModel.IsNotificationWindowExplicitShowed` 或 `ViewModel.Settings.WindowLayer == 1`）确保主窗口的置顶状态正确",
            "在窗口 Z 顺序可能发生变化时，重新应用窗口的置顶逻辑"
        ],
        "incorrect_choices": [
            "检查当前是否有其他应用以置顶方式运行",
            "切换主窗口的置顶和非置顶状态",
            "记录主窗口置顶状态的变化历史",
            "如果主窗口未置顶，则显示一个警告通知",
            "仅在主窗口激活时才检查并设置置顶状态"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileService` 中，`CreateTempClassPlan` 方法创建的临时层课表，其 `IsOverlay` 属性通常被设置为什么？",
        "correct_choices": [
            "true"
        ],
        "incorrect_choices": [
            "false",
            "null",
            "取决于源课表的设置",
            "由用户在创建时选择"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsWindowNew.xaml.cs` 中的 `OpenUri` 方法，如果接收到的 Uri 是 `classisland://app/settings/general?ci_keepHistory=true`，它会如何处理 `ci_keepHistory` 参数？",
        "correct_choices": [
            "在导航到 `general` 设置页面时，会保留当前的导航历史，允许用户返回",
            "将 `keepHistory` 参数解析为 true，并在调用 `CoreNavigate` 时传递，影响导航栈"
        ],
        "incorrect_choices": [
            "忽略所有查询参数，只处理路径部分",
            "将 `ci_keepHistory=true` 作为字符串参数传递给 `general` 设置页面的构造函数",
            "如果 `ci_keepHistory` 为 true，则在新窗口中打开设置页面",
            "该参数仅用于日志记录，不影响导航行为",
            "如果 `ci_keepHistory` 为 true，则在导航前清空所有历史记录"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在下载更新包前，如果发现 `UpdateTempPath` 目录已存在，它会如何处理？",
        "correct_choices": [
            "尝试删除已存在的 `UpdateTempPath` 目录及其内容",
            "清空旧的更新临时文件，以确保下载的是全新的更新包"
        ],
        "incorrect_choices": [
            "在该目录下创建一个新的子目录以下载更新包",
            "提示用户手动删除该目录后重试",
            "检查该目录中是否已存在有效的更新包，如果是则跳过下载",
            "追加下载，只下载缺失或损坏的文件",
            "抛出异常并停止更新过程"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ActionService.cs` 中，`LessonsServiceOnPostMainTimerTicked` 方法的主要职责是什么？",
        "correct_choices": [
            "检查当前时间是否越过了某些“行动”类型时间点的开始时间，如果是则触发这些行动",
            "在每个主计时器周期后，执行到期的行动时间点"
        ],
        "incorrect_choices": [
            "注册新的行动处理器",
            "更新所有已注册行动的内部状态",
            "保存当前所有行动的配置到文件",
            "处理用户通过 UI 触发的行动",
            "清理已完成或已过期的行动队列"
        ]
    },
    {
        "body": "ClassIsland 的 `ExcelImportWindow.xaml.cs` 中的 `NavigateCommand` 在导航到不同的导入步骤时，会根据 `e.Parameter` (导航目标) 执行哪些特定逻辑？",
        "correct_choices": [
            "当导航到 \"TimePointImportResult\" 时，会调用 `LoadTimeLayoutFromCurrentSelection` 解析时间表",
            "当导航到 \"PreviewClassPlan\" 时，会调用 `LoadClassPlan` 解析当前选定区域的课表",
            "当导航到 \"AllClassPlansView\" 时，会将当前编辑的课表添加到已导入课表列表"
        ],
        "incorrect_choices": [
            "总是将 `ViewModel.SlideIndex` 设置为固定的下一个值，不执行特定逻辑",
            "仅负责更新导航历史，不处理数据加载",
            "在导航前保存当前步骤的所有用户输入",
            "如果目标步骤无效，则显示错误消息",
            "会根据导入的文件类型（如 .xls vs .xlsx）选择不同的导航路径"
        ]
    },
    {
        "body": "ClassIsland 的 `HangService` 如何判断 UI 线程是否挂起？",
        "correct_choices": [
            "通过 `Application.Current.Dispatcher.InvokeAsync` 尝试执行一个空操作，并设置一个短超时（如100ms），如果超时则认为挂起",
            "检测 Dispatcher 是否能在限定时间内响应异步调用"
        ],
        "incorrect_choices": [
            "监控窗口消息队列的长度，如果队列过长则认为挂起",
            "使用 `IsHungAppWindow` Win32 API 函数检查主窗口状态",
            "定期检查主线程的 CPU 使用率，如果持续过高则认为挂起",
            "通过 `Thread.Sleep` 短暂阻塞主线程，如果导致界面无响应则认为挂起（这是错误的测试方法）",
            "分析最近的日志文件，查找与线程阻塞相关的错误信息"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsPageInfo` 特性中，`HideDefault` 属性为 true 时，对设置页面的行为有何影响？",
        "correct_choices": [
            "该设置页面默认不会显示在主导航列表中，可能需要通过特定方式（如 URI 导航）访问",
            "控制设置页面是否在标准导航视图中隐藏"
        ],
        "incorrect_choices": [
            "该设置页面将被完全禁用，无法访问",
            "该设置页面的所有配置项将使用默认值且不可编辑",
            "该设置页面将只在调试模式下可见",
            "该设置页面不会被集控策略影响",
            "该设置页面的内容会从一个默认模板加载"
        ]
    },
    {
        "body": "在 ClassIsland 的 `Profile.cs` 中，当 `TimeLayouts` 集合发生更改时（例如添加或删除了一个时间表），会间接触发哪个属性的 `PropertyChanged` 事件？",
        "correct_choices": [
            "`TimeLayout` (因为 `TimeLayouts` 的改变可能导致通过 `TimeLayoutId` 查找到的 `TimeLayout` 实例发生变化或变为 null)",
            "间接影响到 `TimeLayout` 属性的绑定更新"
        ],
        "incorrect_choices": [
            "`Name` (档案名称)",
            "`Subjects` (科目列表)",
            "`ClassPlans` (课表列表，除非 `TimeLayoutId` 直接关联的课表受影响)",
            "`IsOverlayClassPlanEnabled`",
            "`Id` (档案 GUID)"
        ]
    },
    {
        "body": "ClassIsland 的 `DiagnosticService.ExportDiagnosticData` 方法导出的 zip 包中，通常会包含哪些信息？",
        "correct_choices": [
            "应用日志 (Logs.log 或 Logs/ 文件夹)",
            "应用设置 (Settings.json)",
            "当前加载的档案文件 (Profiles/xxxx.json)",
            "集控配置 (Management/ 文件夹)",
            "系统和环境诊断信息 (DiagnosticInfo.txt)"
        ],
        "incorrect_choices": [
            "ClassIsland.exe 可执行文件",
            "所有已安装插件的 DLL 文件",
            "用户的 Windows 注册表备份",
            "系统事件查看器的完整日志",
            "最近的屏幕截图或录屏"
        ]
    },
    {
        "body": "ClassIsland 的 `ColorOctTreeNode.ReduceTree` 方法在何时被调用，其目的是什么？",
        "correct_choices": [
            "当八叉树中的叶子节点数量超过预设阈值（如16个）时被调用",
            "目的是合并颜色最相近或数量最少的叶子节点，以减少颜色数量，从而提取主色调"
        ],
        "incorrect_choices": [
            "在图像加载完成后立即调用，用于初始化八叉树结构",
            "当用户手动选择一种颜色作为主色调时调用",
            "用于将八叉树中的颜色转换为 HSV 或 HSL 色彩空间",
            "在图像处理出现错误时，用于回滚到上一个有效状态",
            "定期调用以优化八叉树的内存占用"
        ]
    },
    {
        "body": "ClassIsland 的 `ExcelImportWindow.xaml.cs` 中的 `LoadClassPlanSource` 方法，在自动模式下，是如何填充 `ViewModel.ClassRecognitionTimePoints` 集合的？",
        "correct_choices": [
            "它会遍历用户在时间表选区 (`TimePointSourcePosition`) 中指定的每一行或每一列，解析时间文本，并创建一个 `Selectable<TimeLayoutItem>`。",
            "如果解析出的时间点与当前选定时间表 (`ViewModel.SelectedTimeLayout`) 中的某个上课时间点匹配，则将对应的 `Selectable<TimeLayoutItem>` 的 `IsSelected` 设为 true。"
        ],
        "incorrect_choices": [
            "它会直接复制 `ViewModel.SelectedTimeLayout.Layouts` 中所有类型为上课的时间点。",
            "它会要求用户手动勾选哪些时间点需要被识别。",
            "它会尝试从 Excel 的列标题或行标题中识别时间点信息。",
            "它会根据 `ViewModel.ClassRecognitionRange` 中选中的范围自动生成时间点。",
            "它会忽略 `ViewModel.SelectedTimeLayout`，并根据 Excel 数据重新创建一个新的时间表。"
        ]
    },
    {
        "body": "ClassIsland 的 `ManagementService` 在加载策略文件时，如果集控清单中的 `PolicySource.Version` 低于或等于本地缓存的 `Versions.PolicyVersion`，会发生什么？",
        "correct_choices": [
            "不会从服务器重新下载策略文件，而是直接使用本地缓存的策略文件 (`ManagementPolicyPath`)",
            "跳过策略文件的网络获取步骤"
        ],
        "incorrect_choices": [
            "强制从服务器下载最新的策略文件，并覆盖本地缓存",
            "提示用户本地策略文件可能已过时，并询问是否更新",
            "删除本地缓存的策略文件，并使用应用内置的默认策略",
            "忽略版本号，总是尝试下载策略文件，如果下载失败则使用本地缓存",
            "比较本地缓存和服务器策略文件的内容哈希值，如果不同则更新"
        ]
    },
    {
        "body": "在 ClassIsland 的 `MainWindow.xaml.cs` 中，处理 `WM_INPUT` (0x00FF) 消息的 `ProcWnd` 方法，为什么会使用 `RawInputUpdateStopWatch` 来限制处理频率？",
        "correct_choices": [
            "防止过于频繁地处理原始输入事件，例如高精度鼠标的快速移动，从而避免不必要的性能开销",
            "对原始输入事件进行节流 (throttling)"
        ],
        "incorrect_choices": [
            "确保原始输入事件按正确的顺序处理",
            "在处理原始输入事件前添加一个固定的延迟，以等待其他相关事件",
            "记录处理每个原始输入事件所花费的时间，用于性能分析",
            "仅在秒表计时超过特定阈值后才开始处理原始输入事件",
            "用于计算两次原始输入事件之间的时间间隔"
        ]
    },
    {
        "body": "ClassIsland 的 `VisualTargetPresentationSource.cs` 主要用于解决 WPF 中的什么问题？",
        "correct_choices": [
            "在主 UI 线程的视觉树中承载由另一个不同 UI 线程拥有的视觉子树",
            "实现跨线程的 UI 组合和渲染"
        ],
        "incorrect_choices": [
            "优化大型视觉树的渲染性能",
            "为 UI 元素提供异步数据加载和绑定能力",
            "将 WPF UI 元素嵌入到 WinForms 或其他非 WPF 应用中",
            "实现自定义的命中测试和输入事件路由",
            "提供一种创建自定义 `PresentationSource` 的模板"
        ]
    },
    {
        "body": "在 ClassIsland 的插件模型中，如果一个插件的 `manifest.yml` 中未指定 `icon` 字段，插件列表会如何显示其图标？",
        "correct_choices": [
            "会尝试加载插件目录下的 `icon.png` 文件作为图标",
            "如果 `icon.png` 不存在，则显示一个默认的插件占位符图标 (如 `PackIconKind.Plugin`)"
        ],
        "incorrect_choices": [
            "插件将不显示任何图标",
            "会使用 ClassIsland 应用本身的图标作为插件图标",
            "会从插件的入口程序集中提取嵌入的图标资源",
            "会根据插件的 ID 生成一个唯一的颜色块作为图标",
            "会提示用户为该插件手动选择一个图标文件"
        ]
    },
    {
        "body": "ClassIsland 的 `App.xaml.cs` 在启动时，如果检测到 `ApplicationCommand.UpdateReplaceTarget` 不为 null，它会执行什么操作？",
        "correct_choices": [
            "调用 `UpdateService.ReplaceApplicationFile` 尝试用当前运行的程序替换指定路径的旧版程序",
            "启动被替换的路径下的程序（新版），并传入参数告知其删除当前临时运行的程序（旧版）"
        ],
        "incorrect_choices": [
            "直接将 `UpdateReplaceTarget` 指向的文件删除，并继续启动",
            "将 `UpdateReplaceTarget` 指向的旧版程序作为插件加载",
            "提示用户已检测到更新，并询问是否立即安装",
            "将应用的配置文件迁移到 `UpdateReplaceTarget` 指定的目录",
            "忽略该参数，正常启动应用"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsService.AddSettingsOverlay` 方法，如果对同一个设置属性（如 `Theme`）多次添加不同 GUID 的叠层，最终应用的设置值会是什么？",
        "correct_choices": [
            "最后一次添加的叠层的值",
            "该设置属性的叠层字典 (`Settings.SettingsOverlay[binding]`) 中，除了 \"@\" (原始值) 键之外，最后一个添加的键值对的值"
        ],
        "incorrect_choices": [
            "第一个添加的叠层的值",
            "所有叠层值的平均值（如果适用）或逻辑与/或的结果",
            "原始值（\"@\" 键对应的值），叠层仅用于记录历史",
            "会抛出异常，不允许对同一属性添加多个叠层",
            "会弹出一个对话框，要求用户选择哪个叠层生效"
        ]
    },
    {
        "body": "在 ClassIsland 中，`TimeLayoutItem` 实现了 `IComparable` 接口，其 `CompareTo` 方法主要基于哪个属性进行比较？",
        "correct_choices": [
            "`StartSecond.TimeOfDay` (时间点的开始时间的当天内时间部分)",
            "时间点的开始时间"
        ],
        "incorrect_choices": [
            "`EndSecond.TimeOfDay`",
            "`TimeType`",
            "`DefaultClassId`",
            "时间点的持续时长 (`Last`)",
            "时间点的创建顺序（内部索引）"
        ]
    },
    {
        "body": "ClassIsland 的 `WallpaperPickingService` 在“兼容模式”下，是如何尝试获取壁纸路径的？",
        "correct_choices": [
            "读取注册表 `HKEY_CURRENT_USER\\Control Panel\\Desktop` 下的 `WallPaper` 值",
            "通过查询系统桌面配置获取壁纸文件路径"
        ],
        "incorrect_choices": [
            "调用 `SystemParametersInfo` Win32 API 获取壁纸路径",
            "在用户图片文件夹中搜索名为 `wallpaper` 或 `background` 的图片",
            "使用 `DwmGetWindowAttribute` 获取桌面窗口的背景位图",
            "截取整个主屏幕的屏幕截图作为壁纸来源",
            "查询活动桌面主题包中的壁纸设置"
        ]
    },
    {
        "body": "ClassIsland 的 `StartupCompleted` 事件在何时触发？",
        "correct_choices": [
            "在 `MainWindow` 的 `OnContentRendered` 方法执行完毕，且Sentry等异步初始化完成后",
            "表示应用的主要部分已经加载并显示，可以开始处理用户交互和后台任务"
        ],
        "incorrect_choices": [
            "在 `App_OnStartup` 方法开始执行时立即触发",
            "在所有插件的 `Initialize` 方法都调用完毕后触发",
            "在主窗口 (`MainWindow`) 的构造函数执行完毕时触发",
            "在第一个计时器周期 (`MainTimerOnTick`) 完成后触发",
            "当用户完成欢迎向导并点击“完成”按钮时触发"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ProfileService.cs` 中，`MergeManagementProfileAsync` 方法是如何合并集控的课表、时间表和科目配置的？",
        "correct_choices": [
            "它会比较集控清单中各项配置源的版本号与本地缓存的版本号，如果服务器版本更新，则下载新的配置。",
            "下载的配置会与旧的本地集控缓存进行比较，并更新到 Profile 对象的相应字典中。",
            "使用了 `MergeDictionary` 辅助方法来更新字典内容。"
        ],
        "incorrect_choices": [
            "它会完全覆盖本地的 `_management-profile.json` 文件，而不进行合并。",
            "它只负责下载文件，实际的合并操作由 `LessonsService` 完成。",
            "它会将服务器的配置与用户当前的活动档案（非集控档案）进行合并。",
            "它会为每个集控配置项（课表、时间表、科目）创建一个新的 Profile 文件。",
            "它会弹出一个对话框，让用户手动选择如何合并冲突的配置项。"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsWindowNew.xaml.cs` 中，`_cachedPages` 字典的作用是什么，并且其行为受哪个设置项控制？",
        "correct_choices": [
            "用于缓存已创建的设置页面实例，以加快后续访问速度。",
            "其缓存行为（如不缓存、缓存到窗口关闭、一直缓存）由 `SettingsService.Settings.SettingsPagesCachePolicy` 控制。"
        ],
        "incorrect_choices": [
            "存储用户最近访问的设置页面列表，用于实现“最近使用”功能。",
            "缓存设置页面的 XAML 定义，以便动态加载。",
            "记录每个设置页面的修改历史，用于撤销/重做功能。",
            "保存每个设置页面的默认配置值。",
            "它的行为完全由代码硬编码，不受用户设置影响。"
        ]
    },
    {
        "body": "ClassIsland 的 `AutomationService` 在加载一个 `Workflow` 时，如果其 `TriggerSettings.TriggerInstance` 为 null，会执行什么操作？",
        "correct_choices": [
            "调用 `ActivateTrigger` 方法，根据 `TriggerSettings.AssociatedTriggerInfo` 和 `TriggerSettings.Settings` 来创建或获取触发器实例。",
            "为该触发器设置关联的工作流，并订阅其 `Triggered` 和 `TriggeredRecover` 事件。",
            "调用触发器实例的 `Loaded()` 方法。"
        ],
        "incorrect_choices": [
            "记录一个错误并跳过该触发器的加载。",
            "尝试从默认配置中为该触发器创建一个新的实例。",
            "将该 `Workflow` 标记为禁用，直到用户手动修复触发器配置。",
            "弹出一个对话框提示用户该触发器配置不完整。",
            "自动移除该触发器设置，并保存自动化配置。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AttachedSettingsControlPresenter.xaml.cs` 中，当 `IsDependencyMode` 为 true 时，控件的标题和图标通常反映什么？",
        "correct_choices": [
            "它所代表的附加设置节点的目标类型（如科目、时间点）和名称/时间范围。",
            "显示该节点在附加设置依赖链中的位置和基本信息。"
        ],
        "incorrect_choices": [
            "总是显示所选附加设置控件的默认标题和图标。",
            "显示其父节点的标题和图标。",
            "显示其直接子节点的标题和图标。",
            "显示一个通用的“依赖项”图标和文本。",
            "标题和图标将为空，只显示具体的设置内容。"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在下载完更新包并准备重启安装前，会执行 `ValidateUpdateAsync` 方法，该方法如何验证更新包的完整性？",
        "correct_choices": [
            "计算下载的 `update.zip` 文件的 SHA256 哈希值。",
            "将计算出的哈希值与 `Settings.UpdateArtifactHash` 中存储的预期哈希值进行比较。"
        ],
        "incorrect_choices": [
            "检查更新包的数字签名是否有效。",
            "尝试解压缩更新包，如果成功则认为有效。",
            "连接到更新服务器，请求对已下载文件的校验信息。",
            "比较更新包的文件大小是否与预期一致。",
            "仅在用户手动触发时才进行校验，自动下载时不校验。"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginService.InitializePlugins` 方法在加载插件时，如果一个插件的 `manifest.yml` 中指定的 `EntranceAssembly` 文件不存在或无法加载，会发生什么？",
        "correct_choices": [
            "该插件的 `PluginInfo.LoadStatus` 会被设置为 `PluginLoadStatus.Error`。",
            "相关的异常信息会被记录在 `PluginInfo.Exception` 属性中。",
            "该插件不会被成功加载，其 `Initialize` 方法也不会被调用。"
        ],
        "incorrect_choices": [
            "ClassIsland 应用会崩溃并退出。",
            "会尝试从插件市场的缓存中恢复该插件的旧版本。",
            "会提示用户手动指定正确的入口程序集路径。",
            "会忽略该插件并继续加载其他插件，不记录任何错误。",
            "会尝试在插件目录下的其他 DLL 文件中查找插件入口点。"
        ]
    },
    {
        "body": "ClassIsland 的 `App.xaml.cs` 中，`ProcessInstanceExisted` 方法在检测到已有实例运行时，它会如何处理命令行中通过 `--uri` 传入的导航请求？",
        "correct_choices": [
            "通过 IPC (IpcClient) 将 URI 导航请求发送给已运行的实例处理。",
            "尝试使用跨进程通信将 URI 传递给第一个实例。"
        ],
        "incorrect_choices": [
            "忽略 URI 参数，直接退出当前实例。",
            "提示用户已有一个实例运行，并询问是否要将 URI 复制到剪贴板。",
            "尝试关闭已运行的实例，然后用新的 URI 启动当前实例。",
            "在新的实例中处理该 URI，导致同时运行多个 ClassIsland 窗口。",
            "记录一个错误，指出无法在多实例情况下处理 URI 导航。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `LessonControlExpanded.xaml.cs` (用于课表组件展开项的控件) 中，`IsLiveUpdatingEnabled` 属性为 true 时，控件是如何更新时间相关属性 (如 `Seconds`, `LeftSeconds`) 的？",
        "correct_choices": [
            "它会订阅 `ILessonsService.PostMainTimerTicked` 事件。",
            "在事件处理程序中，它会从 `IExactTimeService` 获取当前精确时间，并据此计算和更新时间相关属性。",
            "同时会根据 `ILessonControlSettings` 来更新 `MasterTabIndex` 和 `ExtraInfo4ShowSeconds` 等显示相关的状态。"
        ],
        "incorrect_choices": [
            "它会启动一个独立的 `DispatcherTimer` 来定期刷新时间。",
            "这些属性只在控件加载时设置一次，之后不再更新。",
            "它依赖于父控件 `LessonsListBox` 通过数据绑定直接更新这些属性。",
            "它会直接读取 `ILessonsService` 的相关属性，而不进行自己的计算。",
            "它通过 IPC 向一个后台服务查询实时的时间信息。"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsService.MigrateSettings` 方法中，从版本低于 1.4.1.0 的设置迁移到新版组件系统时，原先的 `SelectedMiniInfoProvider` GUID (如代表“日期”的 D9FC55D6...) 会如何被处理？",
        "correct_choices": [
            "会根据旧的 `SelectedMiniInfoProvider` GUID 和 `ShowDate` 设置，在新的 `CurrentComponents` 列表中添加对应的组件（如日期组件、天气组件等）。",
            "原先的“快速信息”配置会被转换为等效的组件配置。",
            "如果原先显示日期，则添加日期组件；如果显示天气，则添加天气组件，并尝试迁移其设置。"
        ],
        "incorrect_choices": [
            "会完全忽略旧的 `SelectedMiniInfoProvider` 设置，并使用默认的组件配置。",
            "会弹出一个对话框，要求用户手动选择要迁移的组件。",
            "会将旧的 `SelectedMiniInfoProvider` GUID 直接作为新组件的 ID，如果找不到对应组件则显示错误。",
            "只迁移“课程表”组件的设置，其他快速信息设置会被丢弃。",
            "会将所有旧的快速信息提供方都转换为文本组件，显示其原始 GUID。"
        ]
    },
    {
        "body": "ClassIsland 的 `WallpaperPickingService` 在非兼容模式下，如果 `SettingsService.Settings.WallpaperClassName` 为空，它会尝试从哪个窗口类名获取壁纸截图？",
        "correct_choices": [
            "Progman (程序管理器窗口)",
            "WorkerW (某些情况下的桌面窗口)"
        ],
        "incorrect_choices": [
            "Shell_TrayWnd (任务栏窗口)",
            "DesktopWallpaperView (虚构类名)",
            "Explorer.EXE (进程名，非类名)",
            "Windows.UI.Core.CoreWindow (UWP 窗口)",
            "此情况下会直接回退到兼容模式"
        ]
    },
    {
        "body": "在 ClassIsland 中，`WindowRuleService` 注册的 `EVENT_SYSTEM_FOREGROUND` 事件，其回调函数 `PfnWinEventProc` 在执行时，为什么通常需要使用 `Dispatcher.CurrentDispatcher.InvokeAsync` 来调用 `ForegroundWindowChanged` 事件？",
        "correct_choices": [
            "因为 `SetWinEventHook` 的回调可能在非 UI 线程上执行，直接操作 UI 元素或依赖 UI 线程的服务会引发跨线程访问异常。",
            "确保事件处理逻辑在应用程序的主 UI 线程上安全执行。"
        ],
        "incorrect_choices": [
            "为了给事件处理添加一个延迟，避免过于频繁地更新。",
            "为了将事件排入一个低优先级的队列，不影响其他关键操作。",
            "因为 `ForegroundWindowChanged` 事件本身设计为异步执行。",
            "这是 `SetWinEventHook` API 的固定用法，不使用 `InvokeAsync` 会导致钩子失效。",
            "为了在事件处理中能够访问 `Application.Current` 对象。"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginMarketService` 在刷新插件源时，如果 `SettingsService.Settings.OfficialIndexMirrors` 为空，它会使用哪个备用镜像列表？",
        "correct_choices": [
            "一个硬编码在 `PluginMarketService.cs` 中的包含 github, ghproxy, moeyy 的字典",
            "`FallbackMirrors` 静态属性"
        ],
        "incorrect_choices": [
            "尝试从 `https://get.classisland.tech/mirrors.json` 下载最新的镜像列表",
            "提示用户手动添加至少一个插件源镜像",
            "仅使用 `github.com` 作为唯一的官方镜像源",
            "禁用插件市场功能，直到用户配置了镜像源",
            "从应用的配置文件 `PluginSources.json` 中读取备用列表"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ProfileService.CleanExpiredTempClassPlan` 方法中，除了删除 `Profile.OrderedSchedules` 中已过期的条目外，还会清理 `Profile.ClassPlans` 中的哪些类型的课表？",
        "correct_choices": [
            "所有 `IsOverlay` 为 true，并且其 ID 不再存在于任何 `OrderedSchedules` 条目中的课表",
            "未被任何预定日程引用的临时层课表"
        ],
        "incorrect_choices": [
            "所有 `IsEnabled` 为 false 的课表",
            "所有未关联任何时间表的课表",
            "所有最后修改时间早于特定日期的课表",
            "仅删除 `OverlayClassPlanId` 指向的课表，如果它已过期",
            "所有名称包含“临时”或“备份”字样的课表"
        ]
    },
    {
        "body": "ClassIsland 的 `RuleSettingsControlBase<T>` 泛型类中的 `Settings` 属性是如何获取其具体类型 `T` 的实例的？",
        "correct_choices": [
            "通过其非泛型基类 `RuleSettingsControlBase` 的 `SettingsInternal` 属性进行类型转换得到，`SettingsInternal` 的值在控件实例化时由 `RuleSettingsControlBase.GetInstance` 方法设置。",
            "依赖于 `GetInstance` 方法在创建控件时，根据注册信息反序列化或创建正确的设置对象，并赋给 `SettingsInternal`。"
        ],
        "incorrect_choices": [
            "在控件的构造函数中直接使用 `new T()` 创建。",
            "通过 XAML 中的数据绑定直接从 `DataContext` 获取。",
            "从一个全局的设置服务中根据控件的 ID 查询获取。",
            "在 `OnApplyTemplate` 方法中从模板部件中查找并转换。",
            "使用反射查找并调用一个静态工厂方法来创建 `T` 的实例。"
        ]
    },
    {
        "body": "ClassIsland 的 `ActionService` 在调用一个行动的处理程序 (`HandleDelegate`) 时，传入的 `guid` 参数代表什么？",
        "correct_choices": [
            "触发该行动的行动组 (`ActionSet`) 的 GUID。",
            "用于标识当前行动执行上下文的唯一 ID，主要用于设置叠层等场景。"
        ],
        "incorrect_choices": [
            "行动本身的 ID (`Action.Id`)。",
            "触发该行动的工作流 (`Workflow`) 的 GUID。",
            "当前用户的唯一标识符。",
            "ClassIsland 应用实例的 GUID。",
            "一个随机生成的用于日志追踪的 GUID。"
        ]
    },
    {
        "body": "ClassIsland 的 `ClassPlanGroup.DefaultGroupGuid` 是一个静态只读属性，它在 `Profile.cs` 的构造函数中起什么作用？",
        "correct_choices": [
            "如果档案的 `ClassPlanGroups` 字典中不存在以 `DefaultGroupGuid` 为键的条目，则会自动创建一个名为“默认”的课表群并添加到字典中。",
            "确保每个 Profile 对象至少拥有一个“默认”课表群。"
        ],
        "incorrect_choices": [
            "用于生成所有新课表群的唯一 ID。",
            "作为全局课表群的 GUID。",
            "在加载档案时，如果找不到 `SelectedClassPlanGroupId` 对应的课表群，则用此 GUID 作为回退。",
            "用于验证课表群 ID 的格式是否正确。",
            "在创建临时课表群时，作为其父群组的默认 ID。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `UpdateService.cs` 中，`IsNewerVersion` 方法在什么情况下会返回 true，即使传入的版本号 (verCode) 不高于当前应用版本？",
        "correct_choices": [
            "当 `isForce` 参数为 true 时，即使 `verCode` 不高于当前版本也会返回 true。",
            "用于强制更新或重新下载当前版本（如果 `isForce` 为 true）。"
        ],
        "incorrect_choices": [
            "当 `isCancel` 参数为 true 时。",
            "当 `Settings.LastUpdateStatus` 为 `UpdateStatus.UpdateDownloaded` 时。",
            "当 `verCode` 的修订版本号高于当前应用版本，即使主版本号和次版本号较低。",
            "该方法总是严格比较版本号，没有此种情况。",
            "当检测到本地更新文件损坏时。"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginMarketService.RefreshPluginSourceAsync` 方法在刷新插件源时，官方插件源的 URL 是如何构成的？",
        "correct_choices": [
            "基于 `https://get.classisland.tech/d/ClassIsland-Ningbo-S3/classisland/plugin/index.zip`，并附加一个时间戳查询参数。",
            "从一个固定的基础 URL 结合动态时间戳生成。"
        ],
        "incorrect_choices": [
            "从 `SettingsService.Settings.OfficialIndexMirrors` 中随机选择一个 URL。",
            "通过 `IPluginService.DefaultPluginIndexKey` 和 `SettingsService.Settings.OfficialSelectedMirror` 组合在 `PluginIndexes` 中查找 URL。",
            "直接使用 `PluginService.PluginsIndexPath` 下的本地缓存文件。",
            "从 `PluginRepoManifest.cs` 中读取固定的 URL。",
            "向 `classisland.tech` 的某个 API 端点请求最新的插件源 URL。"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileSettingsWindow.xaml.cs` 中，`RefreshClassesList` 方法在什么情况下会被调用？",
        "correct_choices": [
            "当 `ViewModel.ClassPlan` 属性发生变化时 (通过 `ViewModel.PropertyChanged`)。",
            "当选定的课表 (`ListViewClassPlans.SelectedItem`) 发生变化时 (通过 `ListViewClassPlans_OnSelectionChanged`)。",
            "当关联的时间表 (`TimeLayout`) 的 `LayoutObjectChanged` 或 `LayoutItemChanged` 事件触发时。"
        ],
        "incorrect_choices": [
            "仅在窗口加载 (`OnContentRendered`) 时调用一次。",
            "每次主计时器 (`MainTimerOnTick`) 触发时。",
            "当用户手动点击“刷新课表”按钮时。",
            "在导入新的 Excel 文件后自动调用。",
            "当应用的全局设置（如字体大小）发生变化时。"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsWindowNew.xaml.cs` 中，`CoreNavigate` 方法是如何处理 `SettingsWindowNavigationData` 中的 `KeepHistory` 参数的？",
        "correct_choices": [
            "如果 `KeepHistory` 为 false，并且导航不是来自 URI (即 `IsNavigateFromUri` 为 false)，则会在导航后调用 `NavigationService.RemoveBackEntry()` 来清除上一个导航历史。",
            "用于控制是否在设置页面的导航栈中保留上一个页面的记录。"
        ],
        "incorrect_choices": [
            "如果 `KeepHistory` 为 true，则将当前页面缓存到 `_cachedPages` 字典中。",
            "该参数仅用于判断是否应显示“返回”按钮，不直接操作导航历史。",
            "`KeepHistory` 为 true 时，导航动画会加速；为 false 时，动画会变慢。",
            "该参数决定了导航到新页面时，是否需要重新实例化页面对象。",
            "该参数会被忽略，导航历史总是被保留，除非用户点击“返回”按钮。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `FileFolderService.CreateBackupAsync` 方法中，如果 `isAuto` 参数为 true，备份文件夹的名称会包含什么前缀？",
        "correct_choices": [
            "Auto_"
        ],
        "incorrect_choices": [
            "Backup_",
            "Temp_",
            "Scheduled_",
            "System_",
            "User_"
        ]
    },
    {
        "body": "ClassIsland 的 `ConsoleService.InitializeConsole()` 方法仅在什么构建配置下会实际分配控制台窗口？",
        "correct_choices": [
            "DEBUG 构建配置",
            "当项目以 Debug 模式编译时"
        ],
        "incorrect_choices": [
            "Release 构建配置",
            "所有构建配置",
            "当检测到特定命令行参数时",
            "仅在 Windows 7 系统上",
            "当应用以管理员权限运行时"
        ]
    },
    {
        "body": "ClassIsland 的 `DiagnosticService.GetDeviceInfo` 方法使用哪个 WMI 类来获取设备名称和供应商信息？",
        "correct_choices": [
            "Win32_ComputerSystemProduct"
        ],
        "incorrect_choices": [
            "Win32_OperatingSystem",
            "Win32_Processor",
            "Win32_BIOS",
            "Win32_BaseBoard",
            "CIM_ManagedSystemElement"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SettingsService.cs` 中，`MigrateSettings` 方法主要处理从哪个版本之前的设置迁移？",
        "correct_choices": [
            "1.4.1.0",
            "1.4.3.0",
            "1.5.3.0",
            "1.5.4.0"
        ],
        "incorrect_choices": [
            "1.0.0.0",
            "1.3.0.0",
            "1.6.0.0",
            "2.0.0.0"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在成功下载更新包后，会将 `Settings.LastUpdateStatus` 设置为什么值？",
        "correct_choices": [
            "UpdateStatus.UpdateDownloaded",
            "已下载更新"
        ],
        "incorrect_choices": [
            "UpdateStatus.UpToDate",
            "UpdateStatus.UpdateAvailable",
            "UpdateWorkingStatus.Idle",
            "UpdateWorkingStatus.ExtractingUpdates"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ThemeService.SetTheme` 方法中，如果 `themeMode` 参数为 0 (跟随系统)，它是如何确定当前系统是亮色还是暗色主题的？",
        "correct_choices": [
            "读取注册表键 `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize` 下的 `AppsUseLightTheme` 值。",
            "查询 Windows 个性化设置中的应用主题模式。"
        ],
        "incorrect_choices": [
            "调用 `DwmGetColorizationColor` 并根据返回的颜色亮度判断。",
            "检查 `SystemParameters.HighContrast` 属性。",
            "使用一个内置的轻量级算法分析当前壁纸的平均亮度。",
            "依赖 `UISettings.GetColorValue(UIColorType.Background)` (UWP API)。",
            "总是默认为亮色，除非 ClassIsland 自身的设置中指定了暗色。"
        ]
    },
    {
        "body": "ClassIsland 的 `WindowRuleService` 使用了 `SetWinEventHook` API，其回调函数 `PfnWinEventProc` 在接收到哪些事件时会触发 `ForegroundWindowChanged` 事件？",
        "correct_choices": [
            "EVENT_SYSTEM_FOREGROUND (前景窗口改变时)",
            "EVENT_SYSTEM_MOVESIZEEND (窗口移动或大小调整结束时)",
            "EVENT_SYSTEM_MINIMIZEEND (窗口从最小化恢复或完成最小化时)",
            "EVENT_OBJECT_LOCATIONCHANGE (当窗口位置改变且非移动操作导致时)",
            "当焦点窗口发生改变或者其状态发生重要变化时"
        ],
        "incorrect_choices": [
            "仅在 EVENT_SYSTEM_FOREGROUND 事件时",
            "在所有接收到的窗口事件时",
            "仅在 EVENT_OBJECT_CREATE 和 EVENT_OBJECT_DESTROY 事件时",
            "当窗口内容重绘 (WM_PAINT) 时",
            "当鼠标在窗口间移动 (WM_MOUSEMOVE) 时"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginMarketService.RefreshPluginSourceAsync` 方法在下载插件索引压缩包后，会将解压的内容存放到哪个目录下？",
        "correct_choices": [
            "PluginsIndexPath 下以插件源 ID 命名的子目录 (如 `Config/PluginsIndex/Default/`)",
            "应用配置目录下的 PluginsIndex 文件夹内的对应子文件夹"
        ],
        "incorrect_choices": [
            "PluginsRootPath (插件安装目录)",
            "PluginsPkgRootPath (插件包缓存目录)",
            "AppCacheFolderPath 下的 PluginIndexCache 目录",
            "AppTempFolderPath 下的临时目录，处理完即删除",
            "直接在内存中处理，不存放到本地文件系统"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AttachedSettingsControlPresenter.xaml.cs` 中，`AnalyzeAsync` 方法被调用时，它会如何填充 `NextItems` 和 `PreviousItems` 集合？",
        "correct_choices": [
            "调用 `IProfileAnalyzeService.FindNextObjects` 和 `FindPreviousObjects` 方法。",
            "基于当前附加设置控件的地址 (`ContentId`, `ContentIndex`) 和所选的附加设置类型 (`ControlInfo.Guid`)，查找依赖链中的前后节点。"
        ],
        "incorrect_choices": [
            "直接从 `TargetObject.AttachedObjects` 中筛选出启用状态的设置。",
            "遍历所有已加载的档案对象，手动构建依赖关系。",
            "从一个全局的附加设置依赖缓存中读取信息。",
            "使用反射查找所有实现了特定接口的附加设置，并按优先级排序。",
            "仅当 `IsDependencyMode` 为 false 时才填充这些集合。"
        ]
    },
    {
        "body": "ClassIsland 的 `SpeechService` 体系中，`EdgeTtsService` 在合成语音前，如果发现请求文本的语音缓存文件已存在于 `EdgeTtsCacheFolderPath` 中，它会怎么做？",
        "correct_choices": [
            "跳过网络请求和语音合成步骤，直接将本地缓存文件的路径加入播放队列。",
            "直接使用本地缓存的语音文件进行播放。"
        ],
        "incorrect_choices": [
            "仍然向 Edge TTS 服务发送请求，但指示其使用缓存（如果支持）。",
            "删除旧的缓存文件，并重新合成和下载最新的语音。",
            "比较缓存文件的时间戳和服务器上可能的更新时间，如果服务器有更新则重新下载。",
            "提示用户已存在缓存，并询问是否使用缓存或重新合成。",
            "将缓存文件作为参考音频，与新文本一起发送给 TTS 服务进行风格迁移。"
        ]
    },
    {
        "body": "ClassIsland 的 `SplashService` 中的 `CurrentProgress` 属性发生变化时，会触发哪个事件？",
        "correct_choices": [
            "`ProgressChanged` 事件",
            "一个类型为 `EventHandler<double>` 的事件"
        ],
        "incorrect_choices": [
            "`SplashStatusChanged` 事件",
            "`SplashCompleted` 事件",
            "`LoadingStepAdvanced` 事件",
            "`INotifyPropertyChanged.PropertyChanged` 事件 (虽然也会，但题目更具体)",
            "不会触发任何特定事件，仅更新绑定"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ViewModelBase` (通过 `ObservableRecipient`) 中，`OnPropertyChanged()` 方法通常需要传入什么参数？",
        "correct_choices": [
            "发生变化的属性的名称 (字符串形式)",
            "使用 `[CallerMemberName]` 特性时可以自动获取调用该方法的属性名"
        ],
        "incorrect_choices": [
            "属性的新值和旧值",
            "一个包含所有已更改属性的字典",
            "属性的 `DependencyProperty` 标识符",
            "一个指向属性的 `PropertyInfo` 对象",
            "不需要参数，它会自动检测所有已更改的属性"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileSettingsWindow.xaml.cs` 中的 `OpenDrawer` 方法，其 `key` 参数代表什么？",
        "correct_choices": [
            "一个在窗口或页面资源中定义的 `FrameworkElement` (通常是 `Panel` 或 `UserControl`) 的资源键 (x:Key)",
            "要在抽屉中显示的内容的资源名称"
        ],
        "incorrect_choices": [
            "要打开的抽屉的唯一ID (GUID)",
            "一个表示抽屉类型的枚举值",
            "一个包含抽屉配置信息的 JSON 字符串",
            "要加载的 XAML 文件的相对路径",
            "一个委托，用于动态创建抽屉内容"
        ]
    },
    {
        "body": "在 ClassIsland 的 `UpdateService.cs` 中，`IsNewerVersion` 方法的 `isForce` 参数为 true 时，此方法会返回什么？",
        "correct_choices": [
            "True (总是返回 true，忽略版本比较)",
            "表示需要强制更新或重新下载"
        ],
        "incorrect_choices": [
            "False (因为版本可能并非更新)",
            "取决于 `verCode` 是否大于当前应用版本",
            "取决于 `isCancel` 参数的值",
            "取决于 `Settings.LastUpdateStatus` 的状态",
            "抛出一个异常，指示不应在强制模式下进行版本比较"
        ]
    },
    {
        "body": "ClassIsland 的 `RuleSettingsControlBase.GetInstance` 方法，如果传入的 `RuleRegistryInfo.SettingsControlType` 为 null，它会返回什么？",
        "correct_choices": [
            "null (因为没有设置控件类型可供实例化)",
            "表示该规则不需要自定义设置界面"
        ],
        "incorrect_choices": [
            "一个通用的属性编辑器控件，用于编辑原始设置对象",
            "一个显示“无可用设置”的占位符控件",
            "抛出一个 `ArgumentNullException`",
            "尝试从 `RuleRegistryInfo.SettingsType` 推断控件类型",
            "返回一个空的 `UserControl`"
        ]
    },
    {
        "body": "ClassIsland 的 `Profile.cs` 中，当 `TimeLayouts` 字典的内容通过代码直接修改（而不是通过 `Add` 或 `Remove` 方法）后，为了确保 `TimeLayout` 属性和相关绑定能正确更新，开发者可能需要手动调用哪个方法？",
        "correct_choices": [
            "`OnPropertyChanged(nameof(TimeLayouts))` (虽然这通常由 `ObservableDictionary` 自动处理，但如果直接替换整个字典实例则需要)",
            "`ProfileService.Profile.RefreshTimeLayouts()` (这个方法会遍历课表并更新其对时间表的引用)"
        ],
        "incorrect_choices": [
            "`TimeLayouts.CollectionChanged` 事件的订阅者会自动处理",
            "不需要任何额外操作，WPF 绑定会自动检测深层变化",
            "调用 `Profile.NotifyPropertyChanged(\"TimeLayout\")`",
            "调用 `ProfileService.SaveProfile()` 来强制刷新",
            "重启应用以重新加载档案"
        ]
    },
    {
        "body": "在 ClassIsland 的 `App.xaml.cs` 中，`ProcessInstanceExisted` 方法在检测到已有实例运行时，如果用户在弹出的 `InstanceExistedWindow` 中点击了“重启应用”按钮，它会尝试如何重启？",
        "correct_choices": [
            "尝试结束所有其他同名进程，然后以 `-m` (waitMutex) 参数启动新实例",
            "通过杀死旧进程并启动新进程的方式进行“重启”"
        ],
        "incorrect_choices": [
            "向已运行的实例发送一个 IPC 消息，请求其自行重启",
            "直接以 `-m` 参数启动新实例，不尝试结束旧实例",
            "修改系统注册表中的自启动项，并在下次系统启动时完成重启",
            "提示用户手动关闭已运行的实例，然后再重新启动",
            "不执行任何操作，仅关闭提示窗口"
        ]
    },
    {
        "body": "ClassIsland 的 `AutomationService.LoadConfig` 方法在加载自动化配置时，如果当前配置名的文件不存在，它的行为是什么？",
        "correct_choices": [
            "创建一个新的、空的 `ObservableCollection<Workflow>`，并将其保存到对应的配置文件路径。",
            "初始化并保存一个新的自动化配置文件。"
        ],
        "incorrect_choices": [
            "尝试加载名为 `Default.json` 的自动化配置文件作为回退。",
            "抛出一个 `FileNotFoundException` 并停止加载自动化功能。",
            "提示用户选择一个已存在的自动化配置文件或创建一个新的。",
            "禁用自动化功能，直到用户手动创建一个有效的配置文件。",
            "从应用的内置资源中加载一个预设的自动化配置模板。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `FileFolderService.CreateBackupAsync` 方法中，`rootPath` 参数的默认值是什么？",
        "correct_choices": [
            "`App.AppRootFolderPath` (应用根目录)",
            "ClassIsland 可执行文件所在的目录"
        ],
        "incorrect_choices": [
            "`App.AppDataFolderPath` (应用数据目录)",
            "`App.AppConfigPath` (应用配置目录)",
            "用户的文档文件夹",
            "系统临时文件夹",
            "null，必须显式提供"
        ]
    },
    {
        "body": "ClassIsland 的 `CrashWindow.xaml.cs` 中，如果 `IsCritical` 属性为 true，并且用户点击了“退出应用”按钮，程序会如何退出？",
        "correct_choices": [
            "调用 `Environment.Exit(1)` 强制退出进程",
            "以非零退出码终止应用程序"
        ],
        "incorrect_choices": [
            "调用 `Application.Current.Shutdown()` 正常关闭应用",
            "尝试保存当前状态并优雅退出",
            "隐藏崩溃窗口并继续运行（如果 `AllowIgnore` 为 true）",
            "触发一个全局异常，让 Sentry 捕获并上报",
            "启动一个新的 ClassIsland 实例并关闭当前实例"
        ]
    },
    {
        "body": "ClassIsland 的 `UpdateService` 在进行更新包的哈希校验 (`ValidateUpdateAsync`) 时，如果 `Settings.UpdateArtifactHash` 为空或空白，会发生什么？",
        "correct_choices": [
            "跳过更新文件的哈希校验过程",
            "记录一条警告日志，指出未找到缓存的校验信息"
        ],
        "incorrect_choices": [
            "抛出一个异常，指示更新文件校验失败",
            "尝试从更新服务器重新获取哈希值",
            "使用一个默认的、预置的哈希值进行校验",
            "提示用户更新包可能已损坏，并询问是否继续安装",
            "将更新包标记为不可信，并删除已下载的文件"
        ]
    },
    {
        "body": "在 ClassIsland 的 `WallpaperPickingService.GetWallpaperAsync` 方法中，如果 `SettingsService.Settings.ColorSource` 设置为 3 (屏幕主题色)，它会尝试截取哪个屏幕的图像？",
        "correct_choices": [
            "由 `SettingsService.Settings.WindowDockingMonitorIndex` 指定的显示器，如果该索引有效",
            "如果 `WindowDockingMonitorIndex` 无效，则默认为主显示器 (`Screen.PrimaryScreen`)"
        ],
        "incorrect_choices": [
            "总是截取主显示器的图像",
            "截取所有连接的显示器的图像，并合并它们",
            "截取包含当前活动窗口的显示器的图像",
            "从系统主题设置中直接读取屏幕强调色，而不进行截图",
            "依赖于 `DesktopWindowClassName` 设置来确定要截图的窗口"
        ]
    },
    {
        "body": "ClassIsland 的 `TimeLineListItemExpandingAdornerControl.xaml.cs` 中，`PrevTimePoint` 方法在查找上一个时间点时，默认会排除哪种类型的时间点？",
        "correct_choices": [
            "类型为 2 (分割线) 的时间点",
            "分割线 (TimeType 2) 和行动 (TimeType 3，如果默认 type[] 不包含它)"
        ],
        "incorrect_choices": [
            "类型为 0 (上课) 的时间点",
            "类型为 1 (课间休息) 的时间点",
            "所有 `IsHideDefault` 为 true 的时间点",
            "不排除任何类型的时间点",
            "只查找与当前时间点在同一课表群组内的时间点"
        ]
    },
    {
        "body": "ClassIsland 的 `ConsoleService.cs` 中，`ConsoleHWnd` 属性是在什么时候被赋值的？",
        "correct_choices": [
            "在 `InitializeConsole()` 方法中，调用 `AllocConsole()` (如果是 Debug 构建) 后，再调用 `GetConsoleWindow()` 获取控制台窗口句柄时",
            "当控制台窗口被创建或附加后"
        ],
        "incorrect_choices": [
            "在 `ConsoleService` 的构造函数中立即赋值",
            "在应用启动时，通过读取命令行参数获取",
            "当用户在调试菜单中手动启用控制台时",
            "仅当应用发生未处理异常时才赋值并显示控制台",
            "该属性始终为 `IntPtr.Zero`，除非外部程序设置"
        ]
    },
    {
        "body": "在 ClassIsland 的 `NotificationHostService.cs` 中，`RequestQueue` 属性的类型是什么？",
        "correct_choices": [
            "`PriorityQueue<NotificationRequest, NotificationPriority>`",
            "一个优先队列，用于存储待处理的提醒请求"
        ],
        "incorrect_choices": [
            "`Queue<NotificationRequest>` (普通队列)",
            "`List<NotificationRequest>`",
            "`ObservableCollection<NotificationRequest>`",
            "`ConcurrentQueue<NotificationRequest>`",
            "`Stack<NotificationRequest>`"
        ]
    },
    {
        "body": "ClassIsland 的 `SpeechService` 体系中，`GptSoVitsService.GetCachePath` 方法生成的缓存文件名是基于哪些信息计算 MD5 哈希的？",
        "correct_choices": [
            "要朗读的文本内容 (`text`)",
            "当前选择的 GPT-SoVITS 语音名称 (`SettingsService.Settings.GptSoVitsSpeechSettings.GptSoVitsVoiceName`)"
        ],
        "incorrect_choices": [
            "当前时间戳",
            "参考音频路径 (`GptSoVitsRefAudioPath`)",
            "提示文本 (`GptSoVitsPromptText`)",
            "用户的唯一标识符 (CUID)",
            "ClassIsland 的应用版本号"
        ]
    },
    {
        "body": "ClassIsland 的 `ClassPlan` 模型中，`RefreshIsChangedClass` 方法的作用是什么？",
        "correct_choices": [
            "如果当前课表是临时层 (`IsOverlay` 为 true) 并且有关联的源课表 (`OverlaySourceId` 有效)，则比较当前课表的课程与源课表的课程，标记发生改变的课程的 `IsChangedClass` 属性。",
            "更新课表内每个课程是否为“已更改课程”的状态。"
        ],
        "incorrect_choices": [
            "检查整个课表对象是否有任何属性发生了变化。",
            "将所有课程的 `IsChangedClass` 属性重置为 false。",
            "从集控服务器获取最新的课表数据并更新当前课表。",
            "如果课表被修改，则自动创建一个新的临时层。",
            "刷新课表在主界面上的显示，高亮显示已更改的课程。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `AttachedSettingsControlPresenter.xaml.cs` 中，`UpdateContent` 方法在什么时候会被调用？",
        "correct_choices": [
            "当 `TargetObject` 依赖属性发生变化时。",
            "当 `ControlInfo` 依赖属性发生变化时。",
            "当 `ContentId` 依赖属性发生变化时。"
        ],
        "incorrect_choices": [
            "仅在控件加载 (`Loaded`) 时调用一次。",
            "当用户在附加设置控件中修改了某个值时。",
            "在主计时器的每个周期 (`MainTimerOnTick`) 调用。",
            "当应用的全局主题发生变化时。",
            "当关联的档案文件被保存时。"
        ]
    },
    {
        "body": "ClassIsland 的 `IpcClient.cs` 中定义的 `PipeName` 常量是什么？",
        "correct_choices": [
            "ClassIsland.IPC.v2.Server"
        ],
        "incorrect_choices": [
            "ClassIsland.IPC.Client",
            "ClassIsland.InterProcessCom",
            "CI_IPC_Channel",
            "dev.classisland.ipc.pipe",
            "Global\\ClassIslandIpc"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ComponentSettings` 模型中，`AssociatedComponentInfo` 属性是如何在运行时获取到 `ComponentInfo` 实例的？",
        "correct_choices": [
            "通过其 `Id` 属性（一个 GUID 字符串）在 `ComponentRegistryService.Registered` 集合中查找匹配的 `ComponentInfo` 对象。",
            "在需要时，根据组件ID从组件注册表中查询。"
        ],
        "incorrect_choices": [
            "该属性在 `ComponentSettings` 对象实例化时通过构造函数注入。",
            "通过反射读取组件类自身的 `ComponentInfoAttribute`。",
            "从一个全局的 `ComponentInfo` 缓存字典中根据 `Id` 获取。",
            "由 `ComponentsService.GetComponent` 方法在创建组件实例后手动设置。",
            "在 XAML 中通过数据绑定从父容器或数据上下文中获取。"
        ]
    },
    {
        "body": "ClassIsland 的 `MainWindow.xaml.cs` 中的 `UpdateWindowPos` 方法，在计算窗口位置时，如果 `ViewModel.Settings.IsIgnoreWorkAreaEnabled` 为 true，它会使用哪个区域作为基准？",
        "correct_choices": [
            "`screen.Bounds` (显示器的完整边界，忽略任务栏等)",
            "屏幕的物理边界"
        ],
        "incorrect_choices": [
            "`screen.WorkingArea` (屏幕的工作区，通常不包括任务栏)",
            "主窗口当前客户区的大小",
            "由用户在设置中定义的自定义区域",
            "桌面图标排列的区域",
            "活动窗口所在的区域"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ManagementService.cs` 中，如果应用以禁用集控的命令行参数 (`App.ApplicationCommand.DisableManagement`) 启动，`IsManagementEnabled` 属性会是什么状态？",
        "correct_choices": [
            "false (即使配置文件中设置为 true)",
            "会被强制设置为禁用状态"
        ],
        "incorrect_choices": [
            "true (如果配置文件中设置为 true)",
            "取决于 `ManagementSettingsPath` 文件中的配置",
            "会弹出一个对话框询问用户是否临时启用集控",
            "会尝试连接到集控服务器，如果连接失败则为 false",
            "该属性将被忽略，应用行为如同未启用集控"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginService.InitializePlugins` 方法是如何确定一个插件是否应该被加载的（除了检查文件是否存在）？",
        "correct_choices": [
            "检查插件目录中是否存在 `.disabled` 文件，如果存在则不加载。",
            "检查插件的 `manifest.yml` 中定义的 `apiVersion` 是否满足当前 ClassIsland 版本的最低要求。",
            "确保插件的 `Id` 没有在 `IPluginService.LoadedPluginsIds` 中重复。"
        ],
        "incorrect_choices": [
            "检查插件的数字签名是否有效。",
            "从插件市场查询该插件的兼容性状态。",
            "要求用户在启动时手动选择要加载的插件。",
            "仅加载位于 `PluginsRootPath` 一级子目录中的插件。",
            "根据插件的最后修改日期，只加载最近更新的插件。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `RulesetService.cs` 中，`IsRulesetSatisfied` 方法在评估一个 `Ruleset` 时，如果 `Ruleset.Groups` 集合为空，它会返回什么结果？",
        "correct_choices": [
            "false (如果 `Ruleset.Mode` 是 AND，或即使是 OR 但 `IsReversed` 为 false)",
            "如果 `Ruleset.IsReversed` 为 true，则返回 true"
        ],
        "incorrect_choices": [
            "true (因为没有条件需要满足)",
            "null (表示无法评估)",
            "抛出一个 `InvalidOperationException`",
            "取决于 `Ruleset.IsReversed` 的值，如果为 true 则返回 true，否则 false",
            "总是返回 true，因为没有规则组需要被满足"
        ]
    },
    {
        "body": "ClassIsland 的 `AppSettingsActionHandler.cs` 中，注册的行动处理器 (如 `classisland.settings.theme`) 在执行时，其对设置的修改是如何确保可恢复性的？",
        "correct_choices": [
            "通过调用 `SettingsService.AddSettingsOverlay` 方法，将更改应用为一个设置叠层。",
            "叠层机制允许在行动恢复时通过 `SettingsService.RemoveSettingsOverlay` 移除该叠层，从而恢复到之前的设置值。"
        ],
        "incorrect_choices": [
            "在修改设置前，将原始设置值备份到一个临时文件中。",
            "直接修改 `SettingsService.Settings` 中的属性，并在注册的恢复处理器中手动改回原始值。",
            "依赖于用户在自动化配置中手动添加一个“恢复设置”的行动。",
            "设置的更改是永久性的，无法自动恢复，除非有对应的恢复行动明确执行相反操作。",
            "通过创建一个新的 `Settings` 对象副本进行修改，原始设置不受影响。"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileSettingsWindow.xaml.cs` 中的 `CopyObject<T>` 方法是如何实现对象复制的？",
        "correct_choices": [
            "通过将对象序列化为 JSON 字符串，然后再反序列化回新的对象实例。",
            "利用 `System.Text.Json.JsonSerializer` 实现深拷贝。"
        ],
        "incorrect_choices": [
            "使用 `MemberwiseClone()` 进行浅拷贝。",
            "通过反射遍历所有属性和字段，并逐个复制到新对象。",
            "依赖于对象自身实现的 `ICloneable` 接口。",
            "使用二进制序列化 (BinaryFormatter) 进行复制。",
            "创建一个新的 `T` 类型实例，然后手动将原对象的属性值赋给新对象。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ViewModelBase` (通过 `ObservableRecipient`) 中，如果一个属性的 setter 没有调用 `OnPropertyChanged()` 或 `SetProperty()`，会发生什么？",
        "correct_choices": [
            "属性的后端字段值会更新，但 UI 不会收到属性变更通知，导致绑定到该属性的界面元素可能不会刷新。",
            "绑定的视图可能不会显示最新的属性值。"
        ],
        "incorrect_choices": [
            "会抛出一个 `InvalidOperationException`，因为违反了 MVVM 模式。",
            "WPF 会自动检测到属性值的变化并更新 UI。",
            "只有在 Debug 构建下会记录一个警告，Release 构建下无影响。",
            "该属性会变为只读，无法再通过 setter 修改。",
            "会导致整个 ViewModel 对象被垃圾回收器提前回收。"
        ]
    },
    {
        "body": "ClassIsland 的 `NativeWindowHelper.cs` 中的 `GetAllWindows` 方法是如何枚举系统中的所有顶层窗口的？",
        "correct_choices": [
            "通过递归调用 `PInvoke.FindWindowEx`，从桌面窗口开始，逐个查找并记录窗口及其子窗口（如果需要）。",
            "使用 Windows API 遍历窗口句柄。"
        ],
        "incorrect_choices": [
            "使用 `Process.GetProcesses()` 获取所有进程，然后遍历每个进程的 `MainWindowHandle`。",
            "查询 WMI 中的 `Win32_DesktopMonitor` 和关联的窗口信息。",
            "监听系统范围的窗口创建和销毁事件。",
            "读取注册表中 `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellFolders` 下的窗口列表。",
            "使用 `EnumWindows` Win32 API 函数。"
        ]
    },
    {
        "body": "ClassIsland 的 `AppLogService.cs` 中，`Logs` 集合的最大条目数 (MaxLogEntries) 是多少？当超过这个数量时会如何处理？",
        "correct_choices": [
            "1000 条。",
            "当超过最大条目数时，会从集合的开头移除最旧的日志条目。"
        ],
        "incorrect_choices": [
            "500 条；超过时清空所有日志。",
            "2000 条；超过时将旧日志写入到磁盘文件。",
            "没有固定上限，取决于可用内存；内存不足时自动清理。",
            "100 条；超过时只保留错误和严重级别的日志。",
            "5000 条；超过时不再记录新的日志，直到用户手动清空。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `UpdateService.cs` 中，`AppStartupBackground` 方法在什么条件下会调用 `UpdateNodeSpeedTestingService.RunSpeedTestAsync()`？",
        "correct_choices": [
            "当 `Settings.IsAutoSelectUpgradeMirror` 为 true，并且距离上次测速时间 (`Settings.LastSpeedTest`) 超过或等于7天时。",
            "如果启用了自动选择更新镜像，并且上次测速已经是一周或更早以前。"
        ],
        "incorrect_choices": [
            "每次应用启动时都会调用，无论设置如何。",
            "仅当 `Settings.SelectedUpdateMirrorV2` 为空或无效时。",
            "当检测到网络连接发生变化（例如从 Wi-Fi 切换到有线）时。",
            "在用户手动点击“检查更新”按钮之前。",
            "仅在 Release 构建版本中，Debug 构建版本会跳过测速。"
        ]
    },
    {
        "body": "ClassIsland 的 `TaskBarIconService.cs` 中，如果连续快速调用 `ShowNotification` 方法多次，通知是如何显示的？",
        "correct_choices": [
            "通知会被加入到一个队列 (`NotificationQueue`) 中，然后由 `ProcessNotification` 方法逐个显示。",
            "通知会排队，在前一个通知关闭（或被点击）后显示下一个。"
        ],
        "incorrect_choices": [
            "只有第一个通知会显示，后续的会被忽略。",
            "所有通知会同时尝试显示，可能导致重叠或显示不全。",
            "最后一个通知会覆盖之前的通知。",
            "应用会显示一个包含所有待处理通知摘要的组合通知。",
            "通知的显示顺序是随机的。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ProfileSettingsWindow.xaml.cs` 中，`CreateClassPlan()` 方法创建的新课表，其 `AssociatedGroup` 属性默认被设置为什么？",
        "correct_choices": [
            "`ProfileService.Profile.SelectedClassPlanGroupId` (当前选中的课表群的 ID)",
            "当前在课表群管理界面中选定的课表群组。"
        ],
        "incorrect_choices": [
            "`ClassPlanGroup.DefaultGroupGuid.ToString()` (总是默认课表群)",
            "`ClassPlanGroup.GlobalGroupGuid.ToString()` (总是全局课表群)",
            "null，需要用户在创建后手动指定",
            "一个新生成的 GUID，表示它属于一个新的、未命名的群组",
            "与上一个创建的课表相同的群组"
        ]
    },
    {
        "body": "ClassIsland 的 `TopmostEffectWindow.xaml.cs` 中，`PlayEffect` 方法在添加特效控件 (`INotificationEffectControl`) 到 `ViewModel.EffectControls` 集合后，如果该控件尚未加载 (`IsLoaded` 为 false)，它会如何确保特效被正确播放？",
        "correct_choices": [
            "它会订阅该控件的 `Loaded` 事件，并在事件触发时调用 `SetupEffectVisual` 方法，该方法再调用特效的 `Play` 方法。",
            "等待控件加载完成后再执行播放逻辑。"
        ],
        "incorrect_choices": [
            "它会立即尝试调用特效的 `Play` 方法，如果控件未加载可能会失败或无效果。",
            "它会将特效控件加入一个待播放队列，由一个后台计时器轮询检查并播放已加载的特效。",
            "它会强制控件立即加载并渲染，然后调用 `Play` 方法。",
            "它会忽略未加载的控件，只播放已加载的特效控件。",
            "它会抛出一个异常，指示特效控件必须在添加到集合前完全加载。"
        ]
    },
    {
        "body": "ClassIsland 的 `WelcomeWindow.xaml.cs` 中，如果用户在欢迎向导的最后一步勾选了 “在桌面创建换课快捷方式”，并且“注册 Url 协议”也被勾选或已注册，该快捷方式的目标 URL 通常是什么？",
        "correct_choices": [
            "`classisland://app/class-swap`",
            "一个指向应用内换课功能的 URI"
        ],
        "incorrect_choices": [
            "`ClassIsland.exe --action class-swap`",
            "`classisland://profile/change-lesson`",
            "一个指向 `ClassChangingWindow.xaml` 的本地文件路径",
            "`ms-settings:classisland-classswap`",
            "一个包含当前课表信息的加密字符串作为参数的 `ClassIsland.exe` 快捷方式"
        ]
    },
    {
        "body": "ClassIsland 的 `WindowRuleService.cs` 中，`ClassNameHandler` 方法在判断规则时，它比较的是哪个窗口的类名？",
        "correct_choices": [
            "当前前台窗口 (`ForegroundHwnd`) 的类名",
            "当前活动窗口的类名"
        ],
        "incorrect_choices": [
            "ClassIsland 主窗口的类名",
            "所有可见窗口的类名，只要有一个匹配即为真",
            "用户在规则设置中指定的特定窗口的类名",
            "产生 `EVENT_OBJECT_CREATE` 事件的新窗口的类名",
            "父窗口或所有者窗口的类名"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SettingsService.cs` 中，如果 `LoadSettingsAsync` 方法在加载 `Settings.json` 文件时发生异常，并且存在有效的备份文件 (`Settings.json.bak`)，它会如何处理？",
        "correct_choices": [
            "尝试加载备份文件 `Settings.json.bak`。",
            "如果备份文件加载成功，则用备份文件的内容覆盖原始的 `Settings.json` 文件。",
            "记录一个警告日志并尝试从备份恢复。"
        ],
        "incorrect_choices": [
            "直接抛出异常并停止应用加载。",
            "忽略错误，并使用一个全新的默认设置对象。",
            "提示用户配置文件已损坏，并询问是否要重置为默认设置。",
            "仅加载备份文件，不覆盖原始文件，直到用户确认。",
            "删除损坏的 `Settings.json` 和备份文件，然后创建新的默认设置。"
        ]
    },
    {
        "body": "ClassIsland 的 `NotificationHostService.cs` 中，`ShowNotification` 方法在将提醒请求加入队列 (`RequestQueue`) 时，是如何确定其优先级的？",
        "correct_choices": [
            "如果请求的 `IsPriorityOverride` 为 true，则给予最高优先级。",
            "根据提醒来源提供方在 `Settings.NotificationProvidersPriority` 列表中的索引（索引越小，优先级越高）。",
            "同时考虑插入队列的顺序 (`_queueIndex`) 作为次要排序依据，确保相同优先级的请求按到达顺序处理。"
        ],
        "incorrect_choices": [
            "所有提醒请求具有相同的优先级，按先进先出 (FIFO) 的顺序处理。",
            "根据提醒内容的紧急程度（如“关键”、“警告”等）动态分配优先级。",
            "用户可以在每次显示提醒时手动设置其优先级。",
            "优先级由插件在其 `INotificationProvider` 实现中直接指定。",
            "根据提醒的持续时间长短来决定优先级，持续时间短的优先。"
        ]
    },
    {
        "body": "ClassIsland 的 `FileFolderService.ProcessAutoBackupAsync` 方法在执行自动备份时，如果备份目录下的自动备份数量超过了 `SettingsService.Settings.AutoBackupLimit`，它会如何处理旧的自动备份？",
        "correct_choices": [
            "按最后修改时间排序，删除最旧的自动备份文件夹，直到数量符合限制。",
            "只保留指定数量的最新自动备份。"
        ],
        "incorrect_choices": [
            "提示用户手动选择要删除的旧备份。",
            "将最旧的自动备份移动到一个名为 `ArchivedBackups` 的子目录中。",
            "如果设置了 `AutoBackupLimit` 为 0 或负数，则不删除任何自动备份。",
            "合并最旧的几个自动备份为一个归档文件。",
            "在达到上限后停止自动备份，直到用户手动清理。"
        ]
    },
    {
        "body": "ClassIsland 的 `ExcelImportWindow.xaml.cs` 在加载 Excel 文件时，如果遇到包含不兼容格式（如某些特殊字体或样式）的旧版 Excel 文件，它最初会如何尝试处理？",
        "correct_choices": [
            "直接尝试使用 `ReoGridControl.Load` 方法加载。",
            "如果直接加载失败并捕获到特定类型的异常（与格式兼容性相关），则会提示用户是否以兼容模式打开。"
        ],
        "incorrect_choices": [
            "总是先将文件转换为 CSV 格式再加载。",
            "自动使用 EPPlus 库的修复功能清理文件，然后再用 ReoGrid 加载。",
            "要求用户先用 Microsoft Excel 打开并保存为最新格式。",
            "仅支持 XLSX 格式，对 XLS 或其他旧格式直接报错。",
            "忽略所有格式和样式信息，只读取单元格的文本内容。"
        ]
    },
    {
        "body": "ClassIsland 的 `SplashService.cs` 中，`ResetSplashText` 方法会将 `SplashStatus` 设置为什么？",
        "correct_choices": [
            "如果 `SettingsService.Settings.SplashCustomText` 为空，则设置为静态只读属性 `DefaultText` (\"正在启动…\") 的值。",
            "如果用户在设置中自定义了启动文本，则使用该自定义文本。"
        ],
        "incorrect_choices": [
            "总是设置为 \"正在启动…\"，忽略用户自定义文本。",
            "设置为 ClassIsland 的当前版本号和代号。",
            "从 `Tellings.txt` 中随机选择一条文本。",
            "显示一个进度条和百分比，而不是固定文本。",
            "清空 `SplashStatus`，使其不显示任何文本。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `MainWindow.xaml.cs` 中，`UpdateWindowPos` 方法是如何确定主窗口应该显示在哪个显示器上的？",
        "correct_choices": [
            "根据 `ViewModel.Settings.WindowDockingMonitorIndex` 的值，如果该索引在 `Screen.AllScreens` 数组的有效范围内，则选择对应显示器。",
            "如果 `WindowDockingMonitorIndex` 无效（如越界或负数），则默认使用主显示器 (`Screen.PrimaryScreen`)。"
        ],
        "incorrect_choices": [
            "总是将主窗口显示在主显示器上。",
            "根据鼠标当前所在的显示器动态调整。",
            "尝试将主窗口显示在拥有最大分辨率的显示器上。",
            "如果连接了多个显示器，会提示用户选择要显示的显示器。",
            "读取一个名为 `MonitorPreference.cfg` 的配置文件来确定显示器。"
        ]
    },
    {
        "body": "ClassIsland 的 `PluginMarketService.RequestDownloadPlugin` 方法在下载插件包完成后，会如何验证文件的完整性？",
        "correct_choices": [
            "调用 `ChecksumHelper.VerifyChecksum` 方法，比较下载文件的 MD5 哈希值与插件索引中记录的 `DownloadMd5` 值。",
            "如果 MD5 校验不匹配，则抛出 `ChecksumUnMatchException`。"
        ],
        "incorrect_choices": [
            "检查插件包的数字签名是否由受信任的发布者签发。",
            "比较下载文件的大小是否与插件索引中记录的大小一致。",
            "尝试解压缩插件包，如果成功则认为文件完整。",
            "不进行任何校验，直接将下载的文件移动到插件包目录。",
            "向插件市场服务器发送一个请求，要求服务器验证已下载文件的完整性。"
        ]
    },
    {
        "body": "ClassIsland 的 `AutomationService.LoadWorkflow` 方法在加载一个工作流 (`Workflow`) 时，是如何处理该工作流中的每个触发器 (`TriggerSettings`) 的？",
        "correct_choices": [
            "调用 `ActivateTrigger` 方法，根据触发器的 `AssociatedTriggerInfo` 和 `Settings` 来实例化或获取触发器对象。",
            "为触发器实例设置关联的工作流，并订阅其 `Triggered` 和 `TriggeredRecover` 事件。",
            "调用触发器实例的 `Loaded()` 方法以完成其初始化。"
        ],
        "incorrect_choices": [
            "直接执行触发器的 `Trigger()` 方法来测试其功能。",
            "如果触发器设置为空，则自动为其填充默认设置。",
            "将所有触发器的设置合并到一个全局的触发器配置对象中。",
            "检查触发器的 ID 是否在已禁用的触发器列表中，如果是则跳过加载。",
            "为每个触发器创建一个新的后台线程来独立运行。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `ProfileService.ConvertToStdClassPlan` 方法中，将一个临时层课表转换为普通课表时，主要修改了该课表对象的哪个属性？",
        "correct_choices": [
            "将其 `IsOverlay` 属性设置为 `false`。"
        ],
        "incorrect_choices": [
            "将其 `OverlaySourceId` 属性设置为空。",
            "从 `Profile.ClassPlans` 字典中移除该课表，并用一个新的 GUID重新添加。",
            "清空该课表的 `OverlaySetupTime` 属性。",
            "将其关联的 `TimeLayoutId` 指向一个标准的、非临时的 时间表。",
            "复制该课表的所有课程到一个新的、`IsOverlay` 为 false 的课表对象中。"
        ]
    },
    {
        "body": "ClassIsland 的 `DiagnosticService.GetDiagnosticInfo` 方法生成的诊断信息中，不包含以下哪项内容？",
        "correct_choices": [
            "用户当前的课表安排详情",
            "已安装插件的列表和版本号",
            "最近一次错误的完整堆栈跟踪 (虽然 ProcessDomainUnhandledException 会处理，但此方法本身不直接包含)",
            "用户的 Windows 登录密码哈希"
        ],
        "incorrect_choices": [
            "操作系统版本 (SystemOsVersion)",
            "应用版本 (AppVersion)",
            "当前内存使用情况 (AppCurrentMemoryUsage)",
            "应用启动耗时 (AppStartupDurationMs)",
            "DWM 组合是否启用 (SystemIsCompositionEnabled)"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsService.Settings` 对象中的 `IsSentryEnabled` 属性的 get 访问器是如何确定 Sentry 是否启用的？",
        "correct_choices": [
            "读取名为 `ClassIsland_IsSentryEnabled` 的环境变量，如果其值为 \"1\" 或环境变量不存在，则认为启用。",
            "检查特定的环境变量来控制 Sentry 的初始化。"
        ],
        "incorrect_choices": [
            "直接返回一个内部私有字段的值。",
            "从 `Settings.json` 文件中读取一个名为 `EnableSentryReporting` 的布尔值。",
            "检查应用的构建配置 (Debug/Release)，仅在 Release 构建中启用。",
            "查询 `SentrySdk.IsEnabled` 属性。",
            "如果用户在欢迎向导中同意了隐私政策，则启用。"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个 `ComponentSettings` 的 `AssociatedComponentInfo.IsComponentContainer` 为 true，通常意味着该组件的 `Settings` 属性会实现哪个接口？",
        "correct_choices": [
            "`ClassIsland.Core.Abstractions.Models.IComponentContainerSettings`",
            "一个包含 `Children` (类型为 `ObservableCollection<ComponentSettings>`) 属性的接口"
        ],
        "incorrect_choices": [
            "`System.ComponentModel.IContainer`",
            "`System.Collections.IEnumerable`",
            "`ClassIsland.Core.Abstractions.Controls.IComponentSettings`",
            "`System.Windows.Markup.IAddChild`",
            "`System.Collections.Specialized.INotifyCollectionChanged` (通常由 Children 属性的类型实现)"
        ]
    },
    {
        "body": "ClassIsland 的 `ProfileService.CleanExpiredTempClassPlan` 方法是如何判断一个临时层课表 (`ClassPlan` 其 `IsOverlay` 为 true) 是否应该被清理的？",
        "correct_choices": [
            "检查该临时层课表的 ID 是否还存在于任何 `Profile.OrderedSchedules` 的条目中。",
            "如果一个临时层课表不再被任何预定的日程所引用，则它会被清理。"
        ],
        "incorrect_choices": [
            "检查其 `OverlaySetupTime` 是否早于当前日期。",
            "仅清理那些在过去7天内未被激活过的临时层课表。",
            "如果临时层课表的数量超过了某个预设的上限，则清理最早创建的。",
            "用户必须手动在档案编辑界面中删除过期的临时层课表。",
            "当其关联的源课表 (`OverlaySourceId`) 被删除时，对应的临时层也会被清理。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `MainWindow.xaml.cs` 中，`UpdateWindowPos` 方法在调整窗口位置时，DPI缩放值是如何获取的？",
        "correct_choices": [
            "通过 `PresentationSource.FromVisual(this).CompositionTarget.TransformToDevice.M11` (X轴) 和 `M22` (Y轴) 获取。",
            "查询当前窗口所在屏幕的DPI设置。"
        ],
        "incorrect_choices": [
            "使用 `System.Windows.Forms.Screen.PrimaryScreen.ScaleFactor`。",
            "读取 `SettingsService.Settings.Scale` 属性的值。",
            "调用 `GetDpiForWindow` Win32 API。",
            "假设 DPI 总是 96 (100%)。",
            "从系统注册表中读取全局 DPI 设置。"
        ]
    },
    {
        "body": "ClassIsland 的 `IpcService.BroadcastNotificationAsync<T>` 方法在广播通知给所有连接的对等端时，如果某个对等端的连接已断开，它会如何处理？",
        "correct_choices": [
            "它会尝试向所有 `ConnectedPeers` 列表中的对等端发送通知。如果某个连接无效（例如 `JsonPeerProxy` 为 null），则会跳过该对等端。",
            "在发送前会移除 `ConnectedPeers` 列表中的 null 值，然后遍历有效的对等端进行通知。"
        ],
        "incorrect_choices": [
            "它会抛出一个异常，指示无法向所有对等端广播。",
            "它会自动从 `ConnectedPeers` 列表中移除已断开的对等端，然后再广播。",
            "它会尝试重新连接已断开的对等端，然后再广播。",
            "它会忽略已断开的对等端，不记录任何错误或警告。",
            "它会将通知缓存起来，等待对等端重新连接后再发送。"
        ]
    },
    {
        "body": "ClassIsland 的 `FileLoggerProvider` 类中，`_lock` 对象的主要用途是什么？",
        "correct_choices": [
            "确保对日志文件 (`_logWriter`) 的写入操作是线程安全的，防止多个线程同时写入导致文件损坏或内容错乱。",
            "作为互斥锁，同步对共享日志写入资源的访问。"
        ],
        "incorrect_choices": [
            "用于锁定日志文件的读取操作，防止在写入时被其他进程读取。",
            "控制日志滚动的时机，例如当文件大小达到阈值时。",
            "在压缩旧日志文件时，防止新的日志写入。",
            "管理日志条目的缓存队列，在写入磁盘前。",
            "确保日志级别过滤器在多线程环境下正确应用。"
        ]
    },
    {
        "body": "在 ClassIsland 的 `SpeechService` 体系中，`GptSoVitsService.GenerateSpeechAsync` 方法如果遇到 HTTP 请求失败（非 2xx 状态码），它会如何处理？",
        "correct_choices": [
            "记录错误日志，包含状态码和服务器返回的错误内容。",
            "返回 `false`，表示语音生成失败。"
        ],
        "incorrect_choices": [
            "抛出一个 `HttpRequestException`。",
            "尝试使用备用的 TTS 服务器地址重试请求。",
            "返回一个包含错误信息的默认语音文件路径。",
            "向用户显示一个错误提示对话框。",
            "忽略错误并返回 `true`，但实际并未生成语音文件。"
        ]
    },
    {
        "body": "ClassIsland 的 `SettingsService.Settings` 对象中，`IsSentryEnabled` 属性的 setter 是如何持久化其更改的？",
        "correct_choices": [
            "通过 `Environment.SetEnvironmentVariable` 设置名为 `ClassIsland_IsSentryEnabled` 的环境变量。",
            "同时直接修改注册表 `HKCU\\Environment` 下的同名键值，以确保更改立即对新进程生效（有时环境变量刷新有延迟）。"
        ],
        "incorrect_choices": [
            "将更改写入到 `Settings.json` 文件中。",
            "调用 `SentrySdk.ConfigureScope` 来启用或禁用 Sentry 报告。",
            "修改一个名为 `Sentry.config` 的独立配置文件。",
            "该属性是只读的，只能通过命令行参数在启动时设置。",
            "通过 IPC 通知一个后台服务来更新全局 Sentry 配置。"
        ]
    },
    {
        "body": "ClassIsland 应用程序的主要用途是什么？",
        "correct_choices": [
            "在班级多媒体屏幕上显示课表信息",
            "作为一款课表信息显示工具",
            "在 Windows 屏幕上显示各种课程相关信息",
            "辅助教学管理"
        ],
        "incorrect_choices": [
            "一款专业的视频编辑软件",
            "一个操作系统",
            "用于播放音乐和视频的多媒体播放器",
            "一个复杂的3D建模工具",
            "办公套件软件",
            "浏览器扩展程序"
        ]
    },
    {
        "body": "ClassIsland 的名称灵感来源于什么？",
        "correct_choices": [
            "iOS 灵动岛（Dynamic Island）功能",
            "苹果公司的灵动岛特性",
            "iPhone 的灵动岛"
        ],
        "incorrect_choices": [
            "微软的 Fluent Design",
            "安卓的 Material Design",
            "一个著名的旅游景点",
            "一部科幻小说"
        ]
    },
    {
        "body": "ClassIsland 的主要开发者是谁？",
        "correct_choices": [
            "HelloWRC",
            "WRC"
        ],
        "incorrect_choices": [
            "微软公司",
            "谷歌公司",
            "苹果公司",
            "ClassIsland 社区全体成员",
            "Linus Torvalds"
        ]
    },
    {
        "body": "ClassIsland 应用本体的开源许可证是什么？",
        "correct_choices": [
            "GNU General Public License v3.0",
            "GPLv3"
        ],
        "incorrect_choices": [
            "MIT License",
            "Apache License 2.0",
            "BSD License",
            "LGPLv3",
            "商业闭源许可证"
        ]
    },
    {
        "body": "运行 ClassIsland 需要的 .NET 版本是什么？",
        "correct_choices": [
            ".NET 8.0 桌面运行时",
            ".NET 8"
        ],
        "incorrect_choices": [
            ".NET Framework 4.5",
            ".NET Core 3.1",
            "Java Runtime Environment",
            "Python 3.x",
            ".NET 6.0"
        ]
    },
    {
        "body": "ClassIsland 的主界面默认停靠在屏幕的哪个位置？",
        "correct_choices": [
            "中上方",
            "屏幕顶部中间"
        ],
        "incorrect_choices": [
            "左下角",
            "右下角",
            "屏幕左侧",
            "屏幕右侧"
        ]
    },
    {
        "body": "ClassIsland 的“组件”功能允许用户做什么？",
        "correct_choices": [
            "自定义主界面上显示的信息",
            "添加或删除主界面上的信息单元",
            "调整主界面显示内容的顺序"
        ],
        "incorrect_choices": [
            "修改操作系统的核心组件",
            "编写新的操作系统驱动程序",
            "直接编辑应用程序的源代码",
            "设计硬件组件"
        ]
    },
    {
        "body": "以下哪些是 ClassIsland 内置的组件？",
        "correct_choices": [
            "日期组件",
            "时钟组件",
            "课程表组件",
            "天气简报组件",
            "倒计时日组件"
        ],
        "incorrect_choices": [
            "视频播放组件",
            "游戏模拟器组件",
            "代码编辑器组件",
            "股票行情组件",
            "邮件客户端组件"
        ]
    },
    {
        "body": "ClassIsland 的提醒功能可以在哪些时间点发出提醒？",
        "correct_choices": [
            "上课时",
            "下课时",
            "放学时",
            "课前准备时"
        ],
        "incorrect_choices": [
            "午休开始时",
            "学生生日时",
            "节假日时",
            "教师会议时"
        ]
    },
    {
        "body": "ClassIsland 的“档案”主要用来存储什么信息？",
        "correct_choices": [
            "课表安排",
            "时间表信息",
            "科目信息",
            "用户的个性化设置"
        ],
        "incorrect_choices": [
            "学生的成绩数据",
            "教师的考勤记录",
            "学校的财务报表",
            "操作系统配置文件"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”功能主要定义什么？",
        "correct_choices": [
            "一天中各个时间点，如上课、课间休息等",
            "学校的作息安排",
            "课程开始和结束的时间"
        ],
        "incorrect_choices": [
            "学生的考试时间表",
            "教师的会议日程",
            "学校的年度校历",
            "节假日的放假安排"
        ]
    },
    {
        "body": "在 ClassIsland 中，时间点有哪几种基本类型？",
        "correct_choices": [
            "上课",
            "课间休息",
            "分割线",
            "行动"
        ],
        "incorrect_choices": [
            "午休",
            "自习",
            "考试",
            "集会"
        ]
    },
    {
        "body": "ClassIsland 的“科目”信息包含哪些内容？",
        "correct_choices": [
            "科目名（全称）",
            "科目简称",
            "科任老师姓名",
            "是否为户外课程"
        ],
        "incorrect_choices": [
            "科目的教材版本",
            "科目的考试大纲",
            "科目的平均分",
            "科目的学分"
        ]
    },
    {
        "body": "ClassIsland 的“临时课表”功能有什么特点？",
        "correct_choices": [
            "在当天无视触发规则直接启用",
            "设置会在应用退出或第二天到来时清除",
            "可以通过点击“清除临时课表”按钮禁用"
        ],
        "incorrect_choices": [
            "会自动保存为永久课表",
            "需要管理员权限才能启用",
            "只能在周末使用",
            "会覆盖所有已有的课表配置"
        ]
    },
    {
        "body": "ClassIsland 的“临时层”和“临时课表”有什么主要区别？",
        "correct_choices": [
            "临时层可以单独编辑课程安排而不影响原课表",
            "有临时层启用时，会自动覆盖临时课表"
        ],
        "incorrect_choices": [
            "临时层只能包含一节课",
            "临时课表不能编辑",
            "临时层会自动同步到云端",
            "临时课表不能设置触发规则"
        ]
    },
    {
        "body": "ClassIsland 的“换课”功能允许用户做什么？",
        "correct_choices": [
            "临时调换两节课的科目",
            "将某一节课的科目调整为其他科目",
            "将换课安排永久写入原课表（通过勾选“永久换课”）"
        ],
        "incorrect_choices": [
            "永久删除某一节课",
            "调整课程的上课时间",
            "自动为所有课程安排代课老师",
            "将课程表导出为图片"
        ]
    },
    {
        "body": "ClassIsland 的“课表群”功能有什么作用？",
        "correct_choices": [
            "对课表进行分组管理",
            "灵活地启用一批课表",
            "优先加载当前启用的课表群的课表"
        ],
        "incorrect_choices": [
            "自动为不同班级生成课表",
            "将课表分享给其他用户",
            "限制用户访问特定的课表",
            "将多个课表合并为一个"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能可以实现什么？",
        "correct_choices": [
            "在特定事件发生时自动执行某些操作",
            "在特定时间自动执行某些操作",
            "例如，在数学课前自动打开白板",
            "例如，放学后自动关闭设备"
        ],
        "incorrect_choices": [
            "自动完成学生的作业",
            "自动批改试卷",
            "自动生成教学课件",
            "自动回复邮件"
        ]
    },
    {
        "body": "ClassIsland 可以从哪些来源提取主题色？",
        "correct_choices": [
            "自定义颜色",
            "系统壁纸",
            "系统主题色",
            "屏幕主题色"
        ],
        "incorrect_choices": [
            "应用程序图标",
            "当前播放的音乐专辑封面",
            "用户的头像",
            "麦克风输入的音频"
        ]
    },
    {
        "body": "如果在 Windows 7 系统上运行 ClassIsland 时遇到内存占用极高的问题，应该如何解决？",
        "correct_choices": [
            "卸载 .NET 8 版本，安装 .NET 6 兼容版 ClassIsland",
            "参考文档中关于 Windows 7 的安装说明进行操作",
            "回滚之前可能设置过的环境变量修复"
        ],
        "incorrect_choices": [
            "增加电脑的物理内存条",
            "关闭所有其他应用程序",
            "重装 Windows 7 操作系统",
            "将 ClassIsland 设置为以管理员身份运行"
        ]
    },
    {
        "body": "如果 ClassIsland 设置开机自启后无法正常自启动，可能是什么原因？",
        "correct_choices": [
            "ClassIsland 的自启动项被禁用了",
            "被安全软件拦截了",
            "在兼容性设置中设置了以管理员身份运行 ClassIsland"
        ],
        "incorrect_choices": [
            "电脑没有连接到互联网",
            "操作系统版本过低",
            "未安装 .NET 运行时",
            "用户没有管理员权限"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”功能允许在哪些层级单独设置并覆盖全局设置？",
        "correct_choices": [
            "科目层级",
            "时间点层级",
            "课表层级",
            "时间表层级"
        ],
        "incorrect_choices": [
            "应用主题层级",
            "操作系统用户层级",
            "插件层级",
            "网络连接层级"
        ]
    },
    {
        "body": "在 ClassIsland 的档案编辑界面，如何打开“临时课表”菜单？",
        "correct_choices": [
            "点击【课表】选项卡中工具栏上的【临时课表】按钮",
            "点击应用菜单中【加载临时课表】选项"
        ],
        "incorrect_choices": [
            "右键点击主界面上的课程表",
            "在【应用设置】的【基本】选项卡中",
            "通过快捷键 Ctrl+T"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换”功能是基于哪个时间来计算的？",
        "correct_choices": [
            "学期开始时间",
            "在“基本”设置中设定的“学期开始时间”"
        ],
        "incorrect_choices": [
            "当前系统日期",
            "每周一的日期",
            "农历日期",
            "国际标准时间（UTC）"
        ]
    },
    {
        "body": "ClassIsland 的“强调提醒”可以包含哪些元素？",
        "correct_choices": [
            "音效",
            "全屏提醒特效",
            "语音播报",
            "置顶 ClassIsland 主界面"
        ],
        "incorrect_choices": [
            "发送短信通知",
            "播放视频动画",
            "打印提醒内容",
            "自动打开相关文档"
        ]
    },
    {
        "body": "ClassIsland 的调试菜单可以通过什么方式开启？",
        "correct_choices": [
            "在【应用设置】→【关于】中连续点击应用图标 10 次",
            "连续点击应用图标十次（在关于页面）"
        ],
        "incorrect_choices": [
            "输入特定的命令行参数启动应用",
            "在注册表中修改特定键值",
            "安装一个特殊的“调试模式”插件",
            "在欢迎向导中选择“开发者模式”"
        ]
    },
    {
        "body": "ClassIsland 的 URI 导航协议是什么？",
        "correct_choices": [
            "classisland://"
        ],
        "incorrect_choices": [
            "http://",
            "ftp://",
            "classisland-app://",
            "ci://"
        ]
    },
    {
        "body": "ClassIsland 的应用数据备份功能默认会备份哪些内容？",
        "correct_choices": [
            "应用设置（Settings.json）",
            "应用其它配置（Config/ 文件夹）",
            "档案信息（Profiles/ 文件夹）"
        ],
        "incorrect_choices": [
            "已安装的插件文件",
            "应用的日志文件",
            "应用的缓存文件",
            "用户下载的自定义主题"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中的分割线时间点有什么作用？",
        "correct_choices": [
            "在主界面上显示一条分割线",
            "在视觉上将不同时段的课程分割开来"
        ],
        "incorrect_choices": [
            "标记午休时间的开始",
            "表示一天的课程结束",
            "自动触发特定的提醒",
            "插入一个短暂的休息时间"
        ]
    },
    {
        "body": "如果 ClassIsland 的配置文件损坏或丢失，可以从哪里恢复？",
        "correct_choices": [
            "应用目录下的 Backups 文件夹",
            "自动备份的文件",
            "手动创建的备份文件"
        ],
        "incorrect_choices": [
            "从 ClassIsland 官网重新下载",
            "系统还原点",
            "回收站",
            "通过邮件联系开发者获取"
        ]
    },
    {
        "body": "ClassIsland 主界面组件的“相对行号”是用来做什么的？",
        "correct_choices": [
            "控制组件显示在主界面的哪一行",
            "实现多行组件显示"
        ],
        "incorrect_choices": [
            "设置组件的显示优先级",
            "调整组件的字体大小",
            "控制组件的宽度",
            "设置组件的更新频率"
        ]
    },
    {
        "body": "ClassIsland 的“课表群”中，“全局课表群”有什么特性？",
        "correct_choices": [
            "其中的课表始终会被加载",
            "不受当前选择的课表群影响"
        ],
        "incorrect_choices": [
            "可以被用户删除",
            "优先级低于普通课表群",
            "只能包含一个课表",
            "需要联网才能使用"
        ]
    },
    {
        "body": "ClassIsland 的“预定调课”功能支持哪些操作？",
        "correct_choices": [
            "提前预定某一天要临时启用的课表",
            "设置跨天换课的安排",
            "预定临时层课表"
        ],
        "incorrect_choices": [
            "自动为冲突课程安排代课老师",
            "生成打印版的调课通知单",
            "向全班同学发送调课短信",
            "永久修改所有课表中的某一门课"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能支持导入什么格式的文件？",
        "correct_choices": [
            "Excel 表格文件（.xlsx）",
            "Microsoft Excel 文件"
        ],
        "incorrect_choices": [
            "Word 文档（.docx）",
            "CSV 文件（.csv）",
            "纯文本文件（.txt）",
            "PDF 文件（.pdf）"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果禁用了“课表自动启用”，课表将如何被加载？",
        "correct_choices": [
            "只能通过临时课表手动启用",
            "只能通过临时层手动启用"
        ],
        "incorrect_choices": [
            "课表将无法被加载",
            "课表会在周末自动启用",
            "需要管理员密码才能启用",
            "应用会自动选择最近修改的课表启用"
        ]
    },
    {
        "body": "ClassIsland 中“提醒优先级”是如何工作的？",
        "correct_choices": [
            "按照提醒提供方列表中的排序，优先展示来自靠前的提醒提供方的提醒",
            "用户可以在设置中调整提醒提供方的顺序以改变优先级"
        ],
        "incorrect_choices": [
            "所有提醒的优先级都相同",
            "根据提醒内容的重要性自动判断优先级",
            "优先级最高的提醒会覆盖其他所有提醒",
            "只能同时显示一个提醒"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中的“规则集”是用来做什么的？",
        "correct_choices": [
            "定义自动化行为的触发条件",
            "判断当前状态是否满足特定条件组合"
        ],
        "incorrect_choices": [
            "设置应用程序的访问权限",
            "定义软件的更新策略",
            "管理用户的登录凭据",
            "配置网络防火墙规则"
        ]
    },
    {
        "body": "ClassIsland 支持从哪个课表软件迁移课表数据？",
        "correct_choices": [
            "Electron Class Schedule",
            "CSES",
            "ZongziTEK 黑板贴"
        ],
        "incorrect_choices": [
            "Microsoft Outlook Calendar",
            "Google Calendar",
            "小爱课程表",
            "超级课程表"
        ]
    },
    {
        "body": "ClassIsland 的“Himeko”版本（1.6）引入了哪些重要的新功能？",
        "correct_choices": [
            "自动化功能",
            "多行组件显示",
            "预定调课功能",
            "本地集控（密码保护与限制策略）",
            "组件轮播"
        ],
        "incorrect_choices": [
            "暗色模式支持",
            "天气预报功能",
            "插件系统",
            "跨平台支持（macOS/Linux）",
            "内置浏览器"
        ]
    },
    {
        "body": "在 ClassIsland 的设置中，可以调整主界面的哪些外观属性？",
        "correct_choices": [
            "界面缩放大小",
            "背景颜色",
            "背景不透明度",
            "圆角半径",
            "字体和字重"
        ],
        "incorrect_choices": [
            "窗口边框样式",
            "任务栏图标样式",
            "鼠标指针样式",
            "系统通知区域图标样式"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑”中的“列表视图”和“时间轴视图”有什么区别？",
        "correct_choices": [
            "时间轴视图更直观，可以通过拖动调整时间点",
            "列表视图以表格形式展示时间点"
        ],
        "incorrect_choices": [
            "列表视图只能查看，不能编辑",
            "时间轴视图不支持添加分割线",
            "列表视图会自动计算课间休息时间",
            "时间轴视图不支持多周轮换"
        ]
    },
    {
        "body": "ClassIsland 中的“附加设置分析”功能主要用于什么？",
        "correct_choices": [
            "查看附加设置的覆盖和继承状态",
            "调试复杂的附加设置依赖关系",
            "调整各个节点的附加设置和启用状态"
        ],
        "incorrect_choices": [
            "分析应用性能瓶颈",
            "检查配置文件语法错误",
            "自动优化课表安排",
            "生成附加设置的使用报告"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能主要用于什么？",
        "correct_choices": [
            "扩展 ClassIsland 的功能",
            "添加自定义组件",
            "显示自定义提醒",
            "与其他软件联动"
        ],
        "incorrect_choices": [
            "修改 ClassIsland 的核心代码",
            "破解 ClassIsland 的授权限制",
            "绕过操作系统的安全设置",
            "自动下载和安装盗版软件"
        ]
    },
    {
        "body": "ClassIsland 的天气功能可以显示哪些信息？",
        "correct_choices": [
            "当前天气概况",
            "气象预警",
            "3 天天气预报",
            "6 小时天气预报",
            "降水提示"
        ],
        "incorrect_choices": [
            "全球气候变化趋势",
            "历史天气数据查询",
            "空气质量指数（AQI）",
            "紫外线指数"
        ]
    },
    {
        "body": "ClassIsland 官方文档的网址是什么？",
        "correct_choices": [
            "https://docs.classisland.tech",
            "docs.classisland.tech"
        ],
        "incorrect_choices": [
            "https://classisland.com/docs",
            "https://classisland.org/documentation",
            "https://github.com/ClassIsland/ClassIsland/wiki",
            "https://classisland.readthedocs.io"
        ]
    },
    {
        "body": "如果 ClassIsland 启动时提示“.NET 运行时未安装”，应如何操作？",
        "correct_choices": [
            "点击提示框中的下载链接下载并安装 .NET 8 桌面运行时",
            "访问微软官网下载并安装 .NET 8 桌面运行时"
        ],
        "incorrect_choices": [
            "重新下载 ClassIsland 安装包",
            "重启电脑",
            "卸载并重装 ClassIsland",
            "安装 Java 运行时"
        ]
    },
    {
        "body": "ClassIsland 的主界面在鼠标移入时会有什么行为？",
        "correct_choices": [
            "自动降低不透明度（默认）",
            "可以通过设置反转为移入时恢复正常显示",
            "允许鼠标穿透操作后方窗口"
        ],
        "incorrect_choices": [
            "自动放大",
            "自动隐藏",
            "播放提示音效",
            "显示帮助信息"
        ]
    },
    {
        "body": "ClassIsland 的“集控”功能主要面向哪些用户？",
        "correct_choices": [
            "学校或组织的 IT 管理员",
            "需要统一管理多个 ClassIsland 实例的用户"
        ],
        "incorrect_choices": [
            "普通学生用户",
            "单个班级的任课教师",
            "软件开发者",
            "家庭用户"
        ]
    },
    {
        "body": "ClassIsland 的“精确时间服务”通过什么方式获取时间？",
        "correct_choices": [
            "NTP 服务器",
            "网络时间协议服务器"
        ],
        "incorrect_choices": [
            "本地系统时间",
            "GPS 卫星信号",
            "手动输入的时间",
            "读取主板 CMOS 时钟"
        ]
    },
    {
        "body": "ClassIsland 的默认字体是什么（非精简版）？",
        "correct_choices": [
            "HarmonyOS Sans SC",
            "鸿蒙黑体"
        ],
        "incorrect_choices": [
            "微软雅黑",
            "宋体",
            "Arial",
            "Times New Roman"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果禁用了某个课表的“自动启用”，该课表在什么情况下会被加载？",
        "correct_choices": [
            "通过“临时课表”功能手动启用",
            "通过“临时层”功能手动启用",
            "通过“预定调课”功能在特定日期启用"
        ],
        "incorrect_choices": [
            "该课表将永远无法被加载",
            "在每周一自动加载",
            "在所有其他课表都不满足条件时自动加载",
            "需要管理员输入密码才能加载"
        ]
    },
    {
        "body": "ClassIsland 的更新模式有哪些选项？",
        "correct_choices": [
            "从不自动检查更新",
            "自动检查更新，并在有更新时发出提醒",
            "自动检查更新，并在有更新时自动下载",
            "自动检查并下载更新，并自动安装"
        ],
        "incorrect_choices": [
            "仅在周末检查更新",
            "每小时检查一次更新",
            "需要付费才能更新",
            "只能通过手动下载安装包更新"
        ]
    },
    {
        "body": "在 ClassIsland 的档案编辑中，“时间表”和“课表”的关系是？",
        "correct_choices": [
            "一个时间表可以被多个课表使用",
            "课表的时间安排来源于其对应的时间表",
            "课表定义了每个时间点上的具体课程，时间表定义了这些时间点的起止时间"
        ],
        "incorrect_choices": [
            "一个课表只能对应一个独有的时间表",
            "时间表是课表的子集",
            "课表和时间表是完全独立、没有关联的",
            "时间表定义了考试安排，课表定义了日常课程"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的“关于”页面多次点击应用图标，可能会发生什么？",
        "correct_choices": [
            "开启调试菜单（如果未被组织禁用）",
            "显示一个提示，告知用户已进入开发者模式（如果未被组织禁用）"
        ],
        "incorrect_choices": [
            "应用会播放一段隐藏动画",
            "应用会崩溃",
            "解锁一个隐藏的皮肤主题",
            "没有任何反应"
        ]
    },
    {
        "body": "ClassIsland 的 IPC (Inter-Process Communication) 功能允许其他应用做什么？",
        "correct_choices": [
            "获取 ClassIsland 的当前课表状态",
            "侦听 ClassIsland 的上课、下课等事件",
            "调用 ClassIsland 的部分功能"
        ],
        "incorrect_choices": [
            "直接修改 ClassIsland 的源代码",
            "远程控制用户的电脑",
            "获取用户的登录密码",
            "无限制地读写 ClassIsland 的所有配置文件"
        ]
    },
    {
        "body": "ClassIsland 的“回声洞”功能在哪里可以找到？",
        "correct_choices": [
            "在【应用设置】的【关于 ClassIsland】页面",
            "点击【应用设置】->【关于】页面的特定区域"
        ],
        "incorrect_choices": [
            "在主界面的组件中",
            "在档案编辑器的科目设置中",
            "在应用的托盘菜单中",
            "需要安装特定插件才能启用"
        ]
    },
    {
        "body": "如果 ClassIsland 在动态壁纸环境下无法正确提取主题色，用户应该检查哪些设置？",
        "correct_choices": [
            "是否关闭了兼容模式",
            "壁纸窗口类名是否设置正确"
        ],
        "incorrect_choices": [
            "是否开启了硬件加速",
            "显示器的分辨率设置",
            ".NET 运行时的版本",
            "是否以管理员身份运行 ClassIsland"
        ]
    },
    {
        "body": "ClassIsland 的自动化功能中，“行动”指的是什么？",
        "correct_choices": [
            "一系列可以被自动执行的操作",
            "例如修改应用设置",
            "例如启动指定程序或打开网页",
            "例如显示自定义提醒"
        ],
        "incorrect_choices": [
            "用户在主界面上的鼠标点击行为",
            "课程表中的课程项目",
            "应用更新的过程",
            "插件的安装和卸载过程"
        ]
    },
    {
        "body": "ClassIsland 的“窗口停靠位置”设置允许用户将主界面停靠在屏幕的哪些区域？",
        "correct_choices": [
            "左上角、中上侧、右上角",
            "左下角、中下侧、右下角"
        ],
        "incorrect_choices": [
            "屏幕正中央",
            "仅允许停靠在任务栏上",
            "可以停靠在其他应用程序的窗口内部",
            "只能停靠在主显示器的顶部"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个时间点被设置为“默认隐藏”，它会在什么时候显示？",
        "correct_choices": [
            "只有在当前时间处于此时间点时才会显示",
            "当它作为当前活动时间点时显示"
        ],
        "incorrect_choices": [
            "永远不会显示",
            "只在周末显示",
            "在所有其他时间点都隐藏时显示",
            "需要手动点击才能显示"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”功能主要用于什么？",
        "correct_choices": [
            "浏览和下载社区开发的插件",
            "扩展 ClassIsland 的功能"
        ],
        "incorrect_choices": [
            "购买 ClassIsland 的高级版本",
            "下载应用的主题皮肤",
            "报告应用 Bug",
            "与其他用户在线聊天"
        ]
    },
    {
        "body": "ClassIsland 的提醒特效（如水波纹）会在什么情况下播放？",
        "correct_choices": [
            "当有提醒发出且提醒特效被启用时",
            "当主界面可见且未运行在兼容透明模式时"
        ],
        "incorrect_choices": [
            "每次应用启动时",
            "当用户点击主界面时",
            "仅在放学提醒时播放",
            "需要付费购买特效包"
        ]
    },
    {
        "body": "在 ClassIsland 中，设置“学期开始时间”的主要目的是什么？",
        "correct_choices": [
            "用于多周轮换课表的计算",
            "作为计算当前是第几周的基准日期"
        ],
        "incorrect_choices": [
            "设置应用启动时显示的日期",
            "用于记录学生的入学日期",
            "控制应用更新的检查频率",
            "设置节假日倒计时"
        ]
    },
    {
        "body": "如果 ClassIsland 的托盘图标消失了，可能的原因是什么？",
        "correct_choices": [
            "应用崩溃或被意外关闭",
            "系统设置隐藏了该图标",
            "被其他软件（如安全软件）阻止"
        ],
        "incorrect_choices": [
            "ClassIsland 自动进入了隐身模式",
            "这是应用的正常行为，图标会定时隐藏",
            "需要付费才能永久显示托盘图标"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”功能是用来解决什么问题的？",
        "correct_choices": [
            "抵消学校铃声与标准时间的差异",
            "调整课程时间与实际铃声的同步"
        ],
        "incorrect_choices": [
            "调整电脑的系统时间",
            "设置不同时区的显示",
            "加快或减慢应用内动画的播放速度",
            "用于模拟不同日期的课表情况"
        ]
    },
    {
        "body": "ClassIsland 1.6 版本的代号是什么？",
        "correct_choices": [
            "Himeko",
            "姬子"
        ],
        "incorrect_choices": [
            "Firefly",
            "流萤",
            "Elysia",
            "爱莉希雅",
            "Ningbo"
        ]
    },
    {
        "body": "ClassIsland 完整版和精简版的主要区别是什么？",
        "correct_choices": [
            "精简版移除了不必要的资源文件以减小体积",
            "完整版包含所有资源文件，如字体、文档等"
        ],
        "incorrect_choices": [
            "精简版缺少核心功能",
            "完整版需要付费购买",
            "精简版不支持插件",
            "完整版更新频率更高"
        ]
    },
    {
        "body": "在 ClassIsland 的“组件设置”页面，用户可以如何添加新的组件到主界面？",
        "correct_choices": [
            "从组件库拖动组件到组件栏",
            "将组件库中的组件拖拽到主界面预览区域"
        ],
        "incorrect_choices": [
            "通过编写代码添加",
            "在配置文件中手动输入组件ID",
            "从网上下载组件包并安装",
            "右键点击主界面选择“添加组件”"
        ]
    },
    {
        "body": "ClassIsland 提醒系统中的“遮罩（Mask）”通常用于什么目的？",
        "correct_choices": [
            "在提醒进入时显示，吸引注意力",
            "总结提醒内容"
        ],
        "incorrect_choices": [
            "隐藏主界面的特定部分",
            "播放一段背景音乐",
            "显示详细的错误信息",
            "作为屏幕保护程序"
        ]
    },
    {
        "body": "ClassIsland 的“临时层课表”在什么情况下会自动删除？",
        "correct_choices": [
            "在第二天到来时",
            "当其设置的生效日期过去后"
        ],
        "incorrect_choices": [
            "应用关闭时",
            "用户手动重启电脑时",
            "一周后",
            "永远不会自动删除，需要手动清除"
        ]
    },
    {
        "body": "在 ClassIsland 的“应用设置”中，如果一个选项卡旁边有“（策略禁用）”的提示，意味着什么？",
        "correct_choices": [
            "该选项卡的功能已被集控策略禁用",
            "用户无法修改该选项卡下的设置"
        ],
        "incorrect_choices": [
            "该选项卡正在开发中，暂不可用",
            "需要管理员密码才能访问该选项卡",
            "该选项卡只在特定版本的 Windows 上可用",
            "这是一个付费功能"
        ]
    },
    {
        "body": "ClassIsland 的“规则集”中的“反转”选项有什么作用？",
        "correct_choices": [
            "将规则或规则组的判断结果取反",
            "如果原来是满足条件，反转后则为不满足"
        ],
        "incorrect_choices": [
            "将主界面的颜色反转",
            "将课程的顺序颠倒",
            "撤销上一次的操作",
            "将时间倒流"
        ]
    },
    {
        "body": "在 ClassIsland 中，“显示器”设置选项的主要作用是什么？",
        "correct_choices": [
            "选择 ClassIsland 主界面停靠在哪一个显示器上",
            "允许多显示器环境下指定主界面位置"
        ],
        "incorrect_choices": [
            "调整显示器的分辨率和刷新率",
            "校准显示器的颜色",
            "设置屏幕保护程序",
            "开启或关闭显示器"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能默认的备份间隔是多久？",
        "correct_choices": [
            "每隔 7 天",
            "一周一次"
        ],
        "incorrect_choices": [
            "每天一次",
            "每月一次",
            "每次应用启动时",
            "从不自动备份"
        ]
    },
    {
        "body": "ClassIsland 支持从系统壁纸提取主题色，这个功能在什么情况下可能无法正常工作？",
        "correct_choices": [
            "如果使用了不兼容的动态壁纸软件",
            "如果壁纸窗口类名设置不正确",
            "如果启用了兼容模式但壁纸并非静态图片"
        ],
        "incorrect_choices": [
            "如果壁纸的分辨率过低",
            "如果壁纸文件格式不是 JPG",
            "如果系统主题不是 Aero 主题",
            "如果未连接到互联网"
        ]
    },
    {
        "body": "在 ClassIsland 的“时间表编辑”中，如果一个时间点被设置为“户外课程”，这通常意味着什么？",
        "correct_choices": [
            "这个课程可能需要在教室外进行",
            "在上课准备提醒时，可能会有不同的提示语或提前时间"
        ],
        "incorrect_choices": [
            "这个课程会自动标记为“体育课”",
            "主界面会显示一个户外风景的背景",
            "应用会自动打开地图导航",
            "这个课程不需要老师点名"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如“时钟”或“日期”，它们的显示格式是否可以自定义？",
        "correct_choices": [
            "时钟组件可以设置是否显示秒数",
            "部分组件有其特定的设置来自定义显示，但并非所有格式都可自定义"
        ],
        "incorrect_choices": [
            "所有组件的显示格式都可以通过 CSS 自定义",
            "日期组件可以设置为显示农历日期",
            "时钟组件可以设置为模拟时钟样式",
            "所有组件的格式都是固定的，无法更改"
        ]
    },
    {
        "body": "如果 ClassIsland 在运行时意外崩溃，用户可以在哪里找到崩溃相关的日志信息？",
        "correct_choices": [
            "Windows 事件查看器的应用程序日志中",
            "ClassIsland 日志窗口（如果应用还能部分运行）",
            "ClassIsland 安装目录下的 Logs 文件夹"
        ],
        "incorrect_choices": [
            "ClassIsland 的官网论坛",
            "用户的电子邮件收件箱",
            "Windows 注册表中",
            "系统回收站中"
        ]
    },
    {
        "body": "ClassIsland 的“组件配置方案”允许用户做什么？",
        "correct_choices": [
            "保存和加载不同的主界面组件布局和设置",
            "为不同的场景创建不同的组件显示方案"
        ],
        "incorrect_choices": [
            "修改组件的源代码",
            "将组件导出为独立的应用",
            "购买新的高级组件",
            "设置组件的自动更新"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个提醒来源的“启用语音”选项被勾选，但全局的“允许启用提醒语音”未勾选，提醒会播报语音吗？",
        "correct_choices": [
            "不会，全局设置优先于单个提醒来源的设置",
            "全局的“允许”开关控制所有提醒来源是否可以播报语音"
        ],
        "incorrect_choices": [
            "会，单个提醒来源的设置优先",
            "会，但音量会减半",
            "会，但只会播报标题",
            "取决于当前系统是否静音"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”向导中，“选择时间安排区域”步骤的目的是什么？",
        "correct_choices": [
            "让用户在 Excel 表格中指定包含时间点信息（如8:00-8:45）的单元格区域",
            "帮助 ClassIsland 解析出时间表的上下课时间"
        ],
        "incorrect_choices": [
            "选择整个课表所在的单元格区域",
            "选择包含科目名称的单元格区域",
            "选择包含教师姓名的单元格区域",
            "选择日期信息所在的单元格区域"
        ]
    },
    {
        "body": "ClassIsland 的主界面“指针移入淡化”功能，如果勾选了“反转指针移入淡化”，会是什么效果？",
        "correct_choices": [
            "主界面默认淡化，鼠标移入时恢复正常显示",
            "主界面仅在鼠标悬停时清晰显示"
        ],
        "incorrect_choices": [
            "主界面完全透明，鼠标移入时才显示",
            "鼠标移入时，主界面会变得更暗",
            "主界面的淡化动画会反向播放",
            "该功能会被禁用"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个“科目”的“简称”字段为空，应用会如何处理？",
        "correct_choices": [
            "如果“科目名”不为空，会自动取“科目名”的第一个字作为简称",
            "如果“科目名”也为空，可能会显示为问号或空白"
        ],
        "incorrect_choices": [
            "应用会报错并要求用户填写简称",
            "会自动使用“未”作为简称",
            "会随机生成一个简称",
            "该科目将无法在课表中使用"
        ]
    },
    {
        "body": "ClassIsland 的插件清单文件（manifest.yml）中，`apiVersion` 字段的作用是什么？",
        "correct_choices": [
            "指定插件面向的 ClassIsland 版本",
            "确保插件与特定版本的 ClassIsland 兼容",
            "插件只能在高于或等于此版本的 ClassIsland 上工作"
        ],
        "incorrect_choices": [
            "指定插件自身的版本号",
            "指定插件依赖的 .NET 版本",
            "指定插件的 API 接口数量",
            "指定插件的开发者 API 密钥"
        ]
    },
    {
        "body": "ClassIsland 的“教学安全模式”的主要目的是什么？",
        "correct_choices": [
            "在应用发生意外崩溃时，尽量减少对教学的影响",
            "允许用户设置应用崩溃时的自动处理方式"
        ],
        "incorrect_choices": [
            "防止学生修改课表",
            "限制应用的网络访问",
            "加密存储用户的个人数据",
            "提供一个简化的、无干扰的界面"
        ]
    },
    {
        "body": "在 ClassIsland 的“自动化”功能中，如果一个行动组的“启用恢复”被勾选，当规则集不再满足时会发生什么？",
        "correct_choices": [
            "之前因规则满足而触发的行动会被自动恢复到原始状态",
            "例如，如果行动修改了某个设置，这个设置会被改回去"
        ],
        "incorrect_choices": [
            "行动组会被永久禁用",
            "应用会显示一个错误提示",
            "所有相关的设置会被重置为默认值",
            "会触发另一个预设的“恢复”行动组"
        ]
    },
    {
        "body": "ClassIsland 主界面上的“快速信息”区域（默认在日期组件处）主要用来显示什么？",
        "correct_choices": [
            "当前日期和星期",
            "可以通过插件扩展显示其他信息，如天气、倒计时等"
        ],
        "incorrect_choices": [
            "当前上课科目的详细介绍",
            "学校的最新通知公告",
            "系统 CPU 和内存使用率",
            "用户的待办事项列表"
        ]
    },
    {
        "body": "在 ClassIsland 的“时间表编辑”中，如果两个上课时间点之间没有添加“课间休息”时间点，会发生什么？",
        "correct_choices": [
            "应用可能无法正确判断课间休息的开始和结束",
            "与课间休息相关的提醒和自动化可能不会触发",
            "主界面可能不会显示课间休息状态"
        ],
        "incorrect_choices": [
            "应用会自动插入一个默认长度的课间休息",
            "这两个上课时间点会被合并为一个",
            "应用会报错并阻止保存时间表",
            "主界面会一直显示“上课中”"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果备份数量达到上限，会如何处理？",
        "correct_choices": [
            "覆盖最旧的自动备份文件",
            "删除最早创建的自动备份以腾出空间"
        ],
        "incorrect_choices": [
            "停止自动备份",
            "提示用户手动清理备份文件",
            "自动增加备份上限",
            "将旧的备份文件压缩存档"
        ]
    },
    {
        "body": "在 ClassIsland 的“组件设置”页面，如果一个组件是“容器组件”，通常意味着什么？",
        "correct_choices": [
            "这个组件可以容纳并显示其他组件",
            "用户可以在这个组件内部添加子组件",
            "例如轮播组件或分组组件"
        ],
        "incorrect_choices": [
            "这个组件的设置项特别多",
            "这个组件只能在主界面的特定位置显示",
            "这个组件是付费的",
            "这个组件由多个 DLL 文件组成"
        ]
    },
    {
        "body": "ClassIsland 的“精确时间服务”如果无法连接到NTP服务器，会发生什么？",
        "correct_choices": [
            "应用会回退到使用本地系统时间",
            "“同步状态信息”会显示错误信息",
            "课表和提醒可能会不准确"
        ],
        "incorrect_choices": [
            "应用会无法启动",
            "主界面会显示“时间错误”",
            "会自动尝试连接其他公共NTP服务器",
            "提醒功能会被完全禁用"
        ]
    },
    {
        "body": "ClassIsland 的多周轮换功能中，“单双周”设置是基于什么计算的？",
        "correct_choices": [
            "【学期开始时间】设置",
            "当前日期与学期开始时间之间的周数差"
        ],
        "incorrect_choices": [
            "公历月份的单双",
            "农历月份的单双",
            "当前周数是奇数还是偶数",
            "学校手动设置的当前周类型"
        ]
    },
    {
        "body": "在 ClassIsland 的提醒设置中，如果“自定义音效”路径留空，会发生什么？",
        "correct_choices": [
            "如果启用了提醒音效，会使用应用内置的默认音效",
            "不会播放自定义音效"
        ],
        "incorrect_choices": [
            "提醒将没有音效",
            "应用会随机选择一个系统音效播放",
            "会弹出一个错误提示",
            "提醒音效会被禁用"
        ]
    },
    {
        "body": "ClassIsland 在显示提醒时，如果同时有多个提醒请求，会如何处理？",
        "correct_choices": [
            "按照提醒提供方的优先级和请求顺序排队处理",
            "高优先级的提醒会先显示"
        ],
        "incorrect_choices": [
            "只显示第一个到达的提醒",
            "同时显示所有提醒，可能会重叠",
            "随机选择一个提醒显示",
            "根据提醒内容的重要性自动排序"
        ]
    },
    {
        "body": "ClassIsland 的“组件设置”页面中，如果一个组件的设置界面为空，通常是什么原因？",
        "correct_choices": [
            "该组件本身没有可供用户配置的设置项",
            "这是一个简单的显示组件，不需要额外设置"
        ],
        "incorrect_choices": [
            "组件文件已损坏",
            "需要管理员权限才能查看设置",
            "该组件是付费功能的一部分",
            "用户没有安装该组件的依赖库"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，在导入时间表时，如果表格中的时间格式不规范，可能会发生什么？",
        "correct_choices": [
            "无法正确解析时间点",
            "导入的时间表可能不准确或不完整"
        ],
        "incorrect_choices": [
            "应用会自动尝试修复时间格式",
            "导入过程会直接失败并报错",
            "会使用默认的时间表替换导入的内容",
            "会提示用户手动输入每个时间点"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置中的“置底”选项有什么效果？",
        "correct_choices": [
            "主界面会显示在所有其他窗口的后方",
            "主界面表现得像桌面壁纸的一部分"
        ],
        "incorrect_choices": [
            "主界面会完全隐藏",
            "主界面会变得半透明",
            "主界面会显示在任务栏下方",
            "主界面会固定在屏幕底部"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的设置中更改了需要重启才能生效的选项，应用会如何提示？",
        "correct_choices": [
            "在设置窗口的右上角显示“需要重启”的提示",
            "关闭设置窗口时可能会弹出确认重启的对话框"
        ],
        "incorrect_choices": [
            "应用会自动静默重启",
            "不会有任何提示，用户需要自行判断",
            "会在下次启动时显示一个警告信息",
            "会通过系统通知区域图标闪烁提示"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“触发器”的作用是什么？",
        "correct_choices": [
            "定义自动化工作流在什么情况下被启动",
            "监听特定的应用事件或系统事件"
        ],
        "incorrect_choices": [
            "执行具体的操作，如打开文件",
            "设置自动化流程的参数",
            "控制自动化流程的执行速度",
            "记录自动化流程的执行日志"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果删除了一个正在被某个课表使用的时间表，会发生什么？",
        "correct_choices": [
            "通常情况下不允许删除，会提示该时间表仍在使用",
            "如果强制删除（或通过其他方式），使用该时间表的课表将无法正常工作"
        ],
        "incorrect_choices": [
            "使用该时间表的课表会自动切换到默认时间表",
            "应用会自动创建一个新的时间表替代被删除的",
            "对应的课表也会被一并删除",
            "不会有任何影响"
        ]
    },
    {
        "body": "ClassIsland 的“从壁纸提取主题色”功能，在兼容模式下是如何获取壁纸的？",
        "correct_choices": [
            "从注册表获取系统当前使用的壁纸路径",
            "读取系统设置中的壁纸文件"
        ],
        "incorrect_choices": [
            "对整个桌面进行截图分析",
            "通过获取桌面窗口句柄并截图",
            "连接到微软的壁纸服务器下载",
            "使用摄像头拍摄当前环境光线"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”默认的插件源（索引）托管在哪里？",
        "correct_choices": [
            "GitHub 上的 ClassIsland/PluginIndex 仓库",
            "ClassIsland 官方维护的插件索引库"
        ],
        "incorrect_choices": [
            "微软的应用商店",
            "用户本地的插件文件夹",
            "一个独立的第三方网站",
            "ClassIsland 应用内置的数据库"
        ]
    },
    {
        "body": "ClassIsland 的“教学安全模式”在应用崩溃时，有哪些可选的处理方式？",
        "correct_choices": [
            "退出应用",
            "静默重启应用",
            "显示通知",
            "忽略（不推荐）"
        ],
        "incorrect_choices": [
            "自动发送错误报告给开发者",
            "尝试回滚到上一个稳定版本",
            "锁定电脑屏幕",
            "播放警报音"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个科目被标记为“户外课程”，在上课准备提醒时，其默认的提醒提前时间与室内课程相比通常是？",
        "correct_choices": [
            "更长",
            "会提前更多时间发出提醒"
        ],
        "incorrect_choices": [
            "更短",
            "相同",
            "不发出提醒",
            "由老师手动设置"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中的“时间轴视图”模式，用户可以通过哪些方式调整时间点？",
        "correct_choices": [
            "拖动时间点开始处的把柄",
            "拖动时间点结束处的把柄",
            "直接拖动整个时间点以移动它"
        ],
        "incorrect_choices": [
            "通过键盘输入精确的时间数值",
            "右键点击时间点选择“自动调整”",
            "使用滚轮缩放时间点长度",
            "只能在列表视图中修改时间"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 中创建了一个新的“课表群”但没有向其中添加任何课表，这个课表群会如何影响应用的课表加载？",
        "correct_choices": [
            "如果这个空课表群被选中，且没有启用临时课表群或全局课表，则当天可能没有课表显示",
            "仅当这个空课表群被设为当前启用，并且没有其他课表群（如全局或临时）提供课表时，才会导致无课表"
        ],
        "incorrect_choices": [
            "应用会自动从“默认”课表群加载课表",
            "应用会提示错误并要求用户添加课表",
            "这个空课表群会被自动删除",
            "不会有任何影响，应用会忽略空课表群"
        ]
    },
    {
        "body": "ClassIsland 的主界面在显示当前课程时，进度条表示的是什么？",
        "correct_choices": [
            "当前时间点已进行的时间占总时长的百分比",
            "当前课程或课间休息的已过时间进度"
        ],
        "incorrect_choices": [
            "当天所有课程已完成的百分比",
            "学生完成作业的进度",
            "应用的加载进度",
            "网络连接的信号强度"
        ]
    },
    {
        "body": "ClassIsland 的“组件”配置文件默认存储在哪个目录下？",
        "correct_choices": [
            "./Config/Islands/",
            "应用配置目录下的 Islands 文件夹"
        ],
        "incorrect_choices": [
            "./Profiles/",
            "./Plugins/",
            "./Cache/Components/",
            "Windows 系统目录"
        ]
    },
    {
        "body": "在 ClassIsland 的提醒设置中，“允许启用提醒语音”和单个提醒来源的“启用语音”是什么关系？",
        "correct_choices": [
            "全局的“允许启用提醒语音”控制所有提醒是否可以播报语音",
            "如果全局的“允许”未勾选，即使单个提醒来源勾选了“启用语音”，也不会播报"
        ],
        "incorrect_choices": [
            "两者是独立设置，互不影响",
            "单个提醒来源的设置优先于全局设置",
            "全局设置只对内置提醒有效，对插件提醒无效",
            "全局设置只控制默认语音，单个提醒来源可以指定其他语音引擎"
        ]
    },
    {
        "body": "ClassIsland 应用本体（非核心库和共享库）的开源许可证是什么？",
        "correct_choices": [
            "GPLv3",
            "GNU General Public License v3.0"
        ],
        "incorrect_choices": [
            "LGPLv3",
            "MIT License",
            "Apache License 2.0",
            "BSD License"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的“启用条件判定”未勾选，会发生什么？",
        "correct_choices": [
            "该工作流在被触发器触发时，会忽略其配置的规则集，直接执行行动",
            "工作流的执行不再受规则集限制"
        ],
        "incorrect_choices": [
            "该工作流将无法被触发",
            "该工作流的行动会反向执行",
            "应用会提示用户确认是否执行",
            "规则集会被重置为默认条件"
        ]
    },
    {
        "body": "ClassIsland 的“临时层课表”和“预定调课”中的临时启用课表有什么区别？",
        "correct_choices": [
            "临时层课表通常在当天创建和使用，第二天自动删除，用于当天的临时调整",
            "预定调课允许提前指定某一天使用某个已有的课表，或者创建并预定一个临时层"
        ],
        "incorrect_choices": [
            "两者没有区别，是同一功能的两种叫法",
            "临时层课表是永久性的，预定调课是临时的",
            "临时层课表只能修改科目，预定调课可以修改时间",
            "预定调课需要管理员权限，临时层不需要"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能在选择课程区域后，如果选择了“每竖列为一个课表”，这意味着什么？",
        "correct_choices": [
            "表格中的每一列代表一周中某一天的课程安排",
            "导入程序会按列读取课程信息来创建或填充课表"
        ],
        "incorrect_choices": [
            "表格中的每一行代表一个课表",
            "每一列代表一个科目的所有上课时间",
            "每一列代表一个时间表",
            "导入功能不支持竖向排列的课表"
        ]
    },
    {
        "body": "ClassIsland 中“提醒特效渲染精度”设置的作用是什么？",
        "correct_choices": [
            "调整提醒特效渲染时的缩放比例",
            "使用较低的精度可以获得较好的性能，但特效可能不清晰",
            "使用较高的精度特效更清晰，但可能更消耗性能"
        ],
        "incorrect_choices": [
            "设置提醒特效的颜色深度",
            "控制提醒特效的播放速度",
            "选择不同的提醒特效动画",
            "调整提醒特效的音量"
        ]
    },
    {
        "body": "ClassIsland 官方文档中提及的“CSES”是什么？",
        "correct_choices": [
            "一款课表应用，ClassIsland 支持从其格式导入课表",
            "Electron Class Schedule，一个课表项目"
        ],
        "incorrect_choices": [
            "一种计算机科学竞赛平台",
            "ClassIsland 的一个核心组件名称",
            "一种加密算法",
            "ClassIsland 的开发代号之一"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中的“行动”时间点是用来做什么的？",
        "correct_choices": [
            "在指定时间自动触发预设的自动化行动组",
            "实现定时执行自动化功能"
        ],
        "incorrect_choices": [
            "标记一个需要学生集体行动的课程，如升旗",
            "播放一段动画效果",
            "打开一个特定的应用程序窗口",
            "记录教师的操作日志"
        ]
    },
    {
        "body": "如果ClassIsland的主界面显示“（无课表）”，可能是什么原因？",
        "correct_choices": [
            "当前日期没有配置任何启用的课表",
            "当前启用的课表群中，没有符合当天触发规则的课表",
            "课表功能被临时禁用（通过临时课表菜单）",
            "档案文件损坏或未正确加载"
        ],
        "incorrect_choices": [
            "网络连接已断开",
            "电脑的系统时间不正确",
            "显示器未连接或已关闭",
            "应用需要更新"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个插件的清单文件（manifest.yml）缺失或损坏，会发生什么？",
        "correct_choices": [
            "该插件可能无法被 ClassIsland 正确识别和加载",
            "插件列表可能不会显示该插件，或者显示加载错误"
        ],
        "incorrect_choices": [
            "ClassIsland 应用本体将无法启动",
            "该插件会自动从插件市场重新下载",
            "系统会提示用户手动创建清单文件",
            "该插件的功能会受限，但仍可部分使用"
        ]
    },
    {
        "body": "ClassIsland 的“PointerEvent”通常与哪个功能相关？",
        "correct_choices": [
            "指针移入淡化功能，用于检测鼠标或触摸屏事件",
            "RawInput，用于更精确地识别输入设备类型（鼠标/触摸）"
        ],
        "incorrect_choices": [
            "自定义鼠标指针样式",
            "屏幕画笔功能",
            "远程控制鼠标",
            "游戏手柄支持"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果用户反馈“主界面不显示了”，但托盘图标还在，可能的原因有哪些？",
        "correct_choices": [
            "在托盘菜单中选择了“隐藏主界面”",
            "“按规则隐藏主界面”的设置正在生效",
            "自动化功能修改了主界面的显示设置",
            "主界面因某种原因被移动到了屏幕外或不可见区域"
        ],
        "incorrect_choices": [
            "应用已崩溃并自动退出",
            "显示器已关闭或未连接",
            "电脑进入了睡眠模式",
            "网络连接中断导致界面无法加载"
        ]
    },
    {
        "body": "ClassIsland 的“组件库”在哪个设置页面可以找到？",
        "correct_choices": [
            "【应用设置】->【组件】",
            "组件配置页面"
        ],
        "incorrect_choices": [
            "【应用设置】->【外观】",
            "【应用设置】->【提醒】",
            "【档案编辑】->【时间表】",
            "【应用设置】->【插件】"
        ]
    },
    {
        "body": "如果 ClassIsland 的某个组件的“按规则隐藏”功能被启用，并且设置了隐藏规则，那么当规则满足时会发生什么？",
        "correct_choices": [
            "该组件会自动隐藏",
            "组件的显示状态会变为不可见"
        ],
        "incorrect_choices": [
            "该组件会被从主界面移除",
            "该组件的设置会被重置",
            "应用会发出一个警告通知",
            "该组件的功能会被禁用，但依然显示"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，备份文件的命名格式通常包含什么信息？",
        "correct_choices": [
            "前缀“Auto_Backup_”",
            "备份的日期和时间",
            "形如 Auto_Backup_YY-Mon-DD_HH-MM-SS"
        ],
        "incorrect_choices": [
            "当前登录的用户名",
            "备份文件的MD5哈希值",
            "当前加载的课表名称",
            "ClassIsland 的版本号"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果“时间表”中的某个“上课”类型时间点没有设置“默认科目”，那么在课表编辑中这个时间点会如何显示？",
        "correct_choices": [
            "该时间点对应的课程科目栏会显示为空或提示选择科目",
            "用户需要在课表编辑中为这个时间点手动选择一个科目"
        ],
        "incorrect_choices": [
            "应用会自动分配一个“自习”科目",
            "该时间点会被自动隐藏",
            "应用会从上一个时间点继承科目",
            "该时间点会显示为“待定”"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”中，设置的应用优先级顺序是怎样的？",
        "correct_choices": [
            "科目 > 时间点 > 课表 > 时间表 > 全局设置",
            "优先级高的设置会覆盖优先级低的设置"
        ],
        "incorrect_choices": [
            "全局设置 > 时间表 > 课表 > 时间点 > 科目",
            "所有层级的设置会合并生效，冲突时以最新修改的为准",
            "课表设置优先于时间表，其他层级无效",
            "用户可以在每个层级设置独立的优先级数值"
        ]
    },
    {
        "body": "如果 ClassIsland 无法从NTP服务器同步精确时间，它会使用什么时间？",
        "correct_choices": [
            "本地系统时间",
            "电脑自身的时钟"
        ],
        "incorrect_choices": [
            "上一次成功同步到的NTP时间，并持续使用",
            "随机生成一个时间",
            "提示用户手动输入当前时间",
            "停止所有与时间相关的功能"
        ]
    },
    {
        "body": "ClassIsland 的“组件”配置文件（如 Default.json）是用来存储什么的？",
        "correct_choices": [
            "主界面上显示的组件及其布局和设置",
            "用户自定义的组件配置方案"
        ],
        "incorrect_choices": [
            "应用的全局设置",
            "用户的课表数据",
            "已安装插件的列表",
            "应用的更新历史记录"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，“跟随系统”选项是如何工作的？",
        "correct_choices": [
            "根据 Windows 系统的明暗主题设置自动切换 ClassIsland 的明暗主题",
            "当 Windows 切换到深色模式时，ClassIsland 也会切换到深色模式"
        ],
        "incorrect_choices": [
            "ClassIsland 的主题颜色会完全匹配 Windows 的强调色",
            "ClassIsland 会使用 Windows 系统的壁纸作为背景",
            "ClassIsland 的字体会与系统字体保持一致",
            "ClassIsland 的窗口样式会模仿 Windows 系统窗口"
        ]
    },
    {
        "body": "ClassIsland 的“导出诊断数据”功能会包含哪些信息？",
        "correct_choices": [
            "应用设置（Settings.json）",
            "当前加载的档案文件",
            "系统及环境信息",
            "应用日志（最近1000条）",
            "集控配置（如果已加入集控）"
        ],
        "incorrect_choices": [
            "用户的浏览器历史记录",
            "电脑上安装的所有软件列表",
            "用户的个人文档和图片",
            "Windows 事件查看器中的所有系统日志"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“时间表”被多个“课表”使用，修改这个时间表会对这些课表产生什么影响？",
        "correct_choices": [
            "所有使用这个时间表的课表的时间安排都会相应更新",
            "如果时间点被删除或修改，依赖这些时间点的课程信息可能需要重新调整"
        ],
        "incorrect_choices": [
            "只有当前选中的课表会更新，其他课表不受影响",
            "应用会为每个课表创建一个时间表的副本，修改互不影响",
            "修改时间表后，需要手动将更改应用到每个课表",
            "无法修改被多个课表使用的时间表"
        ]
    },
    {
        "body": "ClassIsland 的“兼容透明模式”选项是用来解决什么问题的？",
        "correct_choices": [
            "解决在某些系统环境下，窗口透明效果异常（如黑底、叠加异常）的问题",
            "使用一种资源占用更高的备选方法来实现窗口透明"
        ],
        "incorrect_choices": [
            "提高窗口透明的性能",
            "允许用户自定义窗口的透明度级别",
            "使窗口能够穿透所有其他应用程序",
            "为窗口添加毛玻璃效果"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 中设置了“禁止编辑档案”的集控策略，那么用户还能进行哪些操作？",
        "correct_choices": [
            "临时换课",
            "启用或禁用临时课表"
        ],
        "incorrect_choices": [
            "创建新的课表",
            "修改时间表中的时间点",
            "添加新的科目",
            "从 Excel 导入课表"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件如果设置了“固定宽度”，会是什么效果？",
        "correct_choices": [
            "该组件的宽度将固定为一个特定的像素值",
            "组件不会根据内容自动调整宽度"
        ],
        "incorrect_choices": [
            "组件的宽度会根据其在主界面中的位置自动调整",
            "组件会占满其所在行的所有可用宽度",
            "组件的宽度会根据屏幕分辨率动态变化",
            "该设置只对文本组件有效"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“广播信号”行动的作用是什么？",
        "correct_choices": [
            "发出一个应用内的广播信号",
            "用于触发其他自动化流程中“收到信号时”的触发器"
        ],
        "incorrect_choices": [
            "向网络中的其他设备发送消息",
            "播放一段预设的音频信号",
            "改变主界面的背景颜色以示信号",
            "向用户的手机发送通知"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果“学期开始时间”设置不当（例如，设置在了未来），可能会影响哪个功能的正常运作？",
        "correct_choices": [
            "多周轮换课表的计算",
            "单双周的判断"
        ],
        "incorrect_choices": [
            "应用更新的检查",
            "天气信息的获取",
            "提醒音效的播放",
            "主界面的主题颜色"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”中的“覆盖”状态（橙色标记）通常表示什么？",
        "correct_choices": [
            "当前节点的附加设置被更高优先级的节点覆盖了",
            "例如，时间点的设置覆盖了时间表的设置"
        ],
        "incorrect_choices": [
            "当前节点的设置是最终生效的设置",
            "当前节点的设置与全局设置相同",
            "当前节点没有配置该附加设置",
            "当前节点的设置存在错误"
        ]
    },
    {
        "body": "ClassIsland 的“语音引擎”设置中，如果选择了“Edge TTS”，需要注意什么？",
        "correct_choices": [
            "需要联网工作",
            "语音合成可能存在一定延迟"
        ],
        "incorrect_choices": [
            "只能朗读英文文本",
            "需要付费购买语音包",
            "会大量消耗系统资源",
            "不支持自定义语速和音调"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”向导中，“时间对应关系”步骤是用来做什么的？",
        "correct_choices": [
            "将表格中表示课程的行或列与时间表中的具体时间点对应起来",
            "确保导入的课程能够正确匹配到时间表中的上下课时间"
        ],
        "incorrect_choices": [
            "设置每个课程的持续时间",
            "选择要导入哪些科目的课程",
            "定义多周轮换的规则",
            "设置课间休息的时长"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，主界面会显示在哪里？",
        "correct_choices": [
            "显示在所有其他窗口的前方",
            "始终保持在屏幕最顶层"
        ],
        "incorrect_choices": [
            "显示在任务栏下方",
            "只在桌面显示，其他窗口打开时会自动隐藏",
            "嵌入到当前活动窗口的标题栏",
            "会根据鼠标位置自动调整层级"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，用户可以从哪里获取插件？",
        "correct_choices": [
            "应用内置的插件市场",
            "从本地文件（.cipx 格式）安装",
            "开发者或其他用户分享的插件包"
        ],
        "incorrect_choices": [
            "Windows 应用商店",
            "通过修改注册表启用隐藏插件",
            "只能通过编译源代码获得",
            "需要向开发者单独申请"
        ]
    },
    {
        "body": "ClassIsland 的“回声洞”中的内容主要来源于哪里？",
        "correct_choices": [
            "ClassIsland 用户群或社区成员的发言",
            "应用内置的文本列表，包含一些有趣的引言或吐槽"
        ],
        "incorrect_choices": [
            "实时从互联网抓取的笑话",
            "用户本地计算机上的文档",
            "开发者的个人博客",
            "由人工智能模型自动生成"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果设置的“自动备份上限”为0，意味着什么？",
        "correct_choices": [
            "自动备份数量没有上限",
            "应用会保留所有自动生成的备份文件，不会自动删除旧备份"
        ],
        "incorrect_choices": [
            "禁用自动备份功能",
            "每次备份都会覆盖上一次的备份",
            "只保留最近一次的自动备份",
            "需要手动确认才能进行自动备份"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如“课程表”，其字体大小是如何确定的？",
        "correct_choices": [
            "默认使用【外观】设置中的全局字体大小",
            "可以通过组件的“高级设置”中的资源覆盖来单独设置",
            "如果组件是容器组件的子组件，其字体大小可能受父容器影响"
        ],
        "incorrect_choices": [
            "只能使用系统默认字体大小",
            "字体大小会根据屏幕分辨率自动调整",
            "每个组件都有独立的、固定的字体大小",
            "需要修改组件的源代码才能更改字体大小"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流设置了“规则集更新时”作为触发器，那么这个工作流会在什么时候执行？",
        "correct_choices": [
            "当规则集中的某个规则的状态发生变化，导致整个规则集的满足状态发生变化时",
            "当与该工作流关联的规则集的最终判定结果从“不满足”变为“满足”时（或反之，如果行动已触发且启用了恢复）"
        ],
        "incorrect_choices": [
            "每次打开自动化设置页面时",
            "每天固定时间执行一次",
            "当用户手动点击“刷新规则集”按钮时",
            "仅在 ClassIsland 应用启动时执行一次"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果用户创建了一个新的“时间表”但没有在任何“课表”中使用它，这个时间表会起作用吗？",
        "correct_choices": [
            "不会，时间表需要被某个启用的课表引用才能生效",
            "这个时间表只是一个定义，不会影响主界面的显示"
        ],
        "incorrect_choices": [
            "会自动替换掉当前使用的时间表",
            "会作为备用时间表，在当前时间表出问题时自动启用",
            "应用会随机选择一个时间表使用",
            "会与当前时间表合并"
        ]
    },
    {
        "body": "ClassIsland 的“从壁纸提取主题色”功能，如果提取到的颜色与壁纸主色调差异较大，可能是什么原因？",
        "correct_choices": [
            "“取色亮度波峰”设置不合适",
            "动态壁纸内容变化太快，提取时机不佳",
            "壁纸本身颜色复杂，算法难以准确识别主色调"
        ],
        "incorrect_choices": [
            "显示器颜色校准不准确",
            "ClassIsland 的版本过低",
            "未安装显卡驱动程序",
            "系统主题色设置冲突"
        ]
    },
    {
        "body": "ClassIsland 的“本地集控”功能（密码保护和限制策略）与“云端集控”有什么主要区别？",
        "correct_choices": [
            "本地集控不需要连接到集控服务器即可生效",
            "本地集控的配置存储在本地计算机上",
            "云端集控允许管理员远程分发配置和策略"
        ],
        "incorrect_choices": [
            "本地集控的功能比云端集控更强大",
            "本地集控只能设置密码，不能限制功能",
            "云端集控是免费的，本地集控需要付费",
            "本地集控只对当前用户有效，云端集控对所有用户有效"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中，如果一个“课间休息”时间点没有设置“课间名称”，它在主界面上会显示什么？",
        "correct_choices": [
            "显示“课间休息”",
            "显示默认的课间名称"
        ],
        "incorrect_choices": [
            "显示为空白",
            "显示上一个上课科目的名称",
            "显示“未命名课间”",
            "该时间点不会被识别为课间休息"
        ]
    },
    {
        "body": "ClassIsland 插件的`.cipx`文件实际上是什么类型的文件？",
        "correct_choices": [
            "ZIP 压缩文件",
            "一个包含了插件文件和清单的压缩包"
        ],
        "incorrect_choices": [
            "可执行文件（.exe）",
            "动态链接库（.dll）",
            "加密的二进制文件",
            "ClassIsland 特有的私有格式文件"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果用户想要在所有课表的所有特定时间点（如第一节课）都显示一个相同的附加信息，应该在哪里配置附加设置？",
        "correct_choices": [
            "在对应时间表中的该时间点上配置附加设置",
            "在该时间表的时间点附加设置中启用"
        ],
        "incorrect_choices": [
            "在每个课表的该时间点上分别配置",
            "在全局应用设置中配置",
            "在对应科目的附加设置中配置",
            "无法实现，只能逐个设置"
        ]
    },
    {
        "body": "ClassIsland 的“调试菜单”中的“特性调试窗口”主要用于什么？",
        "correct_choices": [
            "测试和演示应用的部分特定功能或控件",
            "供开发者进行快速的功能验证"
        ],
        "incorrect_choices": [
            "查看应用的性能分析报告",
            "修改应用的底层参数",
            "自动修复常见的应用错误",
            "远程调试其他用户的 ClassIsland 实例"
        ]
    },
    {
        "body": "如果 ClassIsland 的主界面在某些全屏应用（如游戏）下没有自动隐藏，可能的原因是？",
        "correct_choices": [
            "“隐藏窗口”设置中的“前台是全屏窗口时”选项未勾选",
            "该全屏应用的进程名被添加到了“排除的全屏窗口”列表中",
            "ClassIsland 的窗口规则服务未能正确识别该全屏状态"
        ],
        "incorrect_choices": [
            "主界面的“窗口层级”设置为了“置顶”",
            "电脑的性能不足以支持该功能",
            "需要安装特定的游戏兼容插件",
            "该功能已被集控策略禁用"
        ]
    },
    {
        "body": "ClassIsland 的“快捷换课”桌面快捷方式依赖于哪个系统功能才能正常工作？",
        "correct_choices": [
            "Url 协议注册 (classisland://)",
            "应用设置中的“注册 Url 协议”选项需要启用"
        ],
        "incorrect_choices": [
            "管理员权限",
            ".NET Framework 兼容模式",
            "特定的显卡驱动程序",
            "Windows 快捷键管理器"
        ]
    },
    {
        "body": "ClassIsland 的“提醒音效”功能，如果用户选择了一个非常长的自定义音效文件，会发生什么？",
        "correct_choices": [
            "如果音效长于提醒显示时间，多出来的部分会被截断",
            "音效只会在提醒显示期间播放"
        ],
        "incorrect_choices": [
            "应用会自动将音效缩短到合适的长度",
            "提醒的显示时间会自动延长以播放完整的音效",
            "应用会提示错误并要求用户选择较短的音效",
            "音效会循环播放直到提醒结束"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个“课表群”被设置为“覆盖”模式的临时课表群，它会如何影响课表的加载？",
        "correct_choices": [
            "只会加载这个临时课表群和全局课表群中的课表",
            "原先选中的普通课表群中的课表将不会被加载（除非它也是全局的）"
        ],
        "incorrect_choices": [
            "会加载所有课表群中的课表，但优先加载临时课表群的",
            "只会加载这个临时课表群中的课表，全局课表群也会被忽略",
            "所有课表都会被临时禁用",
            "应用会提示用户选择要覆盖哪些课表群"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”向导中，如果表格中某些课程名称在 ClassIsland 的科目列表中不存在，会发生什么？",
        "correct_choices": [
            "这些课程的科目栏可能会显示为空或原始文本",
            "用户需要在导入后手动创建或匹配这些科目"
        ],
        "incorrect_choices": [
            "应用会自动创建新的科目",
            "导入过程会失败并报错",
            "这些课程会被自动忽略，不会导入",
            "应用会随机分配一个已有的科目给这些课程"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”设置中，如果设置了一个负值（例如 -5 秒），这意味着什么？",
        "correct_choices": [
            "ClassIsland 内部计时会比标准时间（NTP或系统时间）早 5 秒",
            "用于抵消学校铃声实际比标准时间晚响的情况"
        ],
        "incorrect_choices": [
            "ClassIsland 内部计时会比标准时间晚 5 秒",
            "所有课程的持续时间会减少 5 秒",
            "应用的主界面会延迟 5 秒显示",
            "提醒音效会提前 5 秒播放"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”主要用于解决哪些问题？",
        "correct_choices": [
            "应用启动失败或配置损坏",
            "允许用户恢复到之前的备份",
            "提供一些基本的故障排除选项"
        ],
        "incorrect_choices": [
            "恢复被误删除的个人文件",
            "修复操作系统的启动问题",
            "重置用户的 Windows 登录密码",
            "扫描和清除电脑病毒"
        ]
    },
    {
        "body": "ClassIsland 的“禁止编辑档案”集控策略会影响哪些操作？",
        "correct_choices": [
            "用户无法创建、删除或修改课表、时间表和科目",
            "从 Excel 表格导入课表功能会被禁用"
        ],
        "incorrect_choices": [
            "用户无法进行临时换课",
            "用户无法启用临时课表",
            "用户无法调整应用的外观设置",
            "用户无法查看当前加载的课表信息"
        ]
    },
    {
        "body": "ClassIsland 的“组件”配置文件通常是什么格式？",
        "correct_choices": [
            "JSON (.json)",
            "文本文件，内容为 JSON 格式"
        ],
        "incorrect_choices": [
            "XML (.xml)",
            "YAML (.yml)",
            "二进制文件 (.dat)",
            "SQLite 数据库 (.db)"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，“主题色来源”选择“系统壁纸”时，如果壁纸是纯色，提取到的主题色会是怎样的？",
        "correct_choices": [
            "通常会是壁纸的主要颜色",
            "如果壁纸颜色单一，提取结果会比较准确"
        ],
        "incorrect_choices": [
            "会随机选择一种颜色",
            "会使用系统默认的强调色",
            "无法提取颜色，会报错",
            "会提取屏幕上最亮的颜色"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“等待时长”行动的作用是什么？",
        "correct_choices": [
            "让自动化流程暂停指定的秒数再继续执行后续行动",
            "用于在不同行动之间创建延迟"
        ],
        "incorrect_choices": [
            "设置整个自动化流程的超时时间",
            "让 ClassIsland 应用进入休眠模式",
            "调整主计时器的触发间隔",
            "延迟应用的启动时间"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”的时间轴视图中，用户可以通过什么操作来缩放时间轴的显示比例？",
        "correct_choices": [
            "点击右下角的放大/缩小按钮",
            "使用鼠标滚轮（如果焦点在时间轴上）"
        ],
        "incorrect_choices": [
            "拖动时间轴的边缘",
            "在设置中调整全局缩放比例",
            "使用键盘快捷键 Ctrl + +/-",
            "双击时间轴的空白区域"
        ]
    },
    {
        "body": "如果 ClassIsland 的自动更新下载完成后，用户没有立即重启应用，会发生什么？",
        "correct_choices": [
            "应用会提示“已准备好安装更新”",
            "如果勾选了“在下次启动应用时自动安装更新”，则下次启动时会自动安装"
        ],
        "incorrect_choices": [
            "下载的更新包会自动删除",
            "应用会强制自动重启",
            "更新会被标记为失败，需要重新下载",
            "用户需要手动运行安装程序"
        ]
    },
    {
        "body": "ClassIsland 的“排除的全屏窗口”设置是用来做什么的？",
        "correct_choices": [
            "指定一些即使处于全屏状态，也不会导致 ClassIsland 主界面隐藏的应用程序窗口",
            "例如，可以将视频展台或白板软件添加到排除列表，使其全屏时不隐藏课表"
        ],
        "incorrect_choices": [
            "指定哪些窗口在全屏时会被 ClassIsland 自动关闭",
            "设置哪些窗口在 ClassIsland 全屏提醒时不会被覆盖",
            "过滤掉不希望被 ClassIsland 窗口规则影响的窗口",
            "指定哪些窗口在启动时会自动最小化"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”中，如果某个时间点的“上课提醒”附加设置被启用了，它会覆盖哪些层级的设置？",
        "correct_choices": [
            "覆盖该时间点所在课表的“上课提醒”附加设置（如果也启用的话）",
            "覆盖该时间点所在时间表的“上课提醒”附加设置（如果也启用的话）",
            "覆盖全局的“上课提醒”设置"
        ],
        "incorrect_choices": [
            "只覆盖全局设置，不影响其他层级的附加设置",
            "不会覆盖任何设置，只作为补充",
            "只会覆盖科目的附加设置",
            "只会覆盖比它优先级更低的设置"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中，如果两个上课时间点之间的时间间隔为0（即无缝连接），是否还需要添加“课间休息”时间点？",
        "correct_choices": [
            "不需要，因为没有课间休息时间",
            "如果添加了，其持续时长会为0，通常没有意义"
        ],
        "incorrect_choices": [
            "必须添加，否则课表会出错",
            "应用会自动识别并插入一个虚拟的课间休息点",
            "需要添加一个“分割线”时间点代替",
            "这会导致两个上课时间点合并"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，卸载插件后通常需要做什么才能使更改生效？",
        "correct_choices": [
            "重启 ClassIsland 应用",
            "重新启动应用程序"
        ],
        "incorrect_choices": [
            "清除应用缓存",
            "重新登录 Windows 用户账户",
            "刷新插件列表",
            "卸载后立即生效，无需其他操作"
        ]
    },
    {
        "body": "ClassIsland 的“主菜单”中，“编辑档案”和“应用设置”有什么主要区别？",
        "correct_choices": [
            "“编辑档案”用于管理课表、时间表、科目等教学内容相关的配置",
            "“应用设置”用于调整应用本身的各项功能和外观表现"
        ],
        "incorrect_choices": [
            "两者没有区别，指向同一个设置界面",
            "“编辑档案”是只读的，只能查看；“应用设置”可以修改",
            "“编辑档案”需要管理员权限，“应用设置”不需要",
            "“应用设置”只包含外观设置，“编辑档案”包含所有其他设置"
        ]
    },
    {
        "body": "ClassIsland 的“组件配置方案”保存在哪里？",
        "correct_choices": [
            "应用配置目录下的 Islands 文件夹中",
            "Config/Islands/ 目录下"
        ],
        "incorrect_choices": [
            "应用的安装目录下",
            "用户的文档文件夹中",
            "Windows 注册表中",
            "云端服务器上"
        ]
    },
    {
        "body": "ClassIsland 的提醒系统，如果全局的“允许启用提醒音效”未勾选，但某个提醒来源的特殊高级设置中勾选了“启用提醒音效”，该提醒来源的提醒会播放音效吗？",
        "correct_choices": [
            "不会，全局的“允许”开关优先级更高",
            "全局“允许”开关控制所有提醒来源是否可以播放音效"
        ],
        "incorrect_choices": [
            "会，单个提醒来源的设置覆盖全局设置",
            "会，但音量会减半",
            "只有在连接了耳机时才会播放",
            "取决于提醒的紧急程度"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中一个单元格同时包含了多个科目的名称（例如“语文/数学”），会如何处理？",
        "correct_choices": [
            "通常只会识别第一个匹配到的科目名称（如“语文”）",
            "可能需要用户在导入后手动调整或拆分"
        ],
        "incorrect_choices": [
            "会自动将该时间点拆分为两个课程",
            "会提示用户选择其中一个科目",
            "会忽略这个单元格",
            "会创建一个名为“语文/数学”的新科目"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置底”时，主界面是否会被其他置顶窗口（如任务管理器）覆盖？",
        "correct_choices": [
            "是的，置底意味着主界面在Z轴顺序上低于大多数普通窗口和置顶窗口",
            "会被其他置顶窗口覆盖"
        ],
        "incorrect_choices": [
            "不会，置底的优先级高于其他应用的置顶",
            "主界面会自动调整透明度以避免完全遮挡",
            "只有在播放提醒特效时才会被覆盖",
            "取决于屏幕分辨率"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 中禁用了所有提醒提供方，会发生什么？",
        "correct_choices": [
            "应用将不会发出任何自动提醒（如上下课提醒、天气提醒等）",
            "主界面上可能不会再显示任何提醒信息"
        ],
        "incorrect_choices": [
            "应用会自动启用默认的提醒提供方",
            "提醒功能会被锁定，无法再次启用",
            "只会禁用插件提供的提醒，内置提醒不受影响",
            "提醒会以静默方式（无声音、无特效）显示"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“规则集”的“并且（AND）”模式和“或者（OR）”模式有什么区别？",
        "correct_choices": [
            "“并且”模式要求规则组内的所有规则都满足，该规则组才算满足",
            "“或者”模式要求规则组内的任意一个规则满足，该规则组就算满足"
        ],
        "incorrect_choices": [
            "“并且”模式只能添加两个规则，“或者”模式可以添加多个",
            "“或者”模式的执行速度比“并且”模式快",
            "“并且”模式用于判断条件是否同时不满足，“或者”模式用于判断是否不同时满足",
            "两者没有实际区别，只是名称不同"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户设置了一个结束时间早于开始时间的时间点，会发生什么？",
        "correct_choices": [
            "这通常是不合法的设置，可能导致课表逻辑混乱",
            "主界面可能无法正确显示该时间点或后续时间点"
        ],
        "incorrect_choices": [
            "应用会自动将开始时间和结束时间对调",
            "该时间点会被视为跨天时间点",
            "应用会忽略该时间点",
            "会弹出一个错误提示，阻止保存"
        ]
    },
    {
        "body": "ClassIsland 的“从壁纸提取主题色”功能，如果用户使用的是幻灯片壁纸，提取到的颜色会是？",
        "correct_choices": [
            "当前正在显示的壁纸图片的主题色",
            "如果开启了自动提取，颜色会随壁纸切换而更新"
        ],
        "incorrect_choices": [
            "所有幻灯片图片的平均色",
            "第一张幻灯片图片的主题色",
            "无法提取颜色，会使用默认主题色",
            "会提取屏幕上固定区域的颜色"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”中，如果一个插件显示“需要重启”，意味着什么？",
        "correct_choices": [
            "该插件刚刚被安装、更新或卸载（标记为将要卸载）",
            "需要重启 ClassIsland 应用才能使插件的更改完全生效"
        ],
        "incorrect_choices": [
            "该插件与当前版本的 ClassIsland 不兼容",
            "该插件存在严重的 Bug，需要开发者修复",
            "该插件正在下载中",
            "该插件是一个系统级插件，需要重启电脑"
        ]
    },
    {
        "body": "ClassIsland 的“教学安全模式”在什么情况下会被触发（如果用户启用了该功能）？",
        "correct_choices": [
            "当应用发生意外崩溃时",
            "当应用遇到无法处理的严重错误时"
        ],
        "incorrect_choices": [
            "每次应用启动时",
            "当检测到系统资源不足时",
            "当用户尝试修改核心配置文件时",
            "在进行应用更新前"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果删除了一个科目，对已使用该科目的课表有什么影响？",
        "correct_choices": [
            "课表中原先使用该科目的课程会变为空白或显示错误",
            "用户需要手动为这些课程重新选择科目"
        ],
        "incorrect_choices": [
            "应用会自动将这些课程替换为“自习”科目",
            "对应的课表也会被一并删除",
            "该科目会被标记为“已弃用”，但仍可显示",
            "不会有任何影响，课表会自动适应"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”功能，如果用户设置了“自动时间偏移”，例如每天增加1秒，其目的是什么？",
        "correct_choices": [
            "逐步抵消学校铃声系统可能存在的每日固定偏差（如每天快或慢若干秒）",
            "保持 ClassIsland 的时间与学校铃声的长期同步"
        ],
        "incorrect_choices": [
            "让课程时间一天比一天长",
            "模拟夏令时或冬令时的调整",
            "用于测试应用在不同时间下的行为",
            "这是一个彩蛋功能，没有实际用途"
        ]
    },
    {
        "body": "ClassIsland 核心库（ClassIsland.Core.dll）使用的开源许可证是什么？",
        "correct_choices": [
            "LGPLv3",
            "GNU Lesser General Public License v3.0"
        ],
        "incorrect_choices": [
            "GPLv3",
            "MIT License",
            "Apache License 2.0",
            "BSD License"
        ]
    },
    {
        "body": "ClassIsland 的“组件配置方案”功能，如果用户创建了多个方案，如何切换？",
        "correct_choices": [
            "在【应用设置】->【组件】页面的右上角下拉框中选择",
            "通过自动化行动“组件配置方案”进行切换"
        ],
        "incorrect_choices": [
            "在主界面的托盘菜单中切换",
            "通过修改应用的启动参数切换",
            "每个方案对应一个独立的配置文件，需要手动替换",
            "只能在安装时选择，之后无法切换"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果一个提醒的“遮罩（Mask）”显示时长设置为0，会发生什么？",
        "correct_choices": [
            "遮罩阶段会被跳过，如果设置了正文内容，则直接显示正文",
            "如果同时正文内容也为空或显示时长为0，则该提醒可能不会显示任何内容"
        ],
        "incorrect_choices": [
            "遮罩会无限期显示，直到手动清除",
            "应用会使用默认的遮罩显示时长（5秒）",
            "会弹出一个错误提示",
            "该提醒请求会被忽略"
        ]
    },
    {
        "body": "ClassIsland 的“临时层课表”的“源课表ID”指的是什么？",
        "correct_choices": [
            "创建这个临时层时所基于的原始课表的ID",
            "用于在临时层与原始课表之间建立关联"
        ],
        "incorrect_choices": [
            "创建临时层的用户的ID",
            "临时层课表自身的ID",
            "生成临时层的时间戳",
            "一个随机生成的标识符，没有实际意义"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中时间单元格的格式为“上午8点”而非“8:00”，导入功能能否正确识别？",
        "correct_choices": [
            "可能无法正确识别，推荐使用标准的HH:mm或HH:mm:ss格式",
            "识别成功率较低，建议规范时间格式"
        ],
        "incorrect_choices": [
            "完全可以正确识别，内置了强大的自然语言处理能力",
            "会自动转换为“8:00 AM”格式并识别",
            "会忽略这些单元格，导致时间点缺失",
            "会提示用户手动更正每个不规范的时间单元格"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，是否会覆盖所有其他置顶窗口（如某些安全软件的浮窗）？",
        "correct_choices": [
            "不一定，取决于其他窗口的置顶级别和实现方式",
            "通常能覆盖大多数普通窗口，但对其他强置顶窗口效果不确定"
        ],
        "incorrect_choices": [
            "是的，ClassIsland 的置顶级别是最高的",
            "只有在播放提醒特效时才会尝试覆盖其他置顶窗口",
            "不会覆盖任何其他置顶窗口",
            "需要管理员权限才能覆盖其他置顶窗口"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”中的插件信息（如版本号、描述）来源于哪里？",
        "correct_choices": [
            "插件开发者在其插件的清单文件（manifest.yml）中定义的信息",
            "ClassIsland 官方维护的插件索引库中的元数据"
        ],
        "incorrect_choices": [
            "从插件的DLL文件中自动提取",
            "用户对插件的评价和评论",
            "插件的 GitHub 仓库的 README 文件",
            "微软的 NuGet 包管理器"
        ]
    },
    {
        "body": "ClassIsland 的“回声洞”功能，如果用户不希望看到，可以如何操作？",
        "correct_choices": [
            "在【应用设置】->【关于】页面，不去点击触发它的区域",
            "如果已被集控策略禁用，则该功能不会显示"
        ],
        "incorrect_choices": [
            "在【外观】设置中关闭“显示回声洞”选项",
            "卸载“回声洞”组件",
            "修改应用的配置文件，禁用该功能",
            "无法关闭，是应用的内置特性"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“课表”关联的“时间表ID”不存在或无效，会发生什么？",
        "correct_choices": [
            "该课表在加载时可能会出错，无法正确显示课程和时间",
            "主界面可能显示“（无课表）”或表现异常"
        ],
        "incorrect_choices": [
            "应用会自动创建一个新的默认时间表并关联到该课表",
            "该课表会被自动删除",
            "应用会提示用户选择一个新的时间表",
            "该课表会使用上一个成功加载的课表的时间表"
        ]
    },
    {
        "body": "ClassIsland 的“组件”设置中，“按规则隐藏”的规则集是如何判断的？",
        "correct_choices": [
            "根据预设的规则条件（如当前时间、窗口状态等）进行逻辑判断",
            "当规则集的所有条件（或任一条件，取决于模式）满足时，规则集判定为真"
        ],
        "incorrect_choices": [
            "根据组件的名称或ID进行匹配",
            "由用户手动点击按钮触发判断",
            "基于机器学习模型对当前场景进行分析",
            "随机判断"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果备份过程中应用意外关闭，会发生什么？",
        "correct_choices": [
            "当次备份可能会不完整或损坏",
            "应用下次启动时可能会尝试重新备份（取决于上次备份时间）"
        ],
        "incorrect_choices": [
            "已备份的部分会自动回滚",
            "应用会自动从云端恢复最近一次的成功备份",
            "会锁定所有配置文件，直到手动修复",
            "不会有任何影响，备份是原子操作"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中的“分割线”时间点，是否可以设置持续时长？",
        "correct_choices": [
            "不可以，分割线是一个瞬时的时间点，没有持续时长",
            "其开始时间和结束时间通常设置为相同"
        ],
        "incorrect_choices": [
            "可以，默认为5分钟，可以自定义",
            "其持续时长代表了两个课时之间的长休息时间",
            "持续时长决定了分割线的粗细",
            "是的，并且可以播放一段简短的音效"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，如果一个插件依赖了特定版本的 ClassIsland.Core.dll，而当前 ClassIsland 使用了不兼容的版本，会发生什么？",
        "correct_choices": [
            "插件可能无法加载，或在运行时出现错误",
            "插件列表可能会显示该插件加载失败"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动降级或升级其核心库以兼容插件",
            "插件会自动下载并使用其兼容的 ClassIsland.Core.dll 版本",
            "不会有任何问题，插件会自动适配所有版本的核心库",
            "ClassIsland 会提示用户更新插件或应用本体"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个行动（如“运行程序”）执行失败，会如何影响后续行动的执行？",
        "correct_choices": [
            "默认情况下，后续行动会继续尝试执行",
            "行动的错误信息会记录在该行动上，供用户查看"
        ],
        "incorrect_choices": [
            "整个自动化流程会立即停止",
            "应用会尝试重新执行失败的行动三次",
            "会弹出一个错误对话框，等待用户处理",
            "后续行动会被跳过，直到下一个触发器触发"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果用户希望某个组件（如“天气简报”）始终显示在主界面的最右侧，应该如何设置？",
        "correct_choices": [
            "在“组件设置”页面，将该组件拖动到组件栏的最右侧",
            "调整组件的“水平对齐方式”为“右对齐”（如果该组件支持的话）"
        ],
        "incorrect_choices": [
            "修改该组件的“相对行号”为一个很大的负数",
            "在配置文件中手动编辑组件的坐标",
            "该功能无法实现，组件位置是固定的",
            "使用自动化功能在每次启动时设置组件位置"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”设置，如果设置为0，意味着什么？",
        "correct_choices": [
            "ClassIsland 的内部计时与标准时间（NTP或系统时间）完全一致",
            "不进行任何人为的时间调整"
        ],
        "incorrect_choices": [
            "禁用时间显示功能",
            "所有课程的时间都会显示为00:00",
            "应用会随机选择一个时间偏移量",
            "时间会停止流动"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，用户可以执行哪些操作？",
        "correct_choices": [
            "从之前的备份恢复应用配置",
            "清除应用的临时文件和缓存",
            "重置应用的部分或全部设置",
            "以安全模式或诊断模式启动应用"
        ],
        "incorrect_choices": [
            "卸载并重装 .NET 运行时",
            "修复 Windows 操作系统文件",
            "扫描并清除电脑病毒",
            "格式化硬盘并重装系统"
        ]
    },
    {
        "body": "ClassIsland 的“禁止编辑应用设置”集控策略会影响哪些设置的修改？",
        "correct_choices": [
            "外观设置，如主题、颜色、字体等",
            "窗口设置，如停靠位置、层级等",
            "提醒设置，如音效、语音等",
            "常规设置，如开机自启、时间同步等"
        ],
        "incorrect_choices": [
            "课表内容和时间表安排",
            "已安装插件的启用和禁用",
            "应用的更新检查和下载",
            "用户登录凭据和密码"
        ]
    },
    {
        "body": "ClassIsland 的“课表群”中，“临时课表群”的“覆盖”模式和“继承”模式有什么主要区别？",
        "correct_choices": [
            "“覆盖”模式下，仅加载临时课表群和全局课表群的课表",
            "“继承”模式下，会先尝试加载临时课表群的课表，若无匹配，则会尝试加载原先选中的课表群和全局课表群的课表"
        ],
        "incorrect_choices": [
            "“覆盖”模式会删除原先的课表，“继承”模式不会",
            "“继承”模式只对当天有效，“覆盖”模式可以设置有效期",
            "“覆盖”模式需要管理员权限，“继承”模式不需要",
            "两者没有实际区别，只是描述不同"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中包含合并单元格，可能会对导入结果产生什么影响？",
        "correct_choices": [
            "可能导致时间点或课程信息解析不准确",
            "建议在导入前取消表格中的单元格合并",
            "导入向导可能会提示用户注意合并单元格问题"
        ],
        "incorrect_choices": [
            "应用会自动拆分合并单元格并正确识别",
            "合并单元格会被完全忽略",
            "导入过程会因此失败并报错",
            "只会导入合并单元格中的第一个单元格内容"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，如果打开了一个全屏应用（如PPT放映），主界面会怎样？",
        "correct_choices": [
            "如果“隐藏窗口-前台是全屏窗口时”未勾选，主界面会尝试显示在全屏应用之上",
            "主界面会保持置顶状态，可能会覆盖部分全屏内容"
        ],
        "incorrect_choices": [
            "主界面会自动隐藏",
            "主界面会自动切换到“置底”模式",
            "主界面会缩小并停靠在屏幕边缘",
            "应用会提示用户退出全屏模式"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”中的插件，其安全性由谁负责？",
        "correct_choices": [
            "主要由插件开发者负责",
            "用户自行判断和承担风险，ClassIsland 开发团队不保证市场插件的绝对安全"
        ],
        "incorrect_choices": [
            "ClassIsland 开发团队会对所有插件进行严格的安全审查",
            "微软公司负责审查所有 .NET 应用的插件",
            "GitHub 平台会自动扫描并移除恶意插件",
            "所有插件都是绝对安全的，无需担心"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“科目”被多个“课表”使用，修改这个科目的“科任老师”信息，会如何影响这些课表？",
        "correct_choices": [
            "所有使用这个科目的课表，在显示该科目时都会显示更新后的科任老师信息",
            "科目的信息是共享的，一处修改，处处生效"
        ],
        "incorrect_choices": [
            "只有当前编辑的课表会更新，其他课表不受影响",
            "应用会为每个课表创建一个科目的副本，修改互不影响",
            "修改后需要手动将更改应用到每个课表",
            "无法修改被多个课表使用的科目的信息"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“运行程序”行动可以执行哪些类型的目标？",
        "correct_choices": [
            "本地应用程序（.exe 文件）",
            "网址（会自动使用默认浏览器打开）",
            "CMD 命令"
        ],
        "incorrect_choices": [
            "Python 脚本（没有预装Python环境的情况下）",
            "手机 App",
            "ClassIsland 插件（除非插件提供了可执行文件或URI）",
            "Windows 系统服务"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”的时间轴视图中，如果两个时间点之间存在重叠，会发生什么？",
        "correct_choices": [
            "这通常是不推荐的设置，可能导致课表逻辑混乱和显示异常",
            "应用可能无法正确判断当前处于哪个时间点"
        ],
        "incorrect_choices": [
            "应用会自动调整时间点，消除重叠",
            "重叠部分的时间点会被忽略",
            "会弹出一个警告提示，但允许保存",
            "重叠部分会同时显示两个时间点的信息"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果用户手动修改了备份文件夹中的文件，会对自动备份流程产生什么影响？",
        "correct_choices": [
            "自动备份流程可能会覆盖用户的手动修改（如果文件名符合自动备份的命名规则且在清理范围内）",
            "建议不要手动修改自动备份的文件"
        ],
        "incorrect_choices": [
            "自动备份会检测到文件被修改并跳过该备份的覆盖",
            "应用会提示用户确认是否保留手动修改",
            "自动备份会失败并报错",
            "手动修改会自动同步到应用的当前配置中"
        ]
    },
    {
        "body": "在 ClassIsland 中，如果用户希望在所有课间休息时间点都显示一个相同的自定义名称（例如“大课间”），应该如何操作？",
        "correct_choices": [
            "在对应时间表的每个课间休息时间点上，手动设置“课间名称”为“大课间”",
            "如果所有课表共用一个时间表，则只需修改这个时间表"
        ],
        "incorrect_choices": [
            "在全局应用设置中设置“默认课间名称”",
            "创建一个名为“大课间”的科目，并将其用于所有课间休息",
            "使用自动化功能，在每个课间休息时修改主界面显示",
            "无法实现，课间名称是固定的"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，如果一个已安装的插件与其依赖的另一个插件版本不兼容，可能会发生什么？",
        "correct_choices": [
            "该插件可能无法加载或在运行时出错",
            "ClassIsland 在启动时可能会显示插件加载错误的信息"
        ],
        "incorrect_choices": [
            "应用会自动下载并安装兼容版本的依赖插件",
            "不兼容的插件会被自动禁用",
            "不会有任何问题，插件会自动解决版本冲突",
            "ClassIsland 会提示用户手动解决依赖冲突"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的触发器（如“上课时”）被触发，但其关联的“规则集”未满足，会发生什么？",
        "correct_choices": [
            "如果工作流的“启用条件判定”被勾选，则行动不会被执行",
            "如果“启用条件判定”未勾选，则行动会被执行，忽略规则集"
        ],
        "incorrect_choices": [
            "行动总是会被执行，规则集只用于控制恢复行为",
            "规则集总会覆盖触发器的状态，如果规则不满足，触发器不会被视为触发",
            "应用会弹出一个对话框询问用户是否执行行动",
            "该工作流会被自动禁用，直到规则集满足"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如“课程表”，在显示多节课时，如果空间不足，会如何处理？",
        "correct_choices": [
            "通常会以折叠方式（如显示科目简称）显示非当前课程",
            "用户可以通过调整组件宽度或界面缩放来改善显示效果"
        ],
        "incorrect_choices": [
            "会自动换行显示",
            "会隐藏部分课程，只显示当前和下一节课",
            "会自动缩小字体以适应空间",
            "会弹出一个滚动条供用户查看"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”设置，如果设置为一个很大的正值（例如3600秒），会导致什么现象？",
        "correct_choices": [
            "ClassIsland 内部计时会比标准时间（NTP或系统时间）晚一个小时",
            "课表和提醒的触发时间会整体延后一个小时"
        ],
        "incorrect_choices": [
            "所有课程的持续时间会增加一个小时",
            "应用会认为当前时间是明天",
            "主界面会显示一个错误的时间",
            "时间流速会变慢"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，“重置应用设置”选项会影响哪些数据？",
        "correct_choices": [
            "应用的全局设置（Settings.json）",
            "不影响档案、组件、自动化、插件等的配置"
        ],
        "incorrect_choices": [
            "所有用户的课表数据",
            "已安装的插件及其配置",
            "应用的更新历史和缓存文件",
            "Windows 注册表中与 ClassIsland 相关的条目"
        ]
    },
    {
        "body": "ClassIsland 的“禁止编辑课表”集控策略是否会影响“临时换课”功能？",
        "correct_choices": [
            "通常不会影响，临时换课和启用临时课表功能一般不受此策略限制",
            "用户仍然可以通过临时换课调整当天的课程安排（如果未被其他策略限制）"
        ],
        "incorrect_choices": [
            "是的，用户将无法进行任何形式的课表调整",
            "只允许管理员进行临时换课",
            "临时换课后无法保存",
            "临时换课功能会被隐藏"
        ]
    },
    {
        "body": "ClassIsland 的“组件”配置文件（例如 Default.json）中，如果一个组件的ID无法在已注册组件中找到，会发生什么？",
        "correct_choices": [
            "该组件可能无法在主界面上正确显示",
            "主界面可能会显示一个表示组件加载失败的占位符或错误信息",
            "用户可能需要在组件设置页面重新选择或删除该组件"
        ],
        "incorrect_choices": [
            "应用会自动从插件市场下载并安装对应的组件",
            "该组件会被自动替换为默认的“文本组件”",
            "配置文件会被视为损坏并恢复到默认值",
            "不会有任何影响，应用会自动忽略无法识别的组件ID"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，“主题色来源”选择“系统”时，应用会提取哪个颜色作为主题色？",
        "correct_choices": [
            "Windows 系统设置中的“强调色”",
            "用户在个性化设置中选择的系统主题颜色"
        ],
        "incorrect_choices": [
            "当前桌面壁纸的主要颜色",
            "当前活动窗口的标题栏颜色",
            "固定使用 ClassIsland 的默认蓝色主题",
            "随机选择一种预设的颜色"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“显示天气提醒”行动，如果当前没有气象预警，但行动设置为显示“气象预警”，会发生什么？",
        "correct_choices": [
            "该行动执行时可能不会显示任何提醒",
            "如果配置了其他类型的天气提醒（如预报），可能会显示那些内容（取决于具体实现）"
        ],
        "incorrect_choices": [
            "会显示“当前无预警”的提示信息",
            "会自动切换到显示“三天天气预报”",
            "应用会报错并停止自动化流程",
            "会强制从天气服务器获取最新的预警信息并显示"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户在一个时间点内又错误地添加了另一个时间点（导致时间重叠），应用会如何处理？",
        "correct_choices": [
            "应用通常允许这种操作，但可能导致课表逻辑混乱和显示异常",
            "用户需要手动调整时间点以解决重叠问题",
            "保存后，主界面在显示到重叠时间段时可能行为不可预测"
        ],
        "incorrect_choices": [
            "应用会自动阻止添加导致重叠的时间点",
            "重叠的时间点会被自动合并",
            "较早的时间点会被自动缩短以适应新的时间点",
            "应用会弹出一个错误提示并强制用户修改"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果备份时磁盘空间不足，会发生什么？",
        "correct_choices": [
            "备份过程可能会失败",
            "应用可能会在日志中记录错误信息"
        ],
        "incorrect_choices": [
            "应用会自动压缩旧的备份文件以腾出空间",
            "会提示用户清理磁盘空间并重试",
            "自动备份功能会被临时禁用",
            "会只备份最重要的配置文件（如Settings.json）"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，如果用户手动删除了插件文件夹中的某个核心 .dll 文件，该插件会怎样？",
        "correct_choices": [
            "该插件在下次启动 ClassIsland 时很可能加载失败或报错",
            "插件的功能可能会部分或完全失效"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动从插件市场下载并修复该文件",
            "该插件会自动回滚到上一个稳定版本",
            "不会有任何影响，插件有自愈能力",
            "系统会提示用户重新安装该插件"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个行动（如“修改应用主题”）被触发，并且之后规则不再满足且“启用恢复”被勾选，那么应用主题会变回什么状态？",
        "correct_choices": [
            "变回该行动触发前的应用主题状态",
            "恢复到该自动化流程执行前的原始主题"
        ],
        "incorrect_choices": [
            "变回系统默认主题",
            "变回 ClassIsland 的默认主题",
            "保持行动修改后的主题不变",
            "随机选择一个主题"
        ]
    },
    {
        "body": "ClassIsland 主界面上的“日期”组件，其显示的日期格式（例如“周三 07/26”）是否可以自定义？",
        "correct_choices": [
            "目前版本中，日期组件的显示格式是固定的",
            "用户无法直接在设置中修改其详细格式"
        ],
        "incorrect_choices": [
            "可以在【外观】设置中选择多种预设格式",
            "可以通过修改系统区域设置来改变格式",
            "可以通过插件实现自定义日期格式",
            "可以在组件的高级设置中输入自定义的日期格式化字符串"
        ]
    },
    {
        "body": "如果用户将 ClassIsland 的安装文件夹整体移动到新的路径，之前设置的“开机自启”是否会失效？",
        "correct_choices": [
            "很可能会失效，因为自启动项通常指向的是原路径的可执行文件",
            "用户需要在新路径重新设置开机自启"
        ],
        "incorrect_choices": [
            "不会失效，自启动项会自动更新路径",
            "只有管理员权限的移动才会导致失效",
            "ClassIsland 会在启动时自动修复自启动项",
            "取决于移动的距离，同分区内移动通常不受影响"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，“重置全部配置”和“重置全部信息”有什么主要区别？",
        "correct_choices": [
            "“重置全部配置”会重置应用设置、组件配置等，但不影响档案数据",
            "“重置全部信息”会删除包括档案在内的所有用户数据，恢复到安装前的状态"
        ],
        "incorrect_choices": [
            "两者没有区别，是同一操作的不同名称",
            "“重置全部配置”只影响外观设置，“重置全部信息”影响所有设置",
            "“重置全部信息”会卸载应用，“重置全部配置”不会",
            "“重置全部配置”需要联网，“重置全部信息”不需要"
        ]
    },
    {
        "body": "ClassIsland 的“集控”功能中，如果客户端无法连接到集控服务器或清单文件，会发生什么？",
        "correct_choices": [
            "ClassIsland 可能会使用本地缓存的集控配置（如果有的话）",
            "如果没有任何本地缓存，集控功能可能无法正常工作，应用表现可能类似未加入集控的状态"
        ],
        "incorrect_choices": [
            "应用会自动切换到“离线模式”，并允许用户自由编辑所有配置",
            "应用会报错并强制退出",
            "会使用内置的演示课表和设置",
            "会提示用户输入管理员密码以进入单机模式"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如果设置了“最小宽度”和“最大宽度”，当内容实际宽度超出这个范围时，会发生什么？",
        "correct_choices": [
            "如果内容宽度小于最小宽度，组件宽度会保持在最小宽度",
            "如果内容宽度大于最大宽度，组件宽度会被限制在最大宽度，内容可能会被截断或出现滚动条（取决于组件实现）"
        ],
        "incorrect_choices": [
            "组件会自动调整最小/最大宽度以适应内容",
            "设置会被忽略，组件始终根据内容自动调整宽度",
            "应用会弹出一个错误提示",
            "组件会变为半透明以提示用户宽度设置问题"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果两个不同的工作流都设置了在“上课时”触发，并且都修改了同一个应用设置（例如主界面透明度），哪个设置会最终生效？",
        "correct_choices": [
            "取决于工作流的执行顺序（在自动化列表中的顺序，从上到下）以及行动的执行顺序，后执行的行动会覆盖先执行的行动对同一设置的修改",
            "如果两个工作流同时修改，结果可能难以预测，取决于内部处理顺序，但通常是列表中靠后的或行动顺序靠后的优先"
        ],
        "incorrect_choices": [
            "应用会随机选择一个工作流的设置生效",
            "会弹出一个冲突解决对话框让用户选择",
            "两个设置会叠加生效（例如透明度会相乘）",
            "先创建的工作流的设置优先"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换偏移”设置是用来做什么的？",
        "correct_choices": [
            "调整当前周在多周轮换（如单双周、三周轮换）中的起始位置",
            "用于校准应用的周计数与学校实际的轮换周数"
        ],
        "incorrect_choices": [
            "设置每周的开始是周一还是周日",
            "调整夏令时和冬令时的时间偏移",
            "设置每个月的第一周是哪一天",
            "用于在不同学期之间切换课表"
        ]
    },
    {
        "body": "如果 ClassIsland 的提醒音效无法播放，可能的原因有哪些？",
        "correct_choices": [
            "全局或该提醒来源的“启用提醒音效”选项未勾选",
            "自定义音效路径设置错误或文件损坏",
            "系统音量被静音或设置过低",
            "声卡驱动程序出现问题"
        ],
        "incorrect_choices": [
            "应用未连接到互联网",
            "未安装 .NET 音频解码包",
            "提醒特效功能被禁用",
            "电脑的 CPU 性能不足"
        ]
    },
    {
        "body": "ClassIsland 的“调试菜单”中，“垃圾回收”选项的作用是什么？",
        "correct_choices": [
            "手动触发 .NET 的垃圾回收机制，尝试释放不再使用的内存",
            "用于测试或观察应用的内存使用情况"
        ],
        "incorrect_choices": [
            "清理应用的缓存文件和临时文件",
            "删除过期的课表和时间表",
            "重置应用的所有设置为默认值",
            "扫描并清除系统中的垃圾文件"
        ]
    },
    {
        "body": "ClassIsland 支持的插件包文件扩展名是什么？",
        "correct_choices": [
            ".cipx"
        ],
        "incorrect_choices": [
            ".dll",
            ".zip",
            ".plugin",
            ".jar"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”中，如果在“科目”级别和“时间点”级别都为某个提醒（如“上课提醒”）启用了附加设置，哪个设置会优先生效？",
        "correct_choices": [
            "“科目”级别的设置会优先生效",
            "优先级顺序为：科目 > 时间点 > 课表 > 时间表 > 全局设置"
        ],
        "incorrect_choices": [
            "“时间点”级别的设置会优先生效",
            "两个设置会合并生效",
            "取决于哪个设置最后被修改",
            "应用会提示用户选择一个"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中使用了特殊的字体或格式，导入时会发生什么？",
        "correct_choices": [
            "应用可能会提示格式不兼容，并询问是否以兼容模式打开",
            "以兼容模式打开时，会尝试移除不兼容的格式和字体",
            "如果无法处理，可能会导致导入失败或部分内容丢失"
        ],
        "incorrect_choices": [
            "所有字体和格式都会被完美保留",
            "应用会自动下载并安装缺失的字体",
            "特殊格式会被转换成图片嵌入到课表中",
            "只会导入纯文本内容，忽略所有格式"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，如果用户打开了另一个也设置为“置顶”的应用程序（如录屏软件的悬浮窗），哪个窗口会显示在最前面？",
        "correct_choices": [
            "通常是后获取到“置顶”焦点的窗口会显示在最前面",
            "行为可能因操作系统版本和具体应用实现而异，不完全确定"
        ],
        "incorrect_choices": [
            "ClassIsland 的窗口永远在最前面",
            "另一个应用程序的窗口永远在最前面",
            "两个窗口会交替闪烁",
            "系统会强制其中一个窗口取消置顶"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的“插件市场”下载了一个插件，但没有重启 ClassIsland，这个插件会立即生效吗？",
        "correct_choices": [
            "通常不会立即生效，需要重启 ClassIsland 才能加载新安装的插件",
            "插件列表可能会显示该插件“需要重启”"
        ],
        "incorrect_choices": [
            "是的，插件会动态加载并立即生效",
            "只有部分轻量级插件会立即生效",
            "需要手动在设置中启用该插件，然后立即生效",
            "取决于插件的类型，界面插件会立即生效，功能插件需要重启"
        ]
    },
    {
        "body": "ClassIsland 的“附加设置”中，“默认隐藏”选项通常用于哪种类型的时间点？",
        "correct_choices": [
            "上课类型的时间点",
            "希望仅在当前时间处于该时间点时才显示的时间点"
        ],
        "incorrect_choices": [
            "课间休息类型的时间点（课间休息默认在非当前时段隐藏）",
            "分割线类型的时间点",
            "行动类型的时间点",
            "所有类型的时间点都可以设置"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中，“分割线”时间点是否可以设置“默认科目”？",
        "correct_choices": [
            "不可以，分割线时间点不代表课程，没有科目概念",
            "该选项对分割线无效"
        ],
        "incorrect_choices": [
            "可以，用于标记该分割线属于哪个科目时段",
            "可以，但只在时间轴视图中显示",
            "可以，但会被自动忽略",
            "只能设置为“无科目”"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果备份文件过多导致磁盘空间不足，用户应该如何处理？",
        "correct_choices": [
            "手动删除一部分较旧的自动备份文件或不重要的手动备份文件",
            "在 ClassIsland 设置中调整“自动备份上限”，减少保留的备份数量",
            "清理磁盘上其他不必要的文件以释放空间"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动压缩备份文件以节省空间",
            "应用会自动暂停自动备份功能",
            "需要购买更大的硬盘",
            "卸载并重装 ClassIsland"
        ]
    },
    {
        "body": "ClassIsland 的“组件设置”页面中，如果一个组件被标记为“容器组件”，它通常具有哪些特性？",
        "correct_choices": [
            "可以在其内部添加和管理其他子组件",
            "其设置界面通常会包含一个用于管理子组件的列表或区域"
        ],
        "incorrect_choices": [
            "该组件的性能会比普通组件更好",
            "该组件只能单独占满主界面的一行",
            "该组件的设置项会比普通组件少",
            "该组件是 ClassIsland 的核心组件，无法删除"
        ]
    },
    {
        "body": "ClassIsland 的“精确时间服务”，如果用户所在的网络环境屏蔽了NTP协议（UDP端口123），会发生什么？",
        "correct_choices": [
            "无法从NTP服务器同步时间，会回退到使用本地系统时间",
            "“同步状态信息”会显示连接失败或超时"
        ],
        "incorrect_choices": [
            "应用会自动切换到使用HTTP协议进行时间同步",
            "会弹出一个防火墙警告",
            "ClassIsland 会无法正常启动",
            "时间显示会冻结在上一次成功同步的时间"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换偏移”设置，如果设置为与学校实际周数不符，会导致什么问题？",
        "correct_choices": [
            "按多周轮换规则启用的课表可能在错误的一周加载",
            "例如，单周的课表可能在双周显示，反之亦然"
        ],
        "incorrect_choices": [
            "所有课表都将无法加载",
            "主界面会显示错误的日期",
            "应用会自动校准偏移量",
            "提醒功能会失效"
        ]
    },
    {
        "body": "ClassIsland 的提醒设置中，如果“提醒特效渲染精度”设置得过高，而电脑性能不足，可能会出现什么情况？",
        "correct_choices": [
            "提醒特效播放时可能会卡顿或掉帧",
            "应用在播放特效时可能会占用较高的CPU或GPU资源"
        ],
        "incorrect_choices": [
            "提醒特效会自动降低到合适的精度",
            "提醒特效会被禁用",
            "电脑会蓝屏重启",
            "提醒音效会失真"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的“规则集”包含多个“规则组”，且规则集的模式为“或者（OR）”，那么工作流的条件何时满足？",
        "correct_choices": [
            "当任意一个规则组的条件满足时",
            "只要有一个规则组判定为真，整个规则集的条件就满足"
        ],
        "incorrect_choices": [
            "当所有规则组的条件都满足时",
            "当至少一半的规则组条件满足时",
            "当第一个规则组的条件满足时，后续规则组不再判断",
            "规则组的满足状态与规则集的模式无关"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果将一个“课间休息”时间点的“课间名称”设置为空，它在主界面上会如何显示？",
        "correct_choices": [
            "显示为“课间休息”",
            "使用默认的课间名称"
        ],
        "incorrect_choices": [
            "显示为空白，不显示任何文字",
            "显示为上一个课程的科目名称",
            "该时间点会被隐藏",
            "应用会提示输入课间名称"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中某一天的课程特别多，超出了时间表中定义的上课时间点数量，多余的课程会如何处理？",
        "correct_choices": [
            "多余的课程通常无法被正确匹配和导入",
            "用户可能需要在导入后手动调整时间表或课表"
        ],
        "incorrect_choices": [
            "应用会自动在时间表中增加相应数量的时间点",
            "多余的课程会被合并到最后一个时间点",
            "会忽略这些多余的课程",
            "导入会失败并提示错误"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置底”时，如果用户打开了多个普通窗口（非置顶），主界面会显示在哪里？",
        "correct_choices": [
            "显示在所有这些普通窗口的后方",
            "像桌面壁纸一样，位于最底层"
        ],
        "incorrect_choices": [
            "显示在当前活动窗口的后方，但位于其他非活动窗口的前方",
            "会随机显示在某个窗口的后方",
            "会自动隐藏",
            "会根据窗口数量自动调整层级"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的插件市场下载并安装了一个新插件，但该插件与现有的某个插件功能冲突，可能会发生什么？",
        "correct_choices": [
            "应用可能会出现不可预料的行为或错误",
            "某个插件的功能可能无法正常工作",
            "用户可能需要禁用或卸载其中一个冲突的插件"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动检测并解决冲突",
            "后安装的插件会自动覆盖先安装的插件的功能",
            "应用会提示用户选择保留哪个插件的功能",
            "两个插件会自动协同工作，不会产生冲突"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，“清除临时文件”选项会删除哪些类型的文件？",
        "correct_choices": [
            "应用缓存文件",
            "应用的临时文件，如更新下载的临时包、Excel导入的临时副本等"
        ],
        "incorrect_choices": [
            "用户的课表档案文件",
            "应用的设置文件（Settings.json）",
            "已安装的插件文件",
            "Windows 系统的临时文件"
        ]
    },
    {
        "body": "ClassIsland 的“集控”功能中，如果管理员更新了策略文件（policy.json）并提高了版本号，客户端的 ClassIsland 实例会如何响应？",
        "correct_choices": [
            "在下次检查更新或收到更新通知时，会自动下载并应用新的策略文件",
            "客户端的功能限制和行为可能会根据新策略发生改变"
        ],
        "incorrect_choices": [
            "客户端需要用户手动确认才能应用新策略",
            "客户端会忽略版本号较低的策略文件更新",
            "策略文件只在首次加入集控时加载，之后不再更新",
            "客户端会弹出一个对话框，显示策略变更的详细内容"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如果设置了“固定宽度”为一个较小的值，而组件内容较多，会导致什么显示效果？",
        "correct_choices": [
            "组件的宽度会被限制在该固定值",
            "组件内的内容可能会被截断或换行（如果组件支持）",
            "如果内容无法在固定宽度内完全显示，可能会出现显示不全的情况"
        ],
        "incorrect_choices": [
            "组件会自动忽略固定宽度设置，根据内容调整大小",
            "组件会变高以容纳所有内容",
            "应用会弹出警告提示宽度不足",
            "字体会自动缩小以适应固定宽度"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的多个触发器（例如，“上课时”和“特定窗口出现时”）同时被满足，工作流会如何执行？",
        "correct_choices": [
            "工作流通常只会被触发一次，即使多个触发器条件同时满足",
            "取决于 ClassIsland 内部事件处理的顺序，先检测到的触发条件会启动工作流"
        ],
        "incorrect_choices": [
            "工作流会为每个满足条件的触发器分别执行一次",
            "应用会提示用户选择哪个触发器来启动工作流",
            "工作流会被锁定，直到只有一个触发器条件满足",
            "优先级最高的触发器会启动工作流"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户添加了一个“行动”类型的时间点，但没有为其配置任何行动，会发生什么？",
        "correct_choices": [
            "到达该时间点时，不会执行任何自动化操作",
            "该时间点在主界面上可能不会有特别的显示（区别于课程或课间）"
        ],
        "incorrect_choices": [
            "应用会弹出一个错误提示，要求配置行动",
            "会自动执行一个默认的“无操作”行动",
            "该时间点会被自动删除",
            "主界面会显示“行动未配置”的提示"
        ]
    },
    {
        "body": "如果 ClassIsland 的“更新通道”设置为“测试版”，用户可能会遇到什么情况？",
        "correct_choices": [
            "可以提前体验到正在开发的新功能",
            "应用可能会比稳定版更加不稳定，可能存在未修复的 Bug"
        ],
        "incorrect_choices": [
            "应用更新会更加频繁，但功能与稳定版完全一致",
            "测试版需要付费才能使用",
            "测试版的功能会比稳定版少",
            "只能通过邀请码加入测试版通道"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“课表”的“触发规则”设置了在“周三”且“双周”启用，那么这个课表会在什么时候生效？",
        "correct_choices": [
            "当日期是周三，并且根据“学期开始时间”和“多周轮换偏移”计算出当前是双周时",
            "同时满足星期和周轮换条件时"
        ],
        "incorrect_choices": [
            "每周三都会生效，忽略周轮换设置",
            "只要是双周就会生效，忽略星期设置",
            "只在学期的第一个双周的周三生效",
            "需要用户在每周三手动确认启用"
        ]
    },
    {
        "body": "ClassIsland 的“从壁纸提取主题色”功能，如果用户使用的是多显示器环境，并且每个显示器壁纸不同，应用会提取哪个壁纸的主题色？",
        "correct_choices": [
            "通常是主显示器的壁纸",
            "如果设置了特定的“壁纸层窗口类名”，则会尝试从该窗口提取"
        ],
        "incorrect_choices": [
            "所有显示器壁纸颜色的平均色",
            "当前鼠标指针所在显示器的壁纸",
            "ClassIsland 主界面所在显示器的壁纸",
            "随机选择一个显示器的壁纸"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”中，如果一个插件的作者发布了新版本，但没有更新插件市场中的信息，用户会收到更新提示吗？",
        "correct_choices": [
            "通常不会，ClassIsland 的更新提示依赖于插件市场索引中的版本信息",
            "用户可能需要等待插件作者更新市场信息或手动检查插件官网"
        ],
        "incorrect_choices": [
            "是的，ClassIsland 会直接检查插件的 GitHub Release",
            "是的，插件会自动检查更新并提示",
            "只有付费插件才会自动提示更新",
            "ClassIsland 不支持插件更新提示"
        ]
    },
    {
        "body": "ClassIsland 的“教学安全模式”中，如果设置为“忽略”崩溃，对应用的稳定性有什么潜在风险？",
        "correct_choices": [
            "应用可能会处于不稳定状态，后续操作可能出现更多错误或数据损坏",
            "忽略崩溃可能导致问题根源难以排查"
        ],
        "incorrect_choices": [
            "没有任何风险，应用有强大的自我修复能力",
            "应用会自动修复所有被忽略的错误",
            "只会影响当前崩溃的功能，其他功能不受影响",
            "“忽略”模式会自动记录详细的调试信息供后续分析"
        ]
    },
    {
        "body": "ClassIsland 的“档案”文件（.json）是否可以直接用文本编辑器打开和修改？",
        "correct_choices": [
            "是的，它是 JSON 格式的文本文件，可以用文本编辑器查看和修改",
            "但不建议直接修改，除非用户非常清楚自己在做什么，否则容易导致配置损坏"
        ],
        "incorrect_choices": [
            "不可以，它是加密的二进制文件",
            "只能通过 ClassIsland 的档案编辑器打开",
            "需要特定的数据库软件才能打开",
            "打开后是乱码，无法直接编辑"
        ]
    },
    {
        "body": "ClassIsland 的主界面在显示时间点时，如果当前时间点设置了“默认科目”，但在课表中该时间点又被指定了其他科目，主界面会显示哪个科目？",
        "correct_choices": [
            "显示课表中指定的科目",
            "课表中的科目设置优先级高于时间点中的默认科目设置"
        ],
        "incorrect_choices": [
            "显示时间点中设置的默认科目",
            "两个科目名称会同时显示",
            "应用会提示冲突并要求用户选择",
            "显示为空白科目"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，备份文件的存储位置在哪里？",
        "correct_choices": [
            "ClassIsland 应用根目录下的 Backups 文件夹内",
            "通常是 ./Backups/"
        ],
        "incorrect_choices": [
            "用户的“我的文档”文件夹",
            "Windows 系统备份目录",
            "云端存储服务上",
            "ClassIsland 的安装目录下的 Cache 文件夹"
        ]
    },
    {
        "body": "ClassIsland 的“提醒”功能，如果用户在全局设置中禁用了所有提醒音效，但在某个提醒来源的特殊高级设置中启用了音效并指定了自定义音效文件，该提醒来源的提醒会播放音效吗？",
        "correct_choices": [
            "不会，全局的“允许启用提醒音效”开关控制是否播放任何音效",
            "如果全局“允许”开关未勾选，则所有音效设置（包括自定义的）都会被忽略"
        ],
        "incorrect_choices": [
            "会，单个提醒来源的设置优先于全局设置",
            "会，但只会播放默认音效，自定义音效会被忽略",
            "只有在连接了外置音箱时才会播放",
            "取决于提醒的类型，重要提醒会强制播放音效"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中存在空单元格代表没有课程，导入后这些时间点会如何处理？",
        "correct_choices": [
            "这些时间点对应的课程科目会为空",
            "用户需要在导入后手动为这些时间点分配科目或将其标记为“无课”"
        ],
        "incorrect_choices": [
            "应用会自动将这些时间点填充为“自习”",
            "这些时间点会被从时间表中删除",
            "导入过程会因空单元格而失败",
            "应用会提示用户为每个空单元格指定科目"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，如果打开了 Windows 任务管理器，主界面会显示在任务管理器之上还是之下？",
        "correct_choices": [
            "通常会显示在任务管理器之下，因为任务管理器有更高的置顶级别",
            "Windows 任务管理器等系统级窗口的置顶优先级通常非常高"
        ],
        "incorrect_choices": [
            "主界面会显示在任务管理器之上",
            "两个窗口会并排显示，互不遮挡",
            "主界面会自动隐藏",
            "取决于哪个窗口最后被激活"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 中安装了一个恶意插件，可能会造成哪些后果？",
        "correct_choices": [
            "插件可能获取用户的个人信息或修改系统文件",
            "插件可能导致应用不稳定或崩溃",
            "用户应只从可信来源安装插件"
        ],
        "incorrect_choices": [
            "ClassIsland 内置了强大的沙箱机制，可以完全阻止恶意插件的行为",
            "恶意插件只会被限制在 ClassIsland 的配置目录中活动",
            "Windows Defender 会自动检测并清除恶意插件",
            "插件市场的所有插件都经过了严格的安全审核，不存在恶意插件"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“规则集”的“当前科目是”规则，如果当前时间是课间休息，该规则会如何判定？",
        "correct_choices": [
            "通常判定为不满足，因为课间休息不属于任何特定科目",
            "除非规则中指定的科目是特殊的“课间休息”科目（如果存在这种设置）"
        ],
        "incorrect_choices": [
            "会判定为满足上一个上课时间点的科目",
            "会判定为满足下一个上课时间点的科目",
            "会随机选择一个科目进行判定",
            "应用会忽略此规则，直接判定为满足"
        ]
    },
    {
        "body": "在 ClassIsland 的“时间表编辑”中，如果用户希望某个时间段（如午休）不显示在主界面的课程列表中，但仍然作为一个独立的时间段存在（例如用于触发特定提醒），应该将该时间点类型设置为什么？",
        "correct_choices": [
            "课间休息（并自定义课间名称为“午休”）",
            "上课（并设置“默认隐藏”，科目可以设为“午休”或不设）"
        ],
        "incorrect_choices": [
            "分割线",
            "行动",
            "必须创建一个新的自定义时间点类型",
            "无法实现，所有时间点都会显示在列表中"
        ]
    },
    {
        "body": "ClassIsland 的“自动备份”功能，如果用户在自动备份间隔（如7天）内多次手动修改并保存了配置文件，自动备份会备份哪个版本的文件？",
        "correct_choices": [
            "自动备份时，会备份当前时刻的配置文件状态",
            "即使用户在间隔期内多次修改，自动备份也只关心备份触发那一刻的文件内容"
        ],
        "incorrect_choices": [
            "会备份最近一次手动保存的版本",
            "会备份7天前最后一次保存的版本",
            "会提示用户选择要备份哪个版本",
            "会自动合并间隔期内的所有修改，并备份合并后的版本"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，例如“倒计时日”，其显示的字体颜色是否可以自定义？",
        "correct_choices": [
            "是的，通常可以在该组件的设置中找到字体颜色相关的选项",
            "如果组件支持，可以通过其设置界面调整文字颜色"
        ],
        "incorrect_choices": [
            "不可以，所有组件的字体颜色都由全局主题控制",
            "只能选择预设的几种颜色",
            "需要修改组件的 XAML 代码才能更改颜色",
            "字体颜色会自动根据背景颜色反转"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，“清除临时文件”和“重置全部配置”在清除范围上有什么区别？",
        "correct_choices": [
            "“清除临时文件”只删除缓存和临时文件，不影响用户配置",
            "“重置全部配置”会删除应用设置、组件配置等，但保留档案数据",
            "“重置全部信息”则会删除包括档案在内的所有数据"
        ],
        "incorrect_choices": [
            "两者都会删除所有用户数据，只是清除方式不同",
            "“清除临时文件”会保留最近7天的缓存，“重置全部配置”则全部删除",
            "“重置全部配置”是“清除临时文件”的超集，包含了后者的所有操作",
            "没有区别，是同一功能的两种叫法"
        ]
    },
    {
        "body": "ClassIsland 的“集控”功能，如果集控清单中某个配置项（如课表文件）的URL模板包含了`{id}`，这意味着什么？",
        "correct_choices": [
            "ClassIsland客户端在请求该配置项时，会将`{id}`替换为客户端自身的集控ID",
            "允许管理员为不同ID的客户端分发不同的配置内容"
        ],
        "incorrect_choices": [
            "`{id}`代表配置项的版本号",
            "`{id}`代表当前登录用户的ID",
            "`{id}`是一个固定的字符串，所有客户端请求的URL都相同",
            "该配置项是可选的，如果客户端没有设置ID，则会忽略此项"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流同时包含“上课时”和“课间休息时”两个触发器，这个工作流的行动会在什么时候执行？",
        "correct_choices": [
            "当进入上课状态时执行一次，当进入课间休息状态时再执行一次",
            "只要其中一个触发器条件满足，工作流的行动就会被触发（如果规则集也满足的话）"
        ],
        "incorrect_choices": [
            "只有当同时处于上课和课间休息状态时才会执行（逻辑上不可能）",
            "应用会报错，不允许一个工作流有多个时间状态触发器",
            "只会响应第一个被定义的触发器（“上课时”）",
            "两个触发器会轮流触发行动"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”的时间轴视图中，如果多个时间点在时间轴上显示得非常拥挤，用户可以通过什么方式改善视图？",
        "correct_choices": [
            "点击右下角的“放大”按钮来拉长时间轴的显示比例",
            "调整时间轴的缩放比例"
        ],
        "incorrect_choices": [
            "删除一部分不重要的时间点",
            "将时间轴视图切换为列表视图",
            "在设置中减小时间点的默认高度",
            "开启“紧凑模式”"
        ]
    },
    {
        "body": "如果 ClassIsland 的“更新通道”设置为“稳定版”，但用户手动从 GitHub 下载并安装了一个最新的测试版，应用内的更新检查会提示什么？",
        "correct_choices": [
            "可能会提示“您已更新到最新版本”，因为它检查的是“稳定版”通道的最新版本",
            "如果测试版版本号高于稳定版最新版本，则会认为是最新"
        ],
        "incorrect_choices": [
            "会提示“检测到更新”，并尝试降级到稳定版",
            "会自动切换更新通道到“测试版”",
            "会忽略更新检查，直到稳定版发布新版本",
            "会报错，因为版本不匹配"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中的课程名称与 ClassIsland 中已有的某个科目名称完全一致，导入时会怎样？",
        "correct_choices": [
            "通常会自动匹配到这个已有的科目",
            "该课程会被正确关联到对应的科目ID"
        ],
        "incorrect_choices": [
            "会创建一个新的同名科目",
            "会提示用户确认是否使用已有科目",
            "导入会失败，因为科目名称重复",
            "会忽略这个课程"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置顶”时，如果用户打开了另一个也声明为“置顶”的第三方应用（如录屏软件的悬浮窗），哪个窗口会显示在最前面？",
        "correct_choices": [
            "通常是后获取到“置顶”焦点的窗口会显示在最前面",
            "行为可能因操作系统版本和具体应用实现而异，不完全确定"
        ],
        "incorrect_choices": [
            "ClassIsland 的窗口永远在最前面",
            "另一个应用程序的窗口永远在最前面",
            "两个窗口会交替闪烁",
            "系统会强制其中一个窗口取消置顶"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 中安装了一个插件，后来又手动删除了该插件在 Plugins 文件夹下的所有文件，ClassIsland 下次启动时会发生什么？",
        "correct_choices": [
            "该插件将不会被加载",
            "插件列表中可能不再显示该插件，或者显示为已卸载/错误状态"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动从插件市场重新下载并安装该插件",
            "应用会报错并无法启动",
            "该插件的配置信息会被保留，但功能失效",
            "系统会提示用户恢复被删除的文件"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的“行动组”包含多个行动，这些行动的执行顺序是怎样的？",
        "correct_choices": [
            "按照在行动列表中从上到下的顺序依次执行",
            "用户可以通过拖动调整行动的执行顺序"
        ],
        "incorrect_choices": [
            "所有行动会并行执行",
            "执行顺序是随机的",
            "根据行动的类型决定执行顺序（例如，修改设置的行动总是先执行）",
            "用户可以在每个行动上设置优先级"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，例如“天气简报”，如果用户所在的地区没有发布任何气象预警，该组件在显示预警的部分会怎样？",
        "correct_choices": [
            "通常不会显示任何预警图标或信息",
            "该部分会保持空白或不显示"
        ],
        "incorrect_choices": [
            "会显示“当前无预警”的文字提示",
            "会自动显示历史预警信息",
            "会显示一个默认的“晴朗”图标",
            "该组件会整体隐藏"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”设置，如果设置为一个较小的正值（例如5秒），这意味着什么？",
        "correct_choices": [
            "ClassIsland 内部计时会比标准时间（NTP或系统时间）晚 5 秒",
            "用于抵消学校铃声实际比标准时间早响的情况"
        ],
        "incorrect_choices": [
            "ClassIsland 内部计时会比标准时间早 5 秒",
            "所有课程的持续时间会增加 5 秒",
            "应用的主界面会提前 5 秒显示下一节课的信息",
            "提醒音效会延迟 5 秒播放"
        ]
    },
    {
        "body": "ClassIsland 的“恢复模式”中，“重置全部信息”选项执行后，用户之前安装的插件会怎样？",
        "correct_choices": [
            "插件及其配置都会被删除",
            "应用会恢复到类似全新安装的状态，不包含任何用户安装的插件"
        ],
        "incorrect_choices": [
            "插件会被保留，但其配置会被重置",
            "插件会被禁用，但文件仍保留在 Plugins 文件夹中",
            "只有通过插件市场安装的插件会被删除，手动安装的插件不受影响",
            "应用会尝试从云端恢复插件列表"
        ]
    },
    {
        "body": "ClassIsland 的“集控”功能中，如果管理员在策略文件中设置“DisableDebugMenu”为 true，用户还能通过连续点击应用图标的方式打开调试菜单吗？",
        "correct_choices": [
            "不能，集控策略会禁用调试菜单的入口",
            "即使用户知道如何开启，该功能也会被阻止"
        ],
        "incorrect_choices": [
            "可以，但打开后调试菜单中的选项会变少",
            "可以，但需要输入管理员密码",
            "可以，但应用会记录此行为并上报给管理员",
            "取决于 ClassIsland 的版本，旧版本可能不受此策略影响"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，如果设置了“最小宽度”为一个较大的值，而组件内容很少，会导致什么显示效果？",
        "correct_choices": [
            "组件的宽度会至少保持在设置的最小宽度，即使内容不需要那么宽",
            "组件可能会显得比较空旷"
        ],
        "incorrect_choices": [
            "组件会自动忽略最小宽度设置，根据内容收缩",
            "组件的字体会自动放大以填满最小宽度",
            "应用会提示用户减小最小宽度设置",
            "组件会显示一个错误图标"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“显示提醒”行动，如果“遮罩内容”和“正文内容”都设置为空字符串，会发生什么？",
        "correct_choices": [
            "可能不会显示任何可见的提醒内容，或者只显示一个空的提醒框",
            "如果同时设置了语音播报，语音播报可能仍会进行（如果播报内容不为空）"
        ],
        "incorrect_choices": [
            "应用会使用默认的“提醒”文字作为内容",
            "该行动会被忽略，不执行",
            "会弹出一个错误提示，要求填写内容",
            "会自动显示当前的时间作为提醒内容"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换偏移”设置，如果用户学校实行的是“四周轮换”，但用户只调整了“单双周”的偏移，会对“四周轮换”的课表产生什么影响？",
        "correct_choices": [
            "“四周轮换”的课表可能无法在正确的周次显示，因为它依赖于“四周轮换”的偏移设置",
            "用户需要同时调整“四周轮换”的偏移才能使其正确工作"
        ],
        "incorrect_choices": [
            "“四周轮换”会自动适配“单双周”的偏移设置",
            "“四周轮换”功能会被禁用",
            "应用会提示用户设置“四周轮换”的偏移",
            "不会有任何影响，两者是独立计算的"
        ]
    },
    {
        "body": "如果 ClassIsland 的提醒音效文件路径设置不正确（例如文件不存在），在触发提醒时会发生什么？",
        "correct_choices": [
            "如果启用了提醒音效，可能会播放默认的应用内置音效",
            "或者可能不会播放任何音效，并可能在日志中记录错误"
        ],
        "incorrect_choices": [
            "应用会尝试从网上下载对应的音效文件",
            "会弹出一个错误对话框提示文件不存在",
            "提醒功能会被整体禁用",
            "电脑会发出蜂鸣声"
        ]
    },
    {
        "body": "ClassIsland 的“调试菜单”中的“崩溃测试”选项是用来做什么的？",
        "correct_choices": [
            "故意触发一个未处理的异常，以测试应用的崩溃处理机制",
            "供开发者或高级用户模拟应用崩溃场景"
        ],
        "incorrect_choices": [
            "对应用的性能进行压力测试",
            "检查应用的配置文件是否存在语法错误",
            "扫描系统是否存在与 ClassIsland 冲突的软件",
            "自动修复已知的应用 Bug"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，如果一个插件在 `Initialize` 方法中注册了一个后台服务，但在插件被禁用或卸载时没有正确注销或停止该服务，可能会导致什么问题？",
        "correct_choices": [
            "该后台服务可能仍在运行，继续占用系统资源或执行操作，即使插件已不再活动",
            "可能导致内存泄漏或应用行为异常"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动检测并停止所有来自已禁用/卸载插件的服务",
            "该服务会自动转为低功耗模式",
            "不会有任何问题，.NET 的垃圾回收机制会自动处理",
            "系统会提示用户手动停止该服务"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户将一个“上课”时间点的开始时间设置得比前一个“课间休息”时间点的结束时间还要早，会发生什么？",
        "correct_choices": [
            "这会导致时间点重叠，是不合逻辑的设置",
            "应用可能允许这种保存，但主界面的课表显示和提醒逻辑可能会出错"
        ],
        "incorrect_choices": [
            "应用会自动将该“上课”时间点移动到“课间休息”之后",
            "“课间休息”时间点会被自动缩短或删除",
            "会弹出一个错误提示，阻止保存时间表",
            "两个时间点会合并为一个更长的时间点"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中存在多张工作表（Sheet），默认会从哪张工作表导入数据？",
        "correct_choices": [
            "通常是当前活动或第一张可见的工作表",
            "导入向导界面可能会提供切换工作表的选项"
        ],
        "incorrect_choices": [
            "会尝试合并所有工作表的数据进行导入",
            "只从名为“课表”或“Schedule”的工作表导入",
            "会提示用户选择要导入的工作表",
            "导入功能不支持包含多张工作表的 Excel 文件"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置底”时，如果用户打开了桌面快捷方式（图标），主界面会显示在桌面图标之上还是之下？",
        "correct_choices": [
            "主界面会显示在桌面图标之下，因为桌面图标本身也是窗口的一部分",
            "置底效果类似于将主界面作为桌面背景的一部分"
        ],
        "incorrect_choices": [
            "主界面会显示在桌面图标之上",
            "主界面会自动避开桌面图标的区域显示",
            "桌面图标会变得半透明以显示主界面",
            "取决于桌面图标的排列方式"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的插件市场禁用了某个已安装的插件，该插件的配置文件（如果存在）会发生什么？",
        "correct_choices": [
            "配置文件通常会保留在插件的配置目录中",
            "禁用插件一般不删除其配置数据，以便用户后续重新启用"
        ],
        "incorrect_choices": [
            "配置文件会被自动删除",
            "配置文件会被移动到回收站",
            "配置文件会被重命名为 .bak 后缀",
            "配置文件会被加密锁定"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的触发器是“当前天气是雨”，并且设置了“反转”规则，那么这个工作流的规则集何时会被视为满足？",
        "correct_choices": [
            "当当前天气不是雨的时候",
            "当“当前天气是雨”这个条件为假时"
        ],
        "incorrect_choices": [
            "当当前天气是雨的时候",
            "只有在下冰雹的时候",
            "该设置无效，天气规则不支持反转",
            "需要同时满足其他未反转的条件"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“课表”没有设置任何“触发规则”（星期和周次都未指定或设为默认），它会如何被应用加载？",
        "correct_choices": [
            "如果该课表的“自动启用”被勾选，它可能会在不符合任何特定日期规则的情况下被错误地加载（取决于默认逻辑）",
            "如果“自动启用”未勾选，则只能通过临时课表或临时层手动启用"
        ],
        "incorrect_choices": [
            "该课表永远不会被加载",
            "应用会提示用户为此课表设置触发规则",
            "该课表会被视为“全局课表”，每天都尝试加载",
            "该课表只在周末生效"
        ]
    },
    {
        "body": "ClassIsland 的“时间表”中的“行动”时间点，如果其关联的“行动组”包含多个行动，这些行动会如何执行？",
        "correct_choices": [
            "当到达该“行动”时间点时，行动组中的所有行动会按照预设顺序依次执行",
            "类似于自动化工作流中的行动组执行方式"
        ],
        "incorrect_choices": [
            "只会执行行动组中的第一个行动",
            "所有行动会并行同时执行",
            "用户需要在到达时间点时手动确认执行每个行动",
            "行动的执行顺序是随机的"
        ]
    },
    {
        "body": "如果 ClassIsland 的主界面因为“按规则隐藏”而被隐藏，用户可以通过什么方式临时显示它？",
        "correct_choices": [
            "在托盘菜单中选择“显示主界面”（如果规则允许临时覆盖）",
            "修改导致隐藏的规则条件，使其不再满足（例如切换活动窗口）"
        ],
        "incorrect_choices": [
            "双击托盘图标",
            "重启 ClassIsland 应用",
            "无法临时显示，必须等待规则不再满足",
            "按下特定的键盘快捷键"
        ]
    },
    {
        "body": "ClassIsland 的“组件配置文件”（如 Default.json）如果被意外删除，下次启动 ClassIsland 时会发生什么？",
        "correct_choices": [
            "应用会自动创建一个新的默认组件配置文件",
            "主界面会恢复到默认的组件布局和设置"
        ],
        "incorrect_choices": [
            "应用将无法启动，并提示配置文件丢失",
            "主界面将不显示任何组件",
            "会尝试从备份中恢复（如果备份功能正常且有可用备份）",
            "会提示用户手动选择一个组件配置文件"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，如果“主题色来源”设置为“系统”，但 Windows 系统的强调色是灰色或黑色，ClassIsland 的主题色会是？",
        "correct_choices": [
            "可能会使用一种预设的备用颜色（如蓝色系），以保证界面可读性",
            "不会直接使用灰色或黑色作为主强调色，因为可能导致界面元素不可见"
        ],
        "incorrect_choices": [
            "严格匹配系统的灰色或黑色，可能导致界面元素难以辨认",
            "会自动切换到“自定义”颜色来源",
            "提示用户选择一个更合适的系统强调色",
            "会使用壁纸颜色作为备选"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“显示提醒”行动的“遮罩持续时长”和“正文持续时长”如果都设置为0，会发生什么？",
        "correct_choices": [
            "该提醒可能不会显示任何可见内容，或者只是一闪而过",
            "如果同时设置了语音播报且播报内容不为空，语音可能仍会尝试播放（但可能被立即打断）"
        ],
        "incorrect_choices": [
            "应用会使用默认的持续时长（各5秒）",
            "该行动会被忽略，不执行",
            "会弹出一个错误提示，要求设置有效的持续时长",
            "遮罩和正文会无限期显示，直到手动清除"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换偏移”设置，如果学校实行的是三周轮换，用户应该主要调整哪个选项的偏移？",
        "correct_choices": [
            "“三周轮换”对应的偏移设置",
            "确保选择“三周轮换”并设置正确的当前周数"
        ],
        "incorrect_choices": [
            "“单双周”的偏移设置",
            "“四周轮换”的偏移设置",
            "“学期开始时间”设置",
            "所有轮换选项都需要设置相同的偏移值"
        ]
    },
    {
        "body": "如果 ClassIsland 的提醒音效在播放时声音过大或过小，用户可以在哪里调整？",
        "correct_choices": [
            "在【应用设置】->【提醒】->【高级设置】中的“音效音量”滑块",
            "如果该提醒来源的特殊高级设置中也配置了音量，则以该设置为准（取决于具体实现逻辑）"
        ],
        "incorrect_choices": [
            "只能在 Windows 系统的音量合成器中调整",
            "需要修改音效文件本身的音量",
            "在主界面的托盘菜单中有快捷音量调节",
            "无法调整，音量是固定的"
        ]
    },
    {
        "body": "ClassIsland 的“调试菜单”中的“动画缩放”选项，如果设置为一个很小的值（如0.1），会对应用产生什么影响？",
        "correct_choices": [
            "主界面的某些过渡动画（如提醒出现/消失）会变得非常快，几乎是瞬时完成",
            "可能会让用户感觉应用响应更快，但失去了平滑的视觉效果"
        ],
        "incorrect_choices": [
            "动画会变得非常慢",
            "应用界面的整体大小会缩小到10%",
            "所有动画效果会被禁用",
            "会导致应用卡顿或崩溃"
        ]
    },
    {
        "body": "ClassIsland 的“插件”功能，如果两个插件都尝试注册同一个ID的组件，会发生什么？",
        "correct_choices": [
            "后加载的插件在注册同ID组件时可能会失败，并记录错误",
            "只有一个插件的组件会成功注册，另一个会被忽略或报错"
        ],
        "incorrect_choices": [
            "两个组件会合并功能，同时显示在组件库中",
            "ClassIsland 会自动为后加载的插件的组件分配一个新的ID",
            "会弹出一个对话框让用户选择保留哪个插件的组件",
            "应用会无法启动"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户创建了一个没有任何时间点（上课、课间、分割线、行动都为空）的时间表，并在某个课表中使用了它，这个课表在主界面会如何显示？",
        "correct_choices": [
            "主界面可能显示为空，或者只显示一个表示“无课表”或“时间表为空”的占位符",
            "因为没有时间点信息，无法展示课程进度或当前状态"
        ],
        "incorrect_choices": [
            "应用会自动填充默认的上下课时间点",
            "该课表会被自动禁用",
            "会使用上一个成功加载的课表的时间表进行显示",
            "应用会报错并阻止加载该课表"
        ]
    },
    {
        "body": "ClassIsland 的“从表格导入课表”功能，如果表格中使用了自定义的课程名称缩写（例如“物理实验”缩写为“物实”），而 ClassIsland 的科目列表中只有“物理实验”这个全称，导入时会怎样？",
        "correct_choices": [
            "可能无法自动匹配到“物理实验”科目，导致该课程的科目为空",
            "用户需要在导入后手动将“物实”对应的课程科目设置为“物理实验”"
        ],
        "incorrect_choices": [
            "应用会自动识别“物实”是“物理实验”的缩写",
            "会创建一个名为“物实”的新科目",
            "导入会失败，并提示找不到科目",
            "会忽略这些无法匹配的课程"
        ]
    },
    {
        "body": "ClassIsland 的“窗口层级”设置为“置底”时，如果用户打开了 Windows 的“显示桌面”功能（例如通过任务栏按钮或 Win+D），主界面会怎样？",
        "correct_choices": [
            "主界面仍然会显示在桌面上，因为它本身就处于类似壁纸的层级",
            "“显示桌面”操作通常不会影响置底窗口的可见性"
        ],
        "incorrect_choices": [
            "主界面也会被最小化",
            "主界面会暂时隐藏，直到用户再次显示所有窗口",
            "主界面会变成透明，但仍然存在",
            "主界面会被移动到屏幕边缘"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的插件市场启用了某个插件，但该插件的`manifest.yml`中指定的入口程序集（`entranceAssembly`）文件在插件目录中不存在或已损坏，ClassIsland 启动时会发生什么？",
        "correct_choices": [
            "该插件加载会失败，并在插件列表中显示错误状态",
            "应用日志中可能会记录相关的加载错误信息"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动从插件市场重新下载该插件",
            "应用会尝试从其他 .dll 文件中查找插件入口点",
            "该插件会被自动禁用",
            "应用会无法启动，并提示插件错误"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的“规则集”设置为“当前科目是语文”，并且“行动组”设置为“打开 Word 文档”，那么在非语文课时，这个 Word 文档会被打开吗？",
        "correct_choices": [
            "不会，因为规则集（当前科目是语文）不满足，所以行动不会被触发（假设启用了条件判定）",
            "只有在语文课时，该行动才可能被触发"
        ],
        "incorrect_choices": [
            "会，因为行动组总是会被执行，规则集只影响恢复行为",
            "会，但只在第一次非语文课时打开，之后不再打开",
            "取决于触发器的设置，与规则集无关",
            "会弹出一个提示询问是否打开 Word 文档"
        ]
    },
    {
        "body": "ClassIsland 的“从壁纸提取主题色”功能，如果用户设置了纯黑色的壁纸，提取到的主题色板中可能会包含哪些颜色？",
        "correct_choices": [
            "可能主要是深色系的颜色，或者一些亮度较低的灰色",
            "如果算法难以从纯黑中提取多样颜色，可能会包含一些备用或默认颜色"
        ],
        "incorrect_choices": [
            "会包含彩虹的所有颜色",
            "会随机生成一组鲜艳的颜色",
            "无法提取颜色，主题色会保持不变",
            "会提取屏幕上其他窗口的颜色"
        ]
    },
    {
        "body": "ClassIsland 的“插件市场”中，如果用户尝试安装一个与当前 ClassIsland 版本不兼容的插件（例如插件要求的 `apiVersion` 高于当前应用版本），会发生什么？",
        "correct_choices": [
            "插件可能无法安装，或者安装后无法加载",
            "应用可能会在插件列表或日志中提示版本不兼容"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动降级以兼容该插件",
            "插件会自动调整自身以适应当前 ClassIsland 版本",
            "不会有任何提示，插件会静默安装但无法使用",
            "应用会强制更新到与插件兼容的最新版本"
        ]
    },
    {
        "body": "ClassIsland 的“教学安全模式”中，如果设置为“静默重启应用”，当应用崩溃时用户会看到什么？",
        "correct_choices": [
            "应用窗口可能会消失，然后自动重新启动，过程中可能没有明显的提示",
            "旨在尽可能不打断教学过程"
        ],
        "incorrect_choices": [
            "会弹出一个“应用已崩溃，正在重启”的对话框",
            "会播放一段重启提示音效",
            "屏幕会短暂变黑，然后应用重新出现",
            "需要用户手动点击“重启”按钮"
        ]
    },
    {
        "body": "在 ClassIsland 的“档案编辑”中，如果一个“课表”的“触发规则”中“多周轮换总周数”设置为0，这意味着什么？",
        "correct_choices": [
            "该课表不参与多周轮换，每周的这一天都会尝试加载（如果星期匹配）",
            "“当本周是”的设置会被忽略"
        ],
        "incorrect_choices": [
            "该课表永远不会被自动加载",
            "该课表只在单周生效",
            "该课表只在双周生效",
            "应用会默认使用两周轮换规则"
        ]
    },
    {
        "body": "ClassIsland 的主界面组件，例如“文本组件”，其显示的文本内容可以包含换行符吗？",
        "correct_choices": [
            "是的，通常可以在文本组件的设置中输入包含换行符的多行文本",
            "主界面会按照换行符显示多行文本"
        ],
        "incorrect_choices": [
            "不可以，所有文本都必须在单行显示",
            "换行符会被转换为空格",
            "只有通过插件添加的自定义文本组件才支持换行",
            "需要使用特殊的HTML标签来实现换行"
        ]
    },
    {
        "body": "ClassIsland 的“时间偏移”设置中的“自动时间偏移”，如果设置为每天减少2秒，并且当前时间偏移为0，一周后时间偏移会变成多少？",
        "correct_choices": [
            "-14秒 （如果每天都触发了自动调整）",
            "大约是 -14 秒，取决于期间应用是否每天都正常运行并执行了调整"
        ],
        "incorrect_choices": [
            "14秒",
            "0秒（自动偏移只在正向调整时生效）",
            "-2秒（只调整一次）",
            "保持为0秒，自动偏移不会累加"
        ]
    },
    {
        "body": "ClassIsland 的“组件”配置文件如果被用户手动编辑并引入了语法错误（例如JSON格式不正确），下次启动 ClassIsland 时会发生什么？",
        "correct_choices": [
            "该组件配置文件可能无法加载，应用会尝试加载备份文件（如果有）",
            "如果备份文件也无法加载，该组件配置方案可能会恢复到默认设置",
            "日志中可能会记录配置文件解析错误的信息"
        ],
        "incorrect_choices": [
            "应用会自动修复配置文件中的语法错误",
            "ClassIsland 将无法启动，并提示配置文件损坏",
            "会忽略错误的配置项，只加载正确的部分",
            "会弹出一个文本编辑器让用户手动修复配置文件"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，如果“主题色来源”设置为“系统壁纸”，但用户没有设置任何壁纸（桌面是纯黑色背景），提取到的主题色会是什么？",
        "correct_choices": [
            "可能会提取到黑色或深灰色系作为主色调",
            "如果无法从纯黑背景中提取有效颜色，可能会使用备用或默认颜色方案"
        ],
        "incorrect_choices": [
            "会使用 ClassIsland 的默认蓝色主题",
            "会自动切换到“自定义”颜色来源并要求用户选择",
            "应用会报错并提示无法获取壁纸颜色",
            "会提取任务栏的颜色作为主题色"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“显示天气提醒”行动，如果选择显示“三天天气预报”，但当前网络断开无法获取最新天气，会发生什么？",
        "correct_choices": [
            "可能会显示上一次成功获取并缓存的天气预报信息",
            "如果没有任何缓存信息，可能不会显示任何内容或显示获取失败的提示"
        ],
        "incorrect_choices": [
            "该行动会被自动跳过",
            "会弹出一个网络错误对话框",
            "会显示一个默认的“晴朗”天气预报",
            "应用会尝试通过短信获取天气信息"
        ]
    },
    {
        "body": "ClassIsland 的“时间表编辑器”中，如果用户不小心删除了一个正在活动课表中被使用的时间点，是否可以立即撤销操作？",
        "correct_choices": [
            "ClassIsland 的时间表编辑器目前没有内置的撤销（Undo）功能",
            "删除操作通常是不可逆的，需要手动重新添加或从备份恢复"
        ],
        "incorrect_choices": [
            "可以，通过按 Ctrl+Z 或点击工具栏的“撤销”按钮",
            "删除的时间点会被临时存放到回收站，可以从中恢复",
            "应用会自动创建一个备份，在误删除后可以一键恢复",
            "只有管理员才能撤销删除操作"
        ]
    },
    {
        "body": "如果用户在 ClassIsland 的“插件市场”卸载了一个插件，该插件之前创建的配置文件（在 Config/Plugins/插件ID/ 目录下）会发生什么？",
        "correct_choices": [
            "配置文件通常不会被自动删除，会保留在原位",
            "这是为了防止用户数据丢失，方便用户后续可能重新安装或手动处理配置"
        ],
        "incorrect_choices": [
            "配置文件会被立即彻底删除",
            "配置文件会被移动到回收站",
            "配置文件会被重命名并存档到备份目录",
            "应用会提示用户是否保留配置文件"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，如果一个工作流的行动是“退出 ClassIsland”，并且该工作流被一个每分钟触发一次的“Cron触发器”触发，会发生什么？",
        "correct_choices": [
            "ClassIsland 会在触发器首次触发时执行“退出应用”行动并关闭",
            "除非有其他机制阻止退出，否则应用会在第一次满足条件时关闭"
        ],
        "incorrect_choices": [
            "应用会每分钟尝试退出一次，但如果已退出则无法再次执行",
            "会弹出一个确认对话框询问是否退出，每分钟一次",
            "该行动会被忽略，因为过于危险",
            "只有在用户手动点击“触发”按钮时才会退出"
        ]
    },
    {
        "body": "ClassIsland 主界面上的“课程表”组件，在显示多节课时，如果某节课的科目名称特别长，会如何显示？",
        "correct_choices": [
            "如果空间不足，长科目名称可能会被截断并显示省略号（...）",
            "如果该课程是当前课程并展开显示，可能会有更多空间显示完整名称"
        ],
        "incorrect_choices": [
            "字体会自动缩小以完整显示科目名称",
            "科目名称会自动换行显示",
            "该课程会被隐藏，只显示科目简称",
            "主界面会自动调整宽度以适应最长的科目名称"
        ]
    },
    {
        "body": "ClassIsland 的“精确时间服务”中，“同步状态信息”显示“时间尚未同步”通常是什么原因？",
        "correct_choices": [
            "应用刚启动，还未完成首次NTP时间同步",
            "无法连接到指定的NTP服务器（如网络问题或服务器地址错误）",
            "“使用精确时间”选项未勾选（此时不会进行同步）"
        ],
        "incorrect_choices": [
            "电脑的系统时间与标准时间完全一致，无需同步",
            "这是一个正常的提示信息，表示时间同步功能已准备就绪",
            "NTP服务器返回的时间与系统时间差异过大，拒绝同步",
            "用户的ClassIsland版本过低，不支持时间同步"
        ]
    },
    {
        "body": "ClassIsland 的“组件配置文件”如果被设置为只读属性，ClassIsland 在尝试保存组件配置更改时会发生什么？",
        "correct_choices": [
            "保存操作可能会失败，更改可能不会被持久化",
            "应用可能会在日志中记录文件写入错误的信息",
            "用户在组件设置页面所做的更改，在下次启动应用时可能会丢失"
        ],
        "incorrect_choices": [
            "ClassIsland 会自动解除文件的只读属性并成功保存",
            "会弹出一个权限提升请求（UAC）以获取写入权限",
            "会将更改保存到一个新的临时文件中",
            "不会有任何影响，ClassIsland 使用内存缓存配置"
        ]
    },
    {
        "body": "在 ClassIsland 的主题设置中，“主题色来源”设置为“屏幕主题色”时，应用是如何获取颜色的？",
        "correct_choices": [
            "对主界面停靠的显示器进行截图，并分析截图中的主要颜色",
            "定期对指定屏幕区域进行颜色分析"
        ],
        "incorrect_choices": [
            "读取 Windows 系统注册表中存储的屏幕颜色配置文件",
            "使用摄像头分析当前环境光线的颜色",
            "连接到一个在线颜色服务获取推荐颜色",
            "根据当前时间（如日出日落）自动变换颜色"
        ]
    },
    {
        "body": "ClassIsland 的“自动化”功能中，“显示提醒”行动的“遮罩语音内容”和“正文语音内容”如果都设置为空字符串，但“启用语音”被勾选，会发生什么？",
        "correct_choices": [
            "不会有任何语音播报，因为没有内容可播",
            "等同于没有启用语音播报"
        ],
        "incorrect_choices": [
            "应用会使用默认的“提醒”作为语音内容",
            "会尝试播报遮罩和正文的UI元素文本（如果它们是文本的话）",
            "会弹出一个错误提示，要求填写语音内容",
            "会播放一段简短的提示音效代替语音"
        ]
    },
    {
        "body": "ClassIsland 的“多周轮换偏移”设置，如果学校从本周开始实行新的轮换制度（例如，本周是三周轮换的第一周），用户应该如何调整偏移？",
        "correct_choices": [
            "在“三周轮换”选项中选择“1/3周”或类似表示第一周的选项",
            "确保“学期开始时间”设置正确，以便应用能正确计算当前是相对于学期开始的第几周"
        ],
        "incorrect_choices": [
            "将“学期开始时间”设置为本周一",
            "在所有轮换选项（单双周、三周、四周）中都设置为第一周",
            "重置所有课表和时间表",
            "该功能无法适应中途变更的轮换制度，需要等待下学期"
        ]
    },
    {
        "body": "如果 ClassIsland 的提醒音效突然变小或消失，但系统其他声音正常，可能是什么原因？",
        "correct_choices": [
            "在【应用设置】->【提醒】->【高级设置】中的“音效音量”被调低了",
            "某个提醒来源的特殊高级设置中，音效被禁用或音量被调低",
            "自定义音效文件本身音量较小或已损坏/被移动"
        ],
        "incorrect_choices": [
            "电脑的声卡驱动需要更新",
            "ClassIsland 应用需要更新",
            "Windows 系统的音量合成器中 ClassIsland 的音量被单独调低",
            "这是提醒功能的正常特性，音量会随时间自动衰减"
        ]
    },
    {
        "body": "ClassIsland 的“调试菜单”中的“时间流速”选项，如果设置为2.0，会对应用内部时间产生什么影响？",
        "correct_choices": [
            "ClassIsland 内部感知到的时间流逝速度会变为正常速度的两倍",
            "课程进度、倒计时等会以两倍速进行"
        ],
        "incorrect_choices": [
            "应用的所有动画播放速度会变为两倍",
            "电脑的系统时间会加速",
            "时间流速会变为正常速度的一半（0.5倍）",
            "这是一个显示设置，不会影响实际计时逻辑"
        ]
    }
]