# 应用程序配置示例 (Application Configuration Example)
# 实际配置通常通过 data/settings.json 或代码内默认值进行管理。
# 如果需要通过环境变量覆盖，需要在 app/core/config.py 的 Settings 模型中
# 为相应字段配置 os.getenv。

# --- 应用基本设置 ---
# LISTENING_PORT=17071
# APP_DOMAIN=localhost
# FRONTEND_DOMAIN=http://localhost:3000
# DEBUG_MODE=False

# --- 日志配置 ---
# 当前日志级别 (log_level) 和日志文件名 (log_file_name) 主要通过 data/settings.json 或代码默认值 (app/core/config.py) 配置。
# 日志文件基础目录 (data_dir) 默认为项目根目录下的 'data/'。
# 日志文件会自动按UTC午夜进行轮转，并保留最近7天的备份。这些轮转参数目前在代码中设置。
#
# 以下为未来可能通过环境变量配置日志参数的示例格式 (需要在Settings模型中适配getenv)：
# UNIEXAM_LOG_LEVEL=INFO  # 可选: DEBUG, INFO, WARNING, ERROR, CRITICAL
# UNIEXAM_LOG_FILE_NAME=my_app.log # 可选: 自定义日志文件名
# UNIEXAM_DATA_DIR=/var/log/uniexam/ # 可选: 自定义数据/日志存储目录路径

# --- 数据库配置 (具体取决于 app/core/config.py -> Settings.data_storage_type 的值) ---
# DATA_STORAGE_TYPE=json # 可选: json, sqlite, postgres, mysql, redis

# 如果使用 PostgreSQL (示例):
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_USER=youruser
# POSTGRES_PASSWORD=yourpassword
# POSTGRES_DB=yourdatabase
# POSTGRES_DSN=postgresql+asyncpg://youruser:yourpassword@localhost:5432/yourdatabase # (此连接字符串优先)

# 如果使用 MySQL (示例):
# MYSQL_HOST=localhost
# MYSQL_PORT=3306
# MYSQL_USER=youruser
# MYSQL_PASSWORD=yourpassword
# MYSQL_DB=yourdatabase

# 如果使用 Redis (通常用于缓存或Token管理，非主数据存储):
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PASSWORD=
# REDIS_URL=redis://localhost:6379/0 # (此连接字符串优先)

# 如果使用 SQLite (示例):
# SQLITE_DB_PATH=data/app.db # 路径相对于项目根目录

# --- 管理员账户 ---
# 初始管理员密码 (仅在首次启动且用户数据库为空时，可能通过环境变量 DEFAULT_ADMIN_PASSWORD_OVERRIDE 设置)
# DEFAULT_ADMIN_PASSWORD_OVERRIDE="YourComplexPasswordHere"

# --- 其他业务逻辑相关配置 (这些通常在 data/settings.json 中配置) ---
# TOKEN_EXPIRY_HOURS=24
# NUM_QUESTIONS_PER_PAPER_DEFAULT=20
# PASSING_SCORE_PERCENTAGE=60.0
# GENERATED_CODE_LENGTH_BYTES=8 # 用于选项ID和通行码的随机字符串字节长度
# 等... (更多配置项请参考 app/core/config.py 中的 Settings 模型)
